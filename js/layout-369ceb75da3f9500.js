(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3998],{2503:function(e,t,i){Promise.resolve().then(i.bind(i,35289)),Promise.resolve().then(i.bind(i,90482)),Promise.resolve().then(i.bind(i,44437)),Promise.resolve().then(i.bind(i,41534)),Promise.resolve().then(i.bind(i,37276)),Promise.resolve().then(i.bind(i,88041)),Promise.resolve().then(i.t.bind(i,13031,23)),Promise.resolve().then(i.bind(i,12886)),Promise.resolve().then(i.bind(i,94788))},42693:function(e,t,i){"use strict";i.d(t,{XX:function(){return s},a$:function(){return a}});let a="https://muxed.s3.amazonaws.com/leds.mp4",s="https://muxed.s3.amazonaws.com/example-watermark.png"},35289:function(e,t,i){"use strict";i.r(t),i.d(t,{default:function(){return ep}});var a,s,r,o,n,d,p,c,l,h,u,m,f,y,g=i(67647),b=i(62532),v=i(80169),w=i(37276),_=i(6121);let x="@%#*+=-:. ";var T=e=>{let{playbackId:t,onExit:i}=e,a=(0,b.useRef)(null),s=(0,b.useRef)(null),[r,o]=(0,b.useState)([]),[n,d]=(0,b.useState)(!0);(0,b.useEffect)(()=>{let e;let t=s.current,i=null==t?void 0:t.getContext("2d");if(!t||!i||!a.current)return;t.width=120,t.height=40;let r=a.current.media.nativeEl,d=()=>{i.drawImage(r,0,0,120,40);let e=i.getImageData(0,0,120,40),t=[];for(let i=0;i<40;i++){let a=[];for(let t=0;t<120;t++){let s=(120*i+t)*4,r=e.data[s],o=e.data[s+1],n=e.data[s+2],d=Math.floor((.299*r+.587*o+.114*n)/255*(x.length-1)),p=x[d];a.push((0,g.jsx)("span",{style:{color:"rgb(".concat(r,",").concat(o,",").concat(n,")")},children:p},t))}t.push((0,g.jsx)("div",{children:a},i))}o(t)},p=()=>{n&&r.readyState>=2&&d(),e=requestAnimationFrame(p)};return r.addEventListener("loadeddata",p),()=>{cancelAnimationFrame(e),r.removeEventListener("loadeddata",p)}},[t,n]);let p=(0,b.useCallback)(e=>{if(" "===e.key){var t;d(e=>!e);let e=null===(t=a.current)||void 0===t?void 0:t.media.nativeEl;e&&(n?e.pause():e.play())}else"Escape"===e.key&&i()},[n,i,a]);return(0,b.useEffect)(()=>(window.addEventListener("keydown",p),()=>{window.removeEventListener("keydown",p)}),[n,p]),(0,g.jsxs)("div",{className:"ascii-video relative flex h-full w-full flex-col items-center justify-center bg-charcoal",children:[(0,g.jsx)(_.ZP,{ref:a,playbackId:t,autoPlay:!0,style:{display:"none"}}),(0,g.jsx)("canvas",{ref:s,className:"hidden"}),(0,g.jsx)("div",{className:"aspect-video whitespace-pre font-mono leading-mono",style:{fontSize:"0.5rem",lineHeight:"0.5rem"},children:r}),(0,g.jsxs)("div",{className:"mt-0.25 text-sm text-gray-47",children:["Press ",(0,g.jsx)("span",{className:"font-bold",children:"Space"})," to play/pause, ",(0,g.jsx)("span",{className:"font-bold",children:"Esc"})," to exit"]})]})},k=e=>{let{playbackId:t}=e;return(0,g.jsx)("a",{href:"https://stream.new/v/".concat(t),target:"_blank",className:"ml-0.25 inline-block select-none rounded-0.125 border border-white px-0.25 py-0.125 text-xs text-white hover:bg-white hover:text-charcoal",children:"View on stream.new"})},S=i(47718),A=e=>{let{children:t,content:i}=e;return(0,g.jsx)(S.zt,{delayDuration:0,children:(0,g.jsxs)(S.fC,{children:[(0,g.jsx)(S.xz,{asChild:!0,children:t}),(0,g.jsx)(S.h_,{children:(0,g.jsxs)(S.VY,{style:{minWidth:"300px"},className:"z-50 max-w-18 bg-purple p-0.5 text-sm text-white shadow-lg",side:"right",sideOffset:2,children:[i,(0,g.jsx)(S.Eh,{className:"fill-purple"})]})})]})})},M=i(98927),q=i(41048),j=i(74954),L=i(74224),D=i(35123);i(10175);let U={...j.R,attributes:{...j.R.attributes,span:[...(null===(p=j.R.attributes)||void 0===p?void 0:p.span)||[],"style"]}};function R(e){let{content:t=""}=e,i=t.replace(/\{#(.*?)\}(.*?)\{\/\}/g,(e,t,i)=>'<span style="color: #'.concat(t,';">').concat(i,"</span>"));return(0,g.jsx)("div",{className:"markdown-content",children:(0,g.jsx)(M.U,{remarkPlugins:[D.Z],rehypePlugins:[[q.Z],[L.Z,U]],children:i})})}let I="&nbsp;  ",P=e=>{let{data:t,level:a=0,isLast:s=!0,autoExpand:r=!1,parentKey:o="",isInPlaybackIds:n=!1,resourceType:d="Asset"}=e,[p,c]=(0,b.useState)(a<1||r),[l,h]=(0,b.useState)(null);(0,b.useEffect)(()=>{(async()=>{h((await i.e(4143).then(i.t.bind(i,94143,19))).components.schemas[d].properties||null)})()},[d]);let u=()=>{c(!p)};if("object"!=typeof t||null===t){let e="text-blue-link-dark-link-dark";return"number"==typeof t?e=Number.isInteger(t)?"text-purple":"text-orange-neon":"string"==typeof t?e="text-green-link-dark":"boolean"==typeof t&&(e="text-yellow"),(0,g.jsxs)("span",{className:e,children:[JSON.stringify(t),!s&&","]})}let m=Array.isArray(t),f=Object.entries(t),y=m&&1===f.length&&"object"==typeof f[0][1],v="playback_ids"===o,w=e=>{if(!l||!l[e])return null;let{description:t,type:i,enum:a}=l[e];return(0,g.jsxs)(g.Fragment,{children:[(0,g.jsxs)("div",{className:"mb-0.25 flex flex-row",children:[(0,g.jsx)("span",{className:"flex-1 font-mono text-lg font-bold leading-mono text-white",children:e}),(0,g.jsx)("span",{className:"font-mono text-sm leading-mono text-white",children:i})]}),(0,g.jsx)(R,{content:t}),a&&(0,g.jsxs)("p",{className:"mt-0.5",children:[(0,g.jsx)("strong",{children:"Possible values:"})," ",a.join(", ")]})]})};return(0,g.jsxs)("span",{children:[(0,g.jsxs)("button",{onClick:u,onKeyDown:e=>{("Enter"===e.key||" "===e.key)&&u()},className:"text-inherit cursor-pointer border-none bg-transparent p-0 font-mono leading-mono","aria-expanded":p,children:[m?"[":"{",!p&&(0,g.jsx)("span",{className:"text-gray-91 hover:underline",children:"..."}),!p&&(m?"]":"}")]}),p&&(0,g.jsxs)(g.Fragment,{children:[(0,g.jsx)("br",{}),f.map((e,t)=>{var i,s;let[r,o]=e,p=d;return l&&l[r]&&l[r].items&&(null===(i=l[r].items)||void 0===i?void 0:i.$ref)&&(p=(null===(s=l[r].items)||void 0===s?void 0:s.$ref.split("/").pop())||d),(0,g.jsxs)(b.Fragment,{children:[(0,g.jsxs)("span",{className:"select-text",children:["\xa0".repeat((a+1)*2),!m&&(0,g.jsxs)(g.Fragment,{children:["data"!==r?(()=>{let e=w(r);return e?(0,g.jsx)(A,{content:e,children:(0,g.jsxs)("span",{className:"cursor-pointer text-blue-link-dark hover:bg-white hover:bg-opacity-10",children:['"',r,'"']})}):(0,g.jsxs)("span",{className:"text-blue-link-dark",children:['"',r,'"']})})():(0,g.jsxs)("span",{className:"text-blue-link-dark",children:['"',r,'"']}),(0,g.jsx)("span",{className:"text-blue-link-dark",children:": "})]}),(0,g.jsx)(P,{data:o,level:a+1,isLast:t===f.length-1,autoExpand:y,parentKey:r,isInPlaybackIds:v||n,resourceType:p}),n&&"id"===r&&"string"==typeof o&&f.some(e=>{let[t,i]=e;return"policy"===t&&"public"===i})&&(0,g.jsx)(k,{playbackId:o})]}),(0,g.jsx)("br",{})]},r)}),(0,g.jsxs)("span",{className:"select-text",children:["\xa0".repeat(2*a),m?"]":"}",!s&&","]})]}),!p&&!s&&","]})};var H=JSON.parse('{"Hb":{"l":{"J":{"video.asset.created":{"description":"An asset has been created","payload":{"type":"object","properties":{"type":{"type":"string","description":"Type for the webhook event"},"id":{"type":"string","description":"Unique identifier for the event"},"created_at":{"type":"string","description":"Time the event was created","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"object":{"type":"object","properties":{"type":{"type":"string"},"id":{"type":"string"}},"required":["type","id"]},"environment":{"type":"object","properties":{"name":{"type":"string","description":"Name for the environment"},"id":{"type":"string","description":"Unique identifier for the environment"}},"required":["name","id"]},"data":{"type":"object","x-required":["id","created_at","status","max_resolution_tier","encoding_tier","mp4_support","master_access"],"properties":{"id":{"type":"string","description":"Unique identifier for the Asset. Max 255 characters."},"created_at":{"type":"integer","format":"int32"},"status":{"type":"string","enum":["preparing","ready","errored"],"description":"The status of the asset."},"duration":{"type":"number","format":"double","description":"The duration of the asset in seconds (max duration for a single asset is 12 hours)."},"max_stored_resolution":{"type":"string","enum":["Audio only","SD","HD","FHD","UHD"],"description":"This field is deprecated. Please use `resolution_tier` instead. The maximum resolution that has been stored for the asset. The asset may be delivered at lower resolutions depending on the device and bandwidth, however it cannot be delivered at a higher value than is stored.","deprecated":true},"resolution_tier":{"type":"string","enum":["audio-only","720p","1080p","1440p","2160p"],"description":"The resolution tier that the asset was ingested at, affecting billing for ingest & storage. This field also represents the highest resolution tier that the content can be delivered at, however the actual resolution may be lower depending on the device, bandwidth, and exact resolution of the uploaded asset."},"max_resolution_tier":{"type":"string","enum":["1080p","1440p","2160p"],"description":"Max resolution tier can be used to control the maximum `resolution_tier` your asset is encoded, stored, and streamed at. If not set, this defaults to `1080p`."},"encoding_tier":{"type":"string","deprecated":true,"enum":["smart","baseline","premium"],"description":"This field is deprecated. Please use `video_quality` instead. The encoding tier informs the cost, quality, and available platform features for the asset. The default encoding tier for an account can be set in the Mux Dashboard. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"video_quality":{"type":"string","enum":["basic","plus","premium"],"description":"The video quality controls the cost, quality, and available platform features for the asset. The default video quality for an account can be set in the Mux Dashboard. This field replaces the deprecated `encoding_tier` value. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"max_stored_frame_rate":{"type":"number","format":"double","description":"The maximum frame rate that has been stored for the asset. The asset may be delivered at lower frame rates depending on the device and bandwidth, however it cannot be delivered at a higher value than is stored. This field may return -1 if the frame rate of the input cannot be reliably determined."},"aspect_ratio":{"type":"string","description":"The aspect ratio of the asset in the form of `width:height`, for example `16:9`."},"playback_ids":{"type":"array","description":"An array of Playback ID objects. Use these to create HLS playback URLs. See [Play your videos](https://docs.mux.com/guides/play-your-videos) for more details.","items":{"type":"object","x-required":["id","policy"],"properties":{"id":{"type":"string","description":"Unique identifier for the PlaybackID"},"policy":{"type":"string","enum":["public","signed","drm"],"description":"* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\\n\\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](https://docs.mux.com/guides/secure-video-playback) for details about creating tokens.\\n\\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](https://docs.mux.com/guides/protect-videos-with-drm).\\n"},"drm_configuration_id":{"type":"string","description":"The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."}}}},"tracks":{"type":"array","description":"The individual media tracks that make up an asset.","items":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier for the Track"},"type":{"type":"string","description":"The type of track","enum":["video","audio","text"]},"duration":{"type":"number","format":"double","description":"The duration in seconds of the track media. This parameter is not set for `text` type tracks. This field is optional and may not be set. The top level `duration` field of an asset will always be set."},"max_width":{"type":"integer","format":"int64","description":"The maximum width in pixels available for the track. Only set for the `video` type track."},"max_height":{"type":"integer","format":"int64","description":"The maximum height in pixels available for the track. Only set for the `video` type track."},"max_frame_rate":{"type":"number","format":"double","description":"The maximum frame rate available for the track. Only set for the `video` type track. This field may return `-1` if the frame rate of the input cannot be reliably determined."},"max_channels":{"type":"integer","format":"int64","description":"The maximum number of audio channels the track supports. Only set for the `audio` type track."},"max_channel_layout":{"type":"string","description":"Only set for the `audio` type track.","deprecated":true},"text_type":{"type":"string","enum":["subtitles"],"description":"This parameter is only set for `text` type tracks."},"text_source":{"type":"string","description":"The source of the text contained in a Track of type `text`. Valid `text_source`\\nvalues are listed below.\\n* `uploaded`: Tracks uploaded to Mux as caption or subtitle files using the Create Asset Track API.\\n* `embedded`: Tracks extracted from an embedded stream of CEA-608 closed captions.\\n* `generated_vod`: Tracks generated by automatic speech recognition on an on-demand asset.\\n* `generated_live`: Tracks generated by automatic speech recognition on a live stream configured with `generated_subtitles`. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\\n* `generated_live_final`: Tracks generated by automatic speech recognition on a live stream using `generated_subtitles`. The accuracy, timing, and formatting of these subtitles is improved compared to the corresponding `generated_live` tracks. However, `generated_live_final` tracks will not be available in `ready` status until the live stream ends. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\\n","enum":["uploaded","embedded","generated_live","generated_live_final","generated_vod"]},"language_code":{"type":"string","description":"The language code value represents [BCP 47](https://tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is only set for `text` and `audio` track types."},"name":{"type":"string","description":"The name of the track containing a human-readable description. The HLS manifest will associate a subtitle `text` or `audio` track with this value. For example, the value should be \\"English\\" for a subtitle text track for the `language_code` value of `en-US`. This parameter is only set for `text` and `audio` track types."},"closed_captions":{"type":"boolean","description":"Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This parameter is only set tracks where `type` is `text` and `text_type` is `subtitles`."},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the track either when creating the asset or track. This parameter is only set for `text` type tracks. Max 255 characters."},"status":{"type":"string","enum":["preparing","ready","errored","deleted"],"description":"The status of the track. This parameter is only set for `text` type tracks."},"primary":{"type":"boolean","description":"For an audio track, indicates that this is the primary audio track, ingested from the main input for this asset. The primary audio track cannot be deleted."},"error":{"type":"object","description":"Object that describes any errors that happened when processing this asset.","properties":{"type":{"type":"string","description":"The type of error that occurred for this asset."},"messages":{"type":"array","description":"Error messages with more details.","items":{"type":"string"}}}}}}},"errors":{"type":"object","description":"Object that describes any errors that happened when processing this asset.","properties":{"type":{"type":"string","description":"The type of error that occurred for this asset."},"messages":{"type":"array","description":"Error messages with more details.","items":{"type":"string"}}}},"per_title_encode":{"type":"boolean","format":"boolean","x-mux-doc-decorators":["hidden"],"deprecated":true},"upload_id":{"type":"string","description":"Unique identifier for the Direct Upload. This is an optional parameter added when the asset is created from a direct upload."},"is_live":{"type":"boolean","format":"boolean","description":"Indicates whether the live stream that created this asset is currently `active` and not in `idle` state. This is an optional parameter added when the asset is created from a live stream."},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the asset. Max 255 characters."},"live_stream_id":{"type":"string","description":"Unique identifier for the live stream. This is an optional parameter added when the asset is created from a live stream."},"master":{"type":"object","description":"An object containing the current status of Master Access and the link to the Master MP4 file when ready. This object does not exist if `master_access` is set to `none` and when the temporary URL expires.","properties":{"status":{"enum":["ready","preparing","errored"],"type":"string"},"url":{"type":"string","description":"The temporary URL to the master version of the video, as an MP4 file. This URL will expire after 24 hours."}}},"master_access":{"type":"string","enum":["temporary","none"],"default":"none"},"mp4_support":{"type":"string","default":"none","enum":["standard","none","capped-1080p","audio-only","audio-only,capped-1080p"],"x-mux-doc-decorators-deprecated-enum-values":["standard"]},"source_asset_id":{"type":"string","description":"Asset Identifier of the video used as the source for creating the clip."},"normalize_audio":{"type":"boolean","default":false,"description":"Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets."},"static_renditions":{"type":"object","description":"An object containing the current status of any static renditions (mp4s). The object does not exist if no static renditions have been requested. See [Download your videos](https://docs.mux.com/guides/enable-static-mp4-renditions) for more information.","properties":{"status":{"type":"string","default":"disabled","description":"Indicates the status of downloadable MP4 versions of this asset.","enum":["ready","preparing","disabled","errored"]},"files":{"type":"array","description":"Array of file objects.","items":{"type":"object","properties":{"name":{"type":"string","enum":["low.mp4","medium.mp4","high.mp4","audio.m4a","capped-1080p.mp4"]},"ext":{"type":"string","description":"Extension of the static rendition file","enum":["mp4","m4a"]},"height":{"type":"integer","format":"int32","description":"The height of the static rendition\'s file in pixels"},"width":{"type":"integer","format":"int32","description":"The width of the static rendition\'s file in pixels"},"bitrate":{"type":"integer","format":"int64","description":"The bitrate in bits per second"},"filesize":{"type":"integer","format":"int64","description":"The file size in bytes"}}}}}},"recording_times":{"type":"array","description":"An array of individual live stream recording sessions. A recording session is created on each encoder connection during the live stream. Additionally any time slate media is inserted during brief interruptions in the live stream media or times when the live streaming software disconnects, a recording session representing the slate media will be added with a \\"slate\\" type.","items":{"type":"object","properties":{"started_at":{"type":"object","properties":{"nanos":{"format":"int32","type":"integer"},"seconds":{"format":"int32","type":"integer"}},"required":["seconds"]},"duration":{"type":"number","format":"double","description":"The duration of the live stream recorded. The time value is in seconds."},"type":{"type":"string","enum":["content","slate"],"description":"The type of media represented by the recording session, either `content` for normal stream content or `slate` for slate media inserted during stream interruptions."}}}},"non_standard_input_reasons":{"type":"object","description":"An object containing one or more reasons the input file is non-standard. See [the guide on minimizing processing time](https://docs.mux.com/guides/minimize-processing-time) for more information on what a standard input is defined as. This object only exists on on-demand assets that have non-standard inputs, so if missing you can assume the input qualifies as standard.","properties":{"video_codec":{"type":"string","description":"The video codec used on the input file. For example, the input file encoded with `hevc` video codec is non-standard and the value of this parameter is `hevc`."},"audio_codec":{"type":"string","description":"The audio codec used on the input file. Non-AAC audio codecs are non-standard."},"video_gop_size":{"type":"string","enum":["high"],"description":"The video key frame Interval (also called as Group of Picture or GOP) of the input file is `high`. This parameter is present when the gop is greater than 20 seconds."},"video_frame_rate":{"type":"string","description":"The video frame rate of the input file. Video with average frames per second (fps) less than 5 or greater than 120 is non-standard. A `-1` frame rate value indicates Mux could not determine the frame rate of the video track."},"video_resolution":{"type":"string","description":"The video resolution of the input file. Video resolution higher than 2048 pixels on any one dimension (height or width) is considered non-standard, The resolution value is presented as `width` x `height` in pixels."},"video_bitrate":{"type":"string","enum":["high"],"description":"The video bitrate of the input file is `high`. This parameter is present when the average bitrate of any key frame interval (also known as Group of Pictures or GOP) is higher than what\'s considered standard which typically is 16 Mbps."},"pixel_aspect_ratio":{"type":"string","description":"The video pixel aspect ratio of the input file."},"video_edit_list":{"type":"string","enum":["non-standard"],"description":"Video Edit List reason indicates that the input file\'s video track contains a complex Edit Decision List."},"audio_edit_list":{"type":"string","enum":["non-standard"],"description":"Audio Edit List reason indicates that the input file\'s audio track contains a complex Edit Decision List."},"unexpected_media_file_parameters":{"type":"string","enum":["non-standard"],"description":"A catch-all reason when the input file in created with non-standard encoding parameters."},"unsupported_pixel_format":{"type":"string","description":"The video pixel format, as a string, returned by libav. Considered non-standard if not one of yuv420p or yuvj420p."},"unexpected_video_parameters":{"type":"string"}}},"test":{"type":"boolean","format":"boolean","description":"True means this live stream is a test asset. A test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test assets are watermarked with the Mux logo, limited to 10 seconds, and deleted after 24 hrs."},"ingest_type":{"type":"string","enum":["on_demand_url","on_demand_direct_upload","on_demand_clip","live_rtmp","live_srt"],"description":"The type of ingest used to create the asset."}}},"attempts":{"type":"array","description":"Attempts for sending out the webhook event","items":{"type":"object","properties":{"webhook_id":{"type":"integer","description":"Unique identifier for the webhook"},"response_status_code":{"type":"integer","description":"HTTP response status code for the webhook attempt"},"response_headers":{"type":"object","description":"HTTP response headers for the webhook attempt"},"response_body":{"type":["string","null"],"description":"HTTP response body for the webhook attempt"},"max_attempts":{"description":"Max attempts number for the webhook attempt","type":"integer"},"id":{"description":"Unique identifier for the webhook attempt","type":"string"},"created_at":{"description":"Time the webhook request was attempted","type":"string","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"address":{"description":"URL address for the webhook attempt","type":"string"}}}},"request_id":{"type":["string","null"],"deprecated":true},"accessor":{"type":["string","null"],"deprecated":true},"accessor_source":{"type":["string","null"],"deprecated":true}},"required":["type","id","created_at","object","environment","data","attempts"]},"example":{"created_at":1642055725,"id":"SqQnqz6s5MBuXGvJaUWdXuXM93J9Q2yv","live_stream_id":"sY7b7fW01LImWpoOv2oiVROwHv5Y","master_access":"none","mp4_support":"none","passthrough":"mux","playback_ids":[{"id":"uNbxnGLKJ00yfbijDO8COxTOyVKT01xpxW","policy":"public"}],"status":"preparing"}},"video.asset.ready":{"description":"An asset is ready for playback. You can now use the asset\'s `playback_id` to successfully start streaming this asset.","payload":{"type":"object","properties":{"type":{"type":"string","description":"Type for the webhook event"},"id":{"type":"string","description":"Unique identifier for the event"},"created_at":{"type":"string","description":"Time the event was created","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"object":{"type":"object","properties":{"type":{"type":"string"},"id":{"type":"string"}},"required":["type","id"]},"environment":{"type":"object","properties":{"name":{"type":"string","description":"Name for the environment"},"id":{"type":"string","description":"Unique identifier for the environment"}},"required":["name","id"]},"data":{"type":"object","x-required":["id","created_at","status","max_resolution_tier","encoding_tier","mp4_support","master_access"],"properties":{"id":{"type":"string","description":"Unique identifier for the Asset. Max 255 characters."},"created_at":{"type":"integer","format":"int32"},"status":{"type":"string","enum":["preparing","ready","errored"],"description":"The status of the asset."},"duration":{"type":"number","format":"double","description":"The duration of the asset in seconds (max duration for a single asset is 12 hours)."},"max_stored_resolution":{"type":"string","enum":["Audio only","SD","HD","FHD","UHD"],"description":"This field is deprecated. Please use `resolution_tier` instead. The maximum resolution that has been stored for the asset. The asset may be delivered at lower resolutions depending on the device and bandwidth, however it cannot be delivered at a higher value than is stored.","deprecated":true},"resolution_tier":{"type":"string","enum":["audio-only","720p","1080p","1440p","2160p"],"description":"The resolution tier that the asset was ingested at, affecting billing for ingest & storage. This field also represents the highest resolution tier that the content can be delivered at, however the actual resolution may be lower depending on the device, bandwidth, and exact resolution of the uploaded asset."},"max_resolution_tier":{"type":"string","enum":["1080p","1440p","2160p"],"description":"Max resolution tier can be used to control the maximum `resolution_tier` your asset is encoded, stored, and streamed at. If not set, this defaults to `1080p`."},"encoding_tier":{"type":"string","deprecated":true,"enum":["smart","baseline","premium"],"description":"This field is deprecated. Please use `video_quality` instead. The encoding tier informs the cost, quality, and available platform features for the asset. The default encoding tier for an account can be set in the Mux Dashboard. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"video_quality":{"type":"string","enum":["basic","plus","premium"],"description":"The video quality controls the cost, quality, and available platform features for the asset. The default video quality for an account can be set in the Mux Dashboard. This field replaces the deprecated `encoding_tier` value. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"max_stored_frame_rate":{"type":"number","format":"double","description":"The maximum frame rate that has been stored for the asset. The asset may be delivered at lower frame rates depending on the device and bandwidth, however it cannot be delivered at a higher value than is stored. This field may return -1 if the frame rate of the input cannot be reliably determined."},"aspect_ratio":{"type":"string","description":"The aspect ratio of the asset in the form of `width:height`, for example `16:9`."},"playback_ids":{"type":"array","description":"An array of Playback ID objects. Use these to create HLS playback URLs. See [Play your videos](https://docs.mux.com/guides/play-your-videos) for more details.","items":{"type":"object","x-required":["id","policy"],"properties":{"id":{"type":"string","description":"Unique identifier for the PlaybackID"},"policy":{"type":"string","enum":["public","signed","drm"],"description":"* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\\n\\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](https://docs.mux.com/guides/secure-video-playback) for details about creating tokens.\\n\\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](https://docs.mux.com/guides/protect-videos-with-drm).\\n"},"drm_configuration_id":{"type":"string","description":"The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."}}}},"tracks":{"type":"array","description":"The individual media tracks that make up an asset.","items":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier for the Track"},"type":{"type":"string","description":"The type of track","enum":["video","audio","text"]},"duration":{"type":"number","format":"double","description":"The duration in seconds of the track media. This parameter is not set for `text` type tracks. This field is optional and may not be set. The top level `duration` field of an asset will always be set."},"max_width":{"type":"integer","format":"int64","description":"The maximum width in pixels available for the track. Only set for the `video` type track."},"max_height":{"type":"integer","format":"int64","description":"The maximum height in pixels available for the track. Only set for the `video` type track."},"max_frame_rate":{"type":"number","format":"double","description":"The maximum frame rate available for the track. Only set for the `video` type track. This field may return `-1` if the frame rate of the input cannot be reliably determined."},"max_channels":{"type":"integer","format":"int64","description":"The maximum number of audio channels the track supports. Only set for the `audio` type track."},"max_channel_layout":{"type":"string","description":"Only set for the `audio` type track.","deprecated":true},"text_type":{"type":"string","enum":["subtitles"],"description":"This parameter is only set for `text` type tracks."},"text_source":{"type":"string","description":"The source of the text contained in a Track of type `text`. Valid `text_source`\\nvalues are listed below.\\n* `uploaded`: Tracks uploaded to Mux as caption or subtitle files using the Create Asset Track API.\\n* `embedded`: Tracks extracted from an embedded stream of CEA-608 closed captions.\\n* `generated_vod`: Tracks generated by automatic speech recognition on an on-demand asset.\\n* `generated_live`: Tracks generated by automatic speech recognition on a live stream configured with `generated_subtitles`. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\\n* `generated_live_final`: Tracks generated by automatic speech recognition on a live stream using `generated_subtitles`. The accuracy, timing, and formatting of these subtitles is improved compared to the corresponding `generated_live` tracks. However, `generated_live_final` tracks will not be available in `ready` status until the live stream ends. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\\n","enum":["uploaded","embedded","generated_live","generated_live_final","generated_vod"]},"language_code":{"type":"string","description":"The language code value represents [BCP 47](https://tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is only set for `text` and `audio` track types."},"name":{"type":"string","description":"The name of the track containing a human-readable description. The HLS manifest will associate a subtitle `text` or `audio` track with this value. For example, the value should be \\"English\\" for a subtitle text track for the `language_code` value of `en-US`. This parameter is only set for `text` and `audio` track types."},"closed_captions":{"type":"boolean","description":"Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This parameter is only set tracks where `type` is `text` and `text_type` is `subtitles`."},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the track either when creating the asset or track. This parameter is only set for `text` type tracks. Max 255 characters."},"status":{"type":"string","enum":["preparing","ready","errored","deleted"],"description":"The status of the track. This parameter is only set for `text` type tracks."},"primary":{"type":"boolean","description":"For an audio track, indicates that this is the primary audio track, ingested from the main input for this asset. The primary audio track cannot be deleted."},"error":{"type":"object","description":"Object that describes any errors that happened when processing this asset.","properties":{"type":{"type":"string","description":"The type of error that occurred for this asset."},"messages":{"type":"array","description":"Error messages with more details.","items":{"type":"string"}}}}}}},"errors":{"type":"object","description":"Object that describes any errors that happened when processing this asset.","properties":{"type":{"type":"string","description":"The type of error that occurred for this asset."},"messages":{"type":"array","description":"Error messages with more details.","items":{"type":"string"}}}},"per_title_encode":{"type":"boolean","format":"boolean","x-mux-doc-decorators":["hidden"],"deprecated":true},"upload_id":{"type":"string","description":"Unique identifier for the Direct Upload. This is an optional parameter added when the asset is created from a direct upload."},"is_live":{"type":"boolean","format":"boolean","description":"Indicates whether the live stream that created this asset is currently `active` and not in `idle` state. This is an optional parameter added when the asset is created from a live stream."},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the asset. Max 255 characters."},"live_stream_id":{"type":"string","description":"Unique identifier for the live stream. This is an optional parameter added when the asset is created from a live stream."},"master":{"type":"object","description":"An object containing the current status of Master Access and the link to the Master MP4 file when ready. This object does not exist if `master_access` is set to `none` and when the temporary URL expires.","properties":{"status":{"enum":["ready","preparing","errored"],"type":"string"},"url":{"type":"string","description":"The temporary URL to the master version of the video, as an MP4 file. This URL will expire after 24 hours."}}},"master_access":{"type":"string","enum":["temporary","none"],"default":"none"},"mp4_support":{"type":"string","default":"none","enum":["standard","none","capped-1080p","audio-only","audio-only,capped-1080p"],"x-mux-doc-decorators-deprecated-enum-values":["standard"]},"source_asset_id":{"type":"string","description":"Asset Identifier of the video used as the source for creating the clip."},"normalize_audio":{"type":"boolean","default":false,"description":"Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets."},"static_renditions":{"type":"object","description":"An object containing the current status of any static renditions (mp4s). The object does not exist if no static renditions have been requested. See [Download your videos](https://docs.mux.com/guides/enable-static-mp4-renditions) for more information.","properties":{"status":{"type":"string","default":"disabled","description":"Indicates the status of downloadable MP4 versions of this asset.","enum":["ready","preparing","disabled","errored"]},"files":{"type":"array","description":"Array of file objects.","items":{"type":"object","properties":{"name":{"type":"string","enum":["low.mp4","medium.mp4","high.mp4","audio.m4a","capped-1080p.mp4"]},"ext":{"type":"string","description":"Extension of the static rendition file","enum":["mp4","m4a"]},"height":{"type":"integer","format":"int32","description":"The height of the static rendition\'s file in pixels"},"width":{"type":"integer","format":"int32","description":"The width of the static rendition\'s file in pixels"},"bitrate":{"type":"integer","format":"int64","description":"The bitrate in bits per second"},"filesize":{"type":"integer","format":"int64","description":"The file size in bytes"}}}}}},"recording_times":{"type":"array","description":"An array of individual live stream recording sessions. A recording session is created on each encoder connection during the live stream. Additionally any time slate media is inserted during brief interruptions in the live stream media or times when the live streaming software disconnects, a recording session representing the slate media will be added with a \\"slate\\" type.","items":{"type":"object","properties":{"started_at":{"type":"object","properties":{"nanos":{"format":"int32","type":"integer"},"seconds":{"format":"int32","type":"integer"}},"required":["seconds"]},"duration":{"type":"number","format":"double","description":"The duration of the live stream recorded. The time value is in seconds."},"type":{"type":"string","enum":["content","slate"],"description":"The type of media represented by the recording session, either `content` for normal stream content or `slate` for slate media inserted during stream interruptions."}}}},"non_standard_input_reasons":{"type":"object","description":"An object containing one or more reasons the input file is non-standard. See [the guide on minimizing processing time](https://docs.mux.com/guides/minimize-processing-time) for more information on what a standard input is defined as. This object only exists on on-demand assets that have non-standard inputs, so if missing you can assume the input qualifies as standard.","properties":{"video_codec":{"type":"string","description":"The video codec used on the input file. For example, the input file encoded with `hevc` video codec is non-standard and the value of this parameter is `hevc`."},"audio_codec":{"type":"string","description":"The audio codec used on the input file. Non-AAC audio codecs are non-standard."},"video_gop_size":{"type":"string","enum":["high"],"description":"The video key frame Interval (also called as Group of Picture or GOP) of the input file is `high`. This parameter is present when the gop is greater than 20 seconds."},"video_frame_rate":{"type":"string","description":"The video frame rate of the input file. Video with average frames per second (fps) less than 5 or greater than 120 is non-standard. A `-1` frame rate value indicates Mux could not determine the frame rate of the video track."},"video_resolution":{"type":"string","description":"The video resolution of the input file. Video resolution higher than 2048 pixels on any one dimension (height or width) is considered non-standard, The resolution value is presented as `width` x `height` in pixels."},"video_bitrate":{"type":"string","enum":["high"],"description":"The video bitrate of the input file is `high`. This parameter is present when the average bitrate of any key frame interval (also known as Group of Pictures or GOP) is higher than what\'s considered standard which typically is 16 Mbps."},"pixel_aspect_ratio":{"type":"string","description":"The video pixel aspect ratio of the input file."},"video_edit_list":{"type":"string","enum":["non-standard"],"description":"Video Edit List reason indicates that the input file\'s video track contains a complex Edit Decision List."},"audio_edit_list":{"type":"string","enum":["non-standard"],"description":"Audio Edit List reason indicates that the input file\'s audio track contains a complex Edit Decision List."},"unexpected_media_file_parameters":{"type":"string","enum":["non-standard"],"description":"A catch-all reason when the input file in created with non-standard encoding parameters."},"unsupported_pixel_format":{"type":"string","description":"The video pixel format, as a string, returned by libav. Considered non-standard if not one of yuv420p or yuvj420p."},"unexpected_video_parameters":{"type":"string"}}},"test":{"type":"boolean","format":"boolean","description":"True means this live stream is a test asset. A test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test assets are watermarked with the Mux logo, limited to 10 seconds, and deleted after 24 hrs."},"ingest_type":{"type":"string","enum":["on_demand_url","on_demand_direct_upload","on_demand_clip","live_rtmp","live_srt"],"description":"The type of ingest used to create the asset."}}},"attempts":{"type":"array","description":"Attempts for sending out the webhook event","items":{"type":"object","properties":{"webhook_id":{"type":"integer","description":"Unique identifier for the webhook"},"response_status_code":{"type":"integer","description":"HTTP response status code for the webhook attempt"},"response_headers":{"type":"object","description":"HTTP response headers for the webhook attempt"},"response_body":{"type":["string","null"],"description":"HTTP response body for the webhook attempt"},"max_attempts":{"description":"Max attempts number for the webhook attempt","type":"integer"},"id":{"description":"Unique identifier for the webhook attempt","type":"string"},"created_at":{"description":"Time the webhook request was attempted","type":"string","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"address":{"description":"URL address for the webhook attempt","type":"string"}}}},"request_id":{"type":["string","null"],"deprecated":true},"accessor":{"type":["string","null"],"deprecated":true},"accessor_source":{"type":["string","null"],"deprecated":true}},"required":["type","id","created_at","object","environment","data","attempts"]},"example":{"aspect_ratio":"9:16","created_at":1640303278,"duration":40.742667,"id":"SqQnqz6s5MBuXGvJaUWdXuXM93J9Q2yv","master":{"status":"preparing"},"master_access":"temporary","max_stored_frame_rate":30,"max_stored_resolution":"HD","resolution_tier":"1080p","mp4_support":"standard","non_standard_input_reasons":{"audio_edit_list":"non-standard","video_bitrate":"high"},"normalize_audio":true,"passthrough":"mux","playback_ids":[{"id":"uNbxnGLKJ00yfbijDO8COxTOyVKT01xpxW","policy":"public"}],"static_renditions":{"status":"preparing"},"status":"ready","tracks":[{"duration":40.698345,"id":"gOTREyHBwIYUeh5BHrb02mTQoed00ql00qN6yIz1tiSLhs","max_channel_layout":"stereo","max_channels":2,"type":"audio"},{"duration":40.7,"id":"H89f5TImPlNFAYQrw02OUfcyMRk74rORgX6wNS3mdPeM","max_frame_rate":30,"max_height":1920,"max_width":1080,"type":"video"}],"upload_id":"02lwELKbWGfLPJoIphk402f9btcHwBwVJ8Bo02MPrxyFi"}},"video.asset.errored":{"description":"An asset has encountered an error. Use this to notify your server about assets with errors. Asset errors can happen for a number of reasons, most commonly an input URL that Mux is unable to download or a file that is not a valid video file.","payload":{"type":"object","properties":{"type":{"type":"string","description":"Type for the webhook event"},"id":{"type":"string","description":"Unique identifier for the event"},"created_at":{"type":"string","description":"Time the event was created","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"object":{"type":"object","properties":{"type":{"type":"string"},"id":{"type":"string"}},"required":["type","id"]},"environment":{"type":"object","properties":{"name":{"type":"string","description":"Name for the environment"},"id":{"type":"string","description":"Unique identifier for the environment"}},"required":["name","id"]},"data":{"type":"object","x-required":["id","created_at","status","max_resolution_tier","encoding_tier","mp4_support","master_access"],"properties":{"id":{"type":"string","description":"Unique identifier for the Asset. Max 255 characters."},"created_at":{"type":"integer","format":"int32"},"status":{"type":"string","enum":["preparing","ready","errored"],"description":"The status of the asset."},"duration":{"type":"number","format":"double","description":"The duration of the asset in seconds (max duration for a single asset is 12 hours)."},"max_stored_resolution":{"type":"string","enum":["Audio only","SD","HD","FHD","UHD"],"description":"This field is deprecated. Please use `resolution_tier` instead. The maximum resolution that has been stored for the asset. The asset may be delivered at lower resolutions depending on the device and bandwidth, however it cannot be delivered at a higher value than is stored.","deprecated":true},"resolution_tier":{"type":"string","enum":["audio-only","720p","1080p","1440p","2160p"],"description":"The resolution tier that the asset was ingested at, affecting billing for ingest & storage. This field also represents the highest resolution tier that the content can be delivered at, however the actual resolution may be lower depending on the device, bandwidth, and exact resolution of the uploaded asset."},"max_resolution_tier":{"type":"string","enum":["1080p","1440p","2160p"],"description":"Max resolution tier can be used to control the maximum `resolution_tier` your asset is encoded, stored, and streamed at. If not set, this defaults to `1080p`."},"encoding_tier":{"type":"string","deprecated":true,"enum":["smart","baseline","premium"],"description":"This field is deprecated. Please use `video_quality` instead. The encoding tier informs the cost, quality, and available platform features for the asset. The default encoding tier for an account can be set in the Mux Dashboard. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"video_quality":{"type":"string","enum":["basic","plus","premium"],"description":"The video quality controls the cost, quality, and available platform features for the asset. The default video quality for an account can be set in the Mux Dashboard. This field replaces the deprecated `encoding_tier` value. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"max_stored_frame_rate":{"type":"number","format":"double","description":"The maximum frame rate that has been stored for the asset. The asset may be delivered at lower frame rates depending on the device and bandwidth, however it cannot be delivered at a higher value than is stored. This field may return -1 if the frame rate of the input cannot be reliably determined."},"aspect_ratio":{"type":"string","description":"The aspect ratio of the asset in the form of `width:height`, for example `16:9`."},"playback_ids":{"type":"array","description":"An array of Playback ID objects. Use these to create HLS playback URLs. See [Play your videos](https://docs.mux.com/guides/play-your-videos) for more details.","items":{"type":"object","x-required":["id","policy"],"properties":{"id":{"type":"string","description":"Unique identifier for the PlaybackID"},"policy":{"type":"string","enum":["public","signed","drm"],"description":"* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\\n\\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](https://docs.mux.com/guides/secure-video-playback) for details about creating tokens.\\n\\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](https://docs.mux.com/guides/protect-videos-with-drm).\\n"},"drm_configuration_id":{"type":"string","description":"The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."}}}},"tracks":{"type":"array","description":"The individual media tracks that make up an asset.","items":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier for the Track"},"type":{"type":"string","description":"The type of track","enum":["video","audio","text"]},"duration":{"type":"number","format":"double","description":"The duration in seconds of the track media. This parameter is not set for `text` type tracks. This field is optional and may not be set. The top level `duration` field of an asset will always be set."},"max_width":{"type":"integer","format":"int64","description":"The maximum width in pixels available for the track. Only set for the `video` type track."},"max_height":{"type":"integer","format":"int64","description":"The maximum height in pixels available for the track. Only set for the `video` type track."},"max_frame_rate":{"type":"number","format":"double","description":"The maximum frame rate available for the track. Only set for the `video` type track. This field may return `-1` if the frame rate of the input cannot be reliably determined."},"max_channels":{"type":"integer","format":"int64","description":"The maximum number of audio channels the track supports. Only set for the `audio` type track."},"max_channel_layout":{"type":"string","description":"Only set for the `audio` type track.","deprecated":true},"text_type":{"type":"string","enum":["subtitles"],"description":"This parameter is only set for `text` type tracks."},"text_source":{"type":"string","description":"The source of the text contained in a Track of type `text`. Valid `text_source`\\nvalues are listed below.\\n* `uploaded`: Tracks uploaded to Mux as caption or subtitle files using the Create Asset Track API.\\n* `embedded`: Tracks extracted from an embedded stream of CEA-608 closed captions.\\n* `generated_vod`: Tracks generated by automatic speech recognition on an on-demand asset.\\n* `generated_live`: Tracks generated by automatic speech recognition on a live stream configured with `generated_subtitles`. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\\n* `generated_live_final`: Tracks generated by automatic speech recognition on a live stream using `generated_subtitles`. The accuracy, timing, and formatting of these subtitles is improved compared to the corresponding `generated_live` tracks. However, `generated_live_final` tracks will not be available in `ready` status until the live stream ends. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\\n","enum":["uploaded","embedded","generated_live","generated_live_final","generated_vod"]},"language_code":{"type":"string","description":"The language code value represents [BCP 47](https://tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is only set for `text` and `audio` track types."},"name":{"type":"string","description":"The name of the track containing a human-readable description. The HLS manifest will associate a subtitle `text` or `audio` track with this value. For example, the value should be \\"English\\" for a subtitle text track for the `language_code` value of `en-US`. This parameter is only set for `text` and `audio` track types."},"closed_captions":{"type":"boolean","description":"Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This parameter is only set tracks where `type` is `text` and `text_type` is `subtitles`."},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the track either when creating the asset or track. This parameter is only set for `text` type tracks. Max 255 characters."},"status":{"type":"string","enum":["preparing","ready","errored","deleted"],"description":"The status of the track. This parameter is only set for `text` type tracks."},"primary":{"type":"boolean","description":"For an audio track, indicates that this is the primary audio track, ingested from the main input for this asset. The primary audio track cannot be deleted."},"error":{"type":"object","description":"Object that describes any errors that happened when processing this asset.","properties":{"type":{"type":"string","description":"The type of error that occurred for this asset."},"messages":{"type":"array","description":"Error messages with more details.","items":{"type":"string"}}}}}}},"errors":{"type":"object","description":"Object that describes any errors that happened when processing this asset.","properties":{"type":{"type":"string","description":"The type of error that occurred for this asset."},"messages":{"type":"array","description":"Error messages with more details.","items":{"type":"string"}}}},"per_title_encode":{"type":"boolean","format":"boolean","x-mux-doc-decorators":["hidden"],"deprecated":true},"upload_id":{"type":"string","description":"Unique identifier for the Direct Upload. This is an optional parameter added when the asset is created from a direct upload."},"is_live":{"type":"boolean","format":"boolean","description":"Indicates whether the live stream that created this asset is currently `active` and not in `idle` state. This is an optional parameter added when the asset is created from a live stream."},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the asset. Max 255 characters."},"live_stream_id":{"type":"string","description":"Unique identifier for the live stream. This is an optional parameter added when the asset is created from a live stream."},"master":{"type":"object","description":"An object containing the current status of Master Access and the link to the Master MP4 file when ready. This object does not exist if `master_access` is set to `none` and when the temporary URL expires.","properties":{"status":{"enum":["ready","preparing","errored"],"type":"string"},"url":{"type":"string","description":"The temporary URL to the master version of the video, as an MP4 file. This URL will expire after 24 hours."}}},"master_access":{"type":"string","enum":["temporary","none"],"default":"none"},"mp4_support":{"type":"string","default":"none","enum":["standard","none","capped-1080p","audio-only","audio-only,capped-1080p"],"x-mux-doc-decorators-deprecated-enum-values":["standard"]},"source_asset_id":{"type":"string","description":"Asset Identifier of the video used as the source for creating the clip."},"normalize_audio":{"type":"boolean","default":false,"description":"Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets."},"static_renditions":{"type":"object","description":"An object containing the current status of any static renditions (mp4s). The object does not exist if no static renditions have been requested. See [Download your videos](https://docs.mux.com/guides/enable-static-mp4-renditions) for more information.","properties":{"status":{"type":"string","default":"disabled","description":"Indicates the status of downloadable MP4 versions of this asset.","enum":["ready","preparing","disabled","errored"]},"files":{"type":"array","description":"Array of file objects.","items":{"type":"object","properties":{"name":{"type":"string","enum":["low.mp4","medium.mp4","high.mp4","audio.m4a","capped-1080p.mp4"]},"ext":{"type":"string","description":"Extension of the static rendition file","enum":["mp4","m4a"]},"height":{"type":"integer","format":"int32","description":"The height of the static rendition\'s file in pixels"},"width":{"type":"integer","format":"int32","description":"The width of the static rendition\'s file in pixels"},"bitrate":{"type":"integer","format":"int64","description":"The bitrate in bits per second"},"filesize":{"type":"integer","format":"int64","description":"The file size in bytes"}}}}}},"recording_times":{"type":"array","description":"An array of individual live stream recording sessions. A recording session is created on each encoder connection during the live stream. Additionally any time slate media is inserted during brief interruptions in the live stream media or times when the live streaming software disconnects, a recording session representing the slate media will be added with a \\"slate\\" type.","items":{"type":"object","properties":{"started_at":{"type":"object","properties":{"nanos":{"format":"int32","type":"integer"},"seconds":{"format":"int32","type":"integer"}},"required":["seconds"]},"duration":{"type":"number","format":"double","description":"The duration of the live stream recorded. The time value is in seconds."},"type":{"type":"string","enum":["content","slate"],"description":"The type of media represented by the recording session, either `content` for normal stream content or `slate` for slate media inserted during stream interruptions."}}}},"non_standard_input_reasons":{"type":"object","description":"An object containing one or more reasons the input file is non-standard. See [the guide on minimizing processing time](https://docs.mux.com/guides/minimize-processing-time) for more information on what a standard input is defined as. This object only exists on on-demand assets that have non-standard inputs, so if missing you can assume the input qualifies as standard.","properties":{"video_codec":{"type":"string","description":"The video codec used on the input file. For example, the input file encoded with `hevc` video codec is non-standard and the value of this parameter is `hevc`."},"audio_codec":{"type":"string","description":"The audio codec used on the input file. Non-AAC audio codecs are non-standard."},"video_gop_size":{"type":"string","enum":["high"],"description":"The video key frame Interval (also called as Group of Picture or GOP) of the input file is `high`. This parameter is present when the gop is greater than 20 seconds."},"video_frame_rate":{"type":"string","description":"The video frame rate of the input file. Video with average frames per second (fps) less than 5 or greater than 120 is non-standard. A `-1` frame rate value indicates Mux could not determine the frame rate of the video track."},"video_resolution":{"type":"string","description":"The video resolution of the input file. Video resolution higher than 2048 pixels on any one dimension (height or width) is considered non-standard, The resolution value is presented as `width` x `height` in pixels."},"video_bitrate":{"type":"string","enum":["high"],"description":"The video bitrate of the input file is `high`. This parameter is present when the average bitrate of any key frame interval (also known as Group of Pictures or GOP) is higher than what\'s considered standard which typically is 16 Mbps."},"pixel_aspect_ratio":{"type":"string","description":"The video pixel aspect ratio of the input file."},"video_edit_list":{"type":"string","enum":["non-standard"],"description":"Video Edit List reason indicates that the input file\'s video track contains a complex Edit Decision List."},"audio_edit_list":{"type":"string","enum":["non-standard"],"description":"Audio Edit List reason indicates that the input file\'s audio track contains a complex Edit Decision List."},"unexpected_media_file_parameters":{"type":"string","enum":["non-standard"],"description":"A catch-all reason when the input file in created with non-standard encoding parameters."},"unsupported_pixel_format":{"type":"string","description":"The video pixel format, as a string, returned by libav. Considered non-standard if not one of yuv420p or yuvj420p."},"unexpected_video_parameters":{"type":"string"}}},"test":{"type":"boolean","format":"boolean","description":"True means this live stream is a test asset. A test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test assets are watermarked with the Mux logo, limited to 10 seconds, and deleted after 24 hrs."},"ingest_type":{"type":"string","enum":["on_demand_url","on_demand_direct_upload","on_demand_clip","live_rtmp","live_srt"],"description":"The type of ingest used to create the asset."}}},"attempts":{"type":"array","description":"Attempts for sending out the webhook event","items":{"type":"object","properties":{"webhook_id":{"type":"integer","description":"Unique identifier for the webhook"},"response_status_code":{"type":"integer","description":"HTTP response status code for the webhook attempt"},"response_headers":{"type":"object","description":"HTTP response headers for the webhook attempt"},"response_body":{"type":["string","null"],"description":"HTTP response body for the webhook attempt"},"max_attempts":{"description":"Max attempts number for the webhook attempt","type":"integer"},"id":{"description":"Unique identifier for the webhook attempt","type":"string"},"created_at":{"description":"Time the webhook request was attempted","type":"string","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"address":{"description":"URL address for the webhook attempt","type":"string"}}}},"request_id":{"type":["string","null"],"deprecated":true},"accessor":{"type":["string","null"],"deprecated":true},"accessor_source":{"type":["string","null"],"deprecated":true}},"required":["type","id","created_at","object","environment","data","attempts"]},"example":{"aspect_ratio":"16:9","created_at":1654712927,"deleted_at":1654712981,"duration":28.016666666666666,"errors":{"messages":["Unexpected internal error creating asset."],"type":"internal_error"},"id":"SqQnqz6s5MBuXGvJaUWdXuXM93J9Q2yv","master_access":"none","max_stored_frame_rate":-1,"max_stored_resolution":"HD","resolution_tier":"1080p","mp4_support":"none","recording_times":[{"duration":28,"started_at":{"nanos":232000000,"seconds":1654712928}}],"status":"errored","tracks":[{"id":"XIChd3TiFyB8AK8JSO5q4sAZv4ox3jxxX3TrEknDCvQ","max_frame_rate":-1,"max_height":1080,"max_width":1920,"type":"video"},{"id":"Q3TyHuuvVnoVN00dN8JaWqisAp025701oS02Hfg01UFlpEic","max_channel_layout":"mono","max_channels":1,"type":"audio"}]}},"video.asset.updated":{"description":"An asset has been updated. Use this to make sure your server is notified about changes to assets.","payload":{"type":"object","properties":{"type":{"type":"string","description":"Type for the webhook event"},"id":{"type":"string","description":"Unique identifier for the event"},"created_at":{"type":"string","description":"Time the event was created","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"object":{"type":"object","properties":{"type":{"type":"string"},"id":{"type":"string"}},"required":["type","id"]},"environment":{"type":"object","properties":{"name":{"type":"string","description":"Name for the environment"},"id":{"type":"string","description":"Unique identifier for the environment"}},"required":["name","id"]},"data":{"type":"object","x-required":["id","created_at","status","max_resolution_tier","encoding_tier","mp4_support","master_access"],"properties":{"id":{"type":"string","description":"Unique identifier for the Asset. Max 255 characters."},"created_at":{"type":"integer","format":"int32"},"status":{"type":"string","enum":["preparing","ready","errored"],"description":"The status of the asset."},"duration":{"type":"number","format":"double","description":"The duration of the asset in seconds (max duration for a single asset is 12 hours)."},"max_stored_resolution":{"type":"string","enum":["Audio only","SD","HD","FHD","UHD"],"description":"This field is deprecated. Please use `resolution_tier` instead. The maximum resolution that has been stored for the asset. The asset may be delivered at lower resolutions depending on the device and bandwidth, however it cannot be delivered at a higher value than is stored.","deprecated":true},"resolution_tier":{"type":"string","enum":["audio-only","720p","1080p","1440p","2160p"],"description":"The resolution tier that the asset was ingested at, affecting billing for ingest & storage. This field also represents the highest resolution tier that the content can be delivered at, however the actual resolution may be lower depending on the device, bandwidth, and exact resolution of the uploaded asset."},"max_resolution_tier":{"type":"string","enum":["1080p","1440p","2160p"],"description":"Max resolution tier can be used to control the maximum `resolution_tier` your asset is encoded, stored, and streamed at. If not set, this defaults to `1080p`."},"encoding_tier":{"type":"string","deprecated":true,"enum":["smart","baseline","premium"],"description":"This field is deprecated. Please use `video_quality` instead. The encoding tier informs the cost, quality, and available platform features for the asset. The default encoding tier for an account can be set in the Mux Dashboard. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"video_quality":{"type":"string","enum":["basic","plus","premium"],"description":"The video quality controls the cost, quality, and available platform features for the asset. The default video quality for an account can be set in the Mux Dashboard. This field replaces the deprecated `encoding_tier` value. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"max_stored_frame_rate":{"type":"number","format":"double","description":"The maximum frame rate that has been stored for the asset. The asset may be delivered at lower frame rates depending on the device and bandwidth, however it cannot be delivered at a higher value than is stored. This field may return -1 if the frame rate of the input cannot be reliably determined."},"aspect_ratio":{"type":"string","description":"The aspect ratio of the asset in the form of `width:height`, for example `16:9`."},"playback_ids":{"type":"array","description":"An array of Playback ID objects. Use these to create HLS playback URLs. See [Play your videos](https://docs.mux.com/guides/play-your-videos) for more details.","items":{"type":"object","x-required":["id","policy"],"properties":{"id":{"type":"string","description":"Unique identifier for the PlaybackID"},"policy":{"type":"string","enum":["public","signed","drm"],"description":"* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\\n\\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](https://docs.mux.com/guides/secure-video-playback) for details about creating tokens.\\n\\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](https://docs.mux.com/guides/protect-videos-with-drm).\\n"},"drm_configuration_id":{"type":"string","description":"The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."}}}},"tracks":{"type":"array","description":"The individual media tracks that make up an asset.","items":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier for the Track"},"type":{"type":"string","description":"The type of track","enum":["video","audio","text"]},"duration":{"type":"number","format":"double","description":"The duration in seconds of the track media. This parameter is not set for `text` type tracks. This field is optional and may not be set. The top level `duration` field of an asset will always be set."},"max_width":{"type":"integer","format":"int64","description":"The maximum width in pixels available for the track. Only set for the `video` type track."},"max_height":{"type":"integer","format":"int64","description":"The maximum height in pixels available for the track. Only set for the `video` type track."},"max_frame_rate":{"type":"number","format":"double","description":"The maximum frame rate available for the track. Only set for the `video` type track. This field may return `-1` if the frame rate of the input cannot be reliably determined."},"max_channels":{"type":"integer","format":"int64","description":"The maximum number of audio channels the track supports. Only set for the `audio` type track."},"max_channel_layout":{"type":"string","description":"Only set for the `audio` type track.","deprecated":true},"text_type":{"type":"string","enum":["subtitles"],"description":"This parameter is only set for `text` type tracks."},"text_source":{"type":"string","description":"The source of the text contained in a Track of type `text`. Valid `text_source`\\nvalues are listed below.\\n* `uploaded`: Tracks uploaded to Mux as caption or subtitle files using the Create Asset Track API.\\n* `embedded`: Tracks extracted from an embedded stream of CEA-608 closed captions.\\n* `generated_vod`: Tracks generated by automatic speech recognition on an on-demand asset.\\n* `generated_live`: Tracks generated by automatic speech recognition on a live stream configured with `generated_subtitles`. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\\n* `generated_live_final`: Tracks generated by automatic speech recognition on a live stream using `generated_subtitles`. The accuracy, timing, and formatting of these subtitles is improved compared to the corresponding `generated_live` tracks. However, `generated_live_final` tracks will not be available in `ready` status until the live stream ends. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\\n","enum":["uploaded","embedded","generated_live","generated_live_final","generated_vod"]},"language_code":{"type":"string","description":"The language code value represents [BCP 47](https://tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is only set for `text` and `audio` track types."},"name":{"type":"string","description":"The name of the track containing a human-readable description. The HLS manifest will associate a subtitle `text` or `audio` track with this value. For example, the value should be \\"English\\" for a subtitle text track for the `language_code` value of `en-US`. This parameter is only set for `text` and `audio` track types."},"closed_captions":{"type":"boolean","description":"Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This parameter is only set tracks where `type` is `text` and `text_type` is `subtitles`."},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the track either when creating the asset or track. This parameter is only set for `text` type tracks. Max 255 characters."},"status":{"type":"string","enum":["preparing","ready","errored","deleted"],"description":"The status of the track. This parameter is only set for `text` type tracks."},"primary":{"type":"boolean","description":"For an audio track, indicates that this is the primary audio track, ingested from the main input for this asset. The primary audio track cannot be deleted."},"error":{"type":"object","description":"Object that describes any errors that happened when processing this asset.","properties":{"type":{"type":"string","description":"The type of error that occurred for this asset."},"messages":{"type":"array","description":"Error messages with more details.","items":{"type":"string"}}}}}}},"errors":{"type":"object","description":"Object that describes any errors that happened when processing this asset.","properties":{"type":{"type":"string","description":"The type of error that occurred for this asset."},"messages":{"type":"array","description":"Error messages with more details.","items":{"type":"string"}}}},"per_title_encode":{"type":"boolean","format":"boolean","x-mux-doc-decorators":["hidden"],"deprecated":true},"upload_id":{"type":"string","description":"Unique identifier for the Direct Upload. This is an optional parameter added when the asset is created from a direct upload."},"is_live":{"type":"boolean","format":"boolean","description":"Indicates whether the live stream that created this asset is currently `active` and not in `idle` state. This is an optional parameter added when the asset is created from a live stream."},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the asset. Max 255 characters."},"live_stream_id":{"type":"string","description":"Unique identifier for the live stream. This is an optional parameter added when the asset is created from a live stream."},"master":{"type":"object","description":"An object containing the current status of Master Access and the link to the Master MP4 file when ready. This object does not exist if `master_access` is set to `none` and when the temporary URL expires.","properties":{"status":{"enum":["ready","preparing","errored"],"type":"string"},"url":{"type":"string","description":"The temporary URL to the master version of the video, as an MP4 file. This URL will expire after 24 hours."}}},"master_access":{"type":"string","enum":["temporary","none"],"default":"none"},"mp4_support":{"type":"string","default":"none","enum":["standard","none","capped-1080p","audio-only","audio-only,capped-1080p"],"x-mux-doc-decorators-deprecated-enum-values":["standard"]},"source_asset_id":{"type":"string","description":"Asset Identifier of the video used as the source for creating the clip."},"normalize_audio":{"type":"boolean","default":false,"description":"Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets."},"static_renditions":{"type":"object","description":"An object containing the current status of any static renditions (mp4s). The object does not exist if no static renditions have been requested. See [Download your videos](https://docs.mux.com/guides/enable-static-mp4-renditions) for more information.","properties":{"status":{"type":"string","default":"disabled","description":"Indicates the status of downloadable MP4 versions of this asset.","enum":["ready","preparing","disabled","errored"]},"files":{"type":"array","description":"Array of file objects.","items":{"type":"object","properties":{"name":{"type":"string","enum":["low.mp4","medium.mp4","high.mp4","audio.m4a","capped-1080p.mp4"]},"ext":{"type":"string","description":"Extension of the static rendition file","enum":["mp4","m4a"]},"height":{"type":"integer","format":"int32","description":"The height of the static rendition\'s file in pixels"},"width":{"type":"integer","format":"int32","description":"The width of the static rendition\'s file in pixels"},"bitrate":{"type":"integer","format":"int64","description":"The bitrate in bits per second"},"filesize":{"type":"integer","format":"int64","description":"The file size in bytes"}}}}}},"recording_times":{"type":"array","description":"An array of individual live stream recording sessions. A recording session is created on each encoder connection during the live stream. Additionally any time slate media is inserted during brief interruptions in the live stream media or times when the live streaming software disconnects, a recording session representing the slate media will be added with a \\"slate\\" type.","items":{"type":"object","properties":{"started_at":{"type":"object","properties":{"nanos":{"format":"int32","type":"integer"},"seconds":{"format":"int32","type":"integer"}},"required":["seconds"]},"duration":{"type":"number","format":"double","description":"The duration of the live stream recorded. The time value is in seconds."},"type":{"type":"string","enum":["content","slate"],"description":"The type of media represented by the recording session, either `content` for normal stream content or `slate` for slate media inserted during stream interruptions."}}}},"non_standard_input_reasons":{"type":"object","description":"An object containing one or more reasons the input file is non-standard. See [the guide on minimizing processing time](https://docs.mux.com/guides/minimize-processing-time) for more information on what a standard input is defined as. This object only exists on on-demand assets that have non-standard inputs, so if missing you can assume the input qualifies as standard.","properties":{"video_codec":{"type":"string","description":"The video codec used on the input file. For example, the input file encoded with `hevc` video codec is non-standard and the value of this parameter is `hevc`."},"audio_codec":{"type":"string","description":"The audio codec used on the input file. Non-AAC audio codecs are non-standard."},"video_gop_size":{"type":"string","enum":["high"],"description":"The video key frame Interval (also called as Group of Picture or GOP) of the input file is `high`. This parameter is present when the gop is greater than 20 seconds."},"video_frame_rate":{"type":"string","description":"The video frame rate of the input file. Video with average frames per second (fps) less than 5 or greater than 120 is non-standard. A `-1` frame rate value indicates Mux could not determine the frame rate of the video track."},"video_resolution":{"type":"string","description":"The video resolution of the input file. Video resolution higher than 2048 pixels on any one dimension (height or width) is considered non-standard, The resolution value is presented as `width` x `height` in pixels."},"video_bitrate":{"type":"string","enum":["high"],"description":"The video bitrate of the input file is `high`. This parameter is present when the average bitrate of any key frame interval (also known as Group of Pictures or GOP) is higher than what\'s considered standard which typically is 16 Mbps."},"pixel_aspect_ratio":{"type":"string","description":"The video pixel aspect ratio of the input file."},"video_edit_list":{"type":"string","enum":["non-standard"],"description":"Video Edit List reason indicates that the input file\'s video track contains a complex Edit Decision List."},"audio_edit_list":{"type":"string","enum":["non-standard"],"description":"Audio Edit List reason indicates that the input file\'s audio track contains a complex Edit Decision List."},"unexpected_media_file_parameters":{"type":"string","enum":["non-standard"],"description":"A catch-all reason when the input file in created with non-standard encoding parameters."},"unsupported_pixel_format":{"type":"string","description":"The video pixel format, as a string, returned by libav. Considered non-standard if not one of yuv420p or yuvj420p."},"unexpected_video_parameters":{"type":"string"}}},"test":{"type":"boolean","format":"boolean","description":"True means this live stream is a test asset. A test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test assets are watermarked with the Mux logo, limited to 10 seconds, and deleted after 24 hrs."},"ingest_type":{"type":"string","enum":["on_demand_url","on_demand_direct_upload","on_demand_clip","live_rtmp","live_srt"],"description":"The type of ingest used to create the asset."}}},"attempts":{"type":"array","description":"Attempts for sending out the webhook event","items":{"type":"object","properties":{"webhook_id":{"type":"integer","description":"Unique identifier for the webhook"},"response_status_code":{"type":"integer","description":"HTTP response status code for the webhook attempt"},"response_headers":{"type":"object","description":"HTTP response headers for the webhook attempt"},"response_body":{"type":["string","null"],"description":"HTTP response body for the webhook attempt"},"max_attempts":{"description":"Max attempts number for the webhook attempt","type":"integer"},"id":{"description":"Unique identifier for the webhook attempt","type":"string"},"created_at":{"description":"Time the webhook request was attempted","type":"string","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"address":{"description":"URL address for the webhook attempt","type":"string"}}}},"request_id":{"type":["string","null"],"deprecated":true},"accessor":{"type":["string","null"],"deprecated":true},"accessor_source":{"type":["string","null"],"deprecated":true}},"required":["type","id","created_at","object","environment","data","attempts"]},"example":{"aspect_ratio":"16:9","created_at":1655153801,"duration":3801.6041666666665,"event_created_at":1655157781169,"id":"SqQnqz6s5MBuXGvJaUWdXuXM93J9Q2yv","master":{"status":"ready","url":"https://master.mux.com/ES2Kj02pRI00jJkODUfnQ00n85BTqCw3/master.mp4?skid=default&signature={signature}"},"master_access":"temporary","max_stored_frame_rate":48,"max_stored_resolution":"HD","resolution_tier":"1080p","mp4_support":"standard","passthrough":"mux","playback_ids":[{"id":"uNbxnGLKJ00yfbijDO8COxTOyVKT01xpxW","policy":"public"}],"recording_times":[{"duration":3801.563,"started_at":{"nanos":709000000,"seconds":1655153802}}],"static_renditions":{"status":"preparing"},"status":"ready","tracks":[{"id":"YHCJ3v01q01FKAQsbWHxJhbvPzHxmJMF01pcqPLFmO01y8U","max_frame_rate":48,"max_height":1080,"max_width":1920,"type":"video"},{"id":"S100l8jiTnb4JWrD8dWB2GbjZd02ntCMZXjiHzB4S5XSk","max_channel_layout":"stereo","max_channels":2,"type":"audio"},{"id":"SFr6sYtIUABcccFs01Zy01r01Vsc7seiSAlw02DEfbszqQP1uRstOlmpLQ","language_code":"en-US","name":"American English","status":"ready","text_source":"uploaded","text_type":"subtitles","type":"text"}]}},"video.asset.deleted":{"description":"An asset has been deleted. Use this so that your server knows when an asset has been deleted, at which point it will no longer be playable.","payload":{"type":"object","properties":{"type":{"type":"string","description":"Type for the webhook event"},"id":{"type":"string","description":"Unique identifier for the event"},"created_at":{"type":"string","description":"Time the event was created","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"object":{"type":"object","properties":{"type":{"type":"string"},"id":{"type":"string"}},"required":["type","id"]},"environment":{"type":"object","properties":{"name":{"type":"string","description":"Name for the environment"},"id":{"type":"string","description":"Unique identifier for the environment"}},"required":["name","id"]},"data":{"type":"object","x-required":["id","created_at","status","max_resolution_tier","encoding_tier","mp4_support","master_access"],"properties":{"id":{"type":"string","description":"Unique identifier for the Asset. Max 255 characters."},"created_at":{"type":"integer","format":"int32"},"status":{"type":"string","enum":["preparing","ready","errored"],"description":"The status of the asset."},"duration":{"type":"number","format":"double","description":"The duration of the asset in seconds (max duration for a single asset is 12 hours)."},"max_stored_resolution":{"type":"string","enum":["Audio only","SD","HD","FHD","UHD"],"description":"This field is deprecated. Please use `resolution_tier` instead. The maximum resolution that has been stored for the asset. The asset may be delivered at lower resolutions depending on the device and bandwidth, however it cannot be delivered at a higher value than is stored.","deprecated":true},"resolution_tier":{"type":"string","enum":["audio-only","720p","1080p","1440p","2160p"],"description":"The resolution tier that the asset was ingested at, affecting billing for ingest & storage. This field also represents the highest resolution tier that the content can be delivered at, however the actual resolution may be lower depending on the device, bandwidth, and exact resolution of the uploaded asset."},"max_resolution_tier":{"type":"string","enum":["1080p","1440p","2160p"],"description":"Max resolution tier can be used to control the maximum `resolution_tier` your asset is encoded, stored, and streamed at. If not set, this defaults to `1080p`."},"encoding_tier":{"type":"string","deprecated":true,"enum":["smart","baseline","premium"],"description":"This field is deprecated. Please use `video_quality` instead. The encoding tier informs the cost, quality, and available platform features for the asset. The default encoding tier for an account can be set in the Mux Dashboard. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"video_quality":{"type":"string","enum":["basic","plus","premium"],"description":"The video quality controls the cost, quality, and available platform features for the asset. The default video quality for an account can be set in the Mux Dashboard. This field replaces the deprecated `encoding_tier` value. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"max_stored_frame_rate":{"type":"number","format":"double","description":"The maximum frame rate that has been stored for the asset. The asset may be delivered at lower frame rates depending on the device and bandwidth, however it cannot be delivered at a higher value than is stored. This field may return -1 if the frame rate of the input cannot be reliably determined."},"aspect_ratio":{"type":"string","description":"The aspect ratio of the asset in the form of `width:height`, for example `16:9`."},"playback_ids":{"type":"array","description":"An array of Playback ID objects. Use these to create HLS playback URLs. See [Play your videos](https://docs.mux.com/guides/play-your-videos) for more details.","items":{"type":"object","x-required":["id","policy"],"properties":{"id":{"type":"string","description":"Unique identifier for the PlaybackID"},"policy":{"type":"string","enum":["public","signed","drm"],"description":"* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\\n\\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](https://docs.mux.com/guides/secure-video-playback) for details about creating tokens.\\n\\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](https://docs.mux.com/guides/protect-videos-with-drm).\\n"},"drm_configuration_id":{"type":"string","description":"The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."}}}},"tracks":{"type":"array","description":"The individual media tracks that make up an asset.","items":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier for the Track"},"type":{"type":"string","description":"The type of track","enum":["video","audio","text"]},"duration":{"type":"number","format":"double","description":"The duration in seconds of the track media. This parameter is not set for `text` type tracks. This field is optional and may not be set. The top level `duration` field of an asset will always be set."},"max_width":{"type":"integer","format":"int64","description":"The maximum width in pixels available for the track. Only set for the `video` type track."},"max_height":{"type":"integer","format":"int64","description":"The maximum height in pixels available for the track. Only set for the `video` type track."},"max_frame_rate":{"type":"number","format":"double","description":"The maximum frame rate available for the track. Only set for the `video` type track. This field may return `-1` if the frame rate of the input cannot be reliably determined."},"max_channels":{"type":"integer","format":"int64","description":"The maximum number of audio channels the track supports. Only set for the `audio` type track."},"max_channel_layout":{"type":"string","description":"Only set for the `audio` type track.","deprecated":true},"text_type":{"type":"string","enum":["subtitles"],"description":"This parameter is only set for `text` type tracks."},"text_source":{"type":"string","description":"The source of the text contained in a Track of type `text`. Valid `text_source`\\nvalues are listed below.\\n* `uploaded`: Tracks uploaded to Mux as caption or subtitle files using the Create Asset Track API.\\n* `embedded`: Tracks extracted from an embedded stream of CEA-608 closed captions.\\n* `generated_vod`: Tracks generated by automatic speech recognition on an on-demand asset.\\n* `generated_live`: Tracks generated by automatic speech recognition on a live stream configured with `generated_subtitles`. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\\n* `generated_live_final`: Tracks generated by automatic speech recognition on a live stream using `generated_subtitles`. The accuracy, timing, and formatting of these subtitles is improved compared to the corresponding `generated_live` tracks. However, `generated_live_final` tracks will not be available in `ready` status until the live stream ends. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\\n","enum":["uploaded","embedded","generated_live","generated_live_final","generated_vod"]},"language_code":{"type":"string","description":"The language code value represents [BCP 47](https://tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is only set for `text` and `audio` track types."},"name":{"type":"string","description":"The name of the track containing a human-readable description. The HLS manifest will associate a subtitle `text` or `audio` track with this value. For example, the value should be \\"English\\" for a subtitle text track for the `language_code` value of `en-US`. This parameter is only set for `text` and `audio` track types."},"closed_captions":{"type":"boolean","description":"Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This parameter is only set tracks where `type` is `text` and `text_type` is `subtitles`."},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the track either when creating the asset or track. This parameter is only set for `text` type tracks. Max 255 characters."},"status":{"type":"string","enum":["preparing","ready","errored","deleted"],"description":"The status of the track. This parameter is only set for `text` type tracks."},"primary":{"type":"boolean","description":"For an audio track, indicates that this is the primary audio track, ingested from the main input for this asset. The primary audio track cannot be deleted."},"error":{"type":"object","description":"Object that describes any errors that happened when processing this asset.","properties":{"type":{"type":"string","description":"The type of error that occurred for this asset."},"messages":{"type":"array","description":"Error messages with more details.","items":{"type":"string"}}}}}}},"errors":{"type":"object","description":"Object that describes any errors that happened when processing this asset.","properties":{"type":{"type":"string","description":"The type of error that occurred for this asset."},"messages":{"type":"array","description":"Error messages with more details.","items":{"type":"string"}}}},"per_title_encode":{"type":"boolean","format":"boolean","x-mux-doc-decorators":["hidden"],"deprecated":true},"upload_id":{"type":"string","description":"Unique identifier for the Direct Upload. This is an optional parameter added when the asset is created from a direct upload."},"is_live":{"type":"boolean","format":"boolean","description":"Indicates whether the live stream that created this asset is currently `active` and not in `idle` state. This is an optional parameter added when the asset is created from a live stream."},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the asset. Max 255 characters."},"live_stream_id":{"type":"string","description":"Unique identifier for the live stream. This is an optional parameter added when the asset is created from a live stream."},"master":{"type":"object","description":"An object containing the current status of Master Access and the link to the Master MP4 file when ready. This object does not exist if `master_access` is set to `none` and when the temporary URL expires.","properties":{"status":{"enum":["ready","preparing","errored"],"type":"string"},"url":{"type":"string","description":"The temporary URL to the master version of the video, as an MP4 file. This URL will expire after 24 hours."}}},"master_access":{"type":"string","enum":["temporary","none"],"default":"none"},"mp4_support":{"type":"string","default":"none","enum":["standard","none","capped-1080p","audio-only","audio-only,capped-1080p"],"x-mux-doc-decorators-deprecated-enum-values":["standard"]},"source_asset_id":{"type":"string","description":"Asset Identifier of the video used as the source for creating the clip."},"normalize_audio":{"type":"boolean","default":false,"description":"Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets."},"static_renditions":{"type":"object","description":"An object containing the current status of any static renditions (mp4s). The object does not exist if no static renditions have been requested. See [Download your videos](https://docs.mux.com/guides/enable-static-mp4-renditions) for more information.","properties":{"status":{"type":"string","default":"disabled","description":"Indicates the status of downloadable MP4 versions of this asset.","enum":["ready","preparing","disabled","errored"]},"files":{"type":"array","description":"Array of file objects.","items":{"type":"object","properties":{"name":{"type":"string","enum":["low.mp4","medium.mp4","high.mp4","audio.m4a","capped-1080p.mp4"]},"ext":{"type":"string","description":"Extension of the static rendition file","enum":["mp4","m4a"]},"height":{"type":"integer","format":"int32","description":"The height of the static rendition\'s file in pixels"},"width":{"type":"integer","format":"int32","description":"The width of the static rendition\'s file in pixels"},"bitrate":{"type":"integer","format":"int64","description":"The bitrate in bits per second"},"filesize":{"type":"integer","format":"int64","description":"The file size in bytes"}}}}}},"recording_times":{"type":"array","description":"An array of individual live stream recording sessions. A recording session is created on each encoder connection during the live stream. Additionally any time slate media is inserted during brief interruptions in the live stream media or times when the live streaming software disconnects, a recording session representing the slate media will be added with a \\"slate\\" type.","items":{"type":"object","properties":{"started_at":{"type":"object","properties":{"nanos":{"format":"int32","type":"integer"},"seconds":{"format":"int32","type":"integer"}},"required":["seconds"]},"duration":{"type":"number","format":"double","description":"The duration of the live stream recorded. The time value is in seconds."},"type":{"type":"string","enum":["content","slate"],"description":"The type of media represented by the recording session, either `content` for normal stream content or `slate` for slate media inserted during stream interruptions."}}}},"non_standard_input_reasons":{"type":"object","description":"An object containing one or more reasons the input file is non-standard. See [the guide on minimizing processing time](https://docs.mux.com/guides/minimize-processing-time) for more information on what a standard input is defined as. This object only exists on on-demand assets that have non-standard inputs, so if missing you can assume the input qualifies as standard.","properties":{"video_codec":{"type":"string","description":"The video codec used on the input file. For example, the input file encoded with `hevc` video codec is non-standard and the value of this parameter is `hevc`."},"audio_codec":{"type":"string","description":"The audio codec used on the input file. Non-AAC audio codecs are non-standard."},"video_gop_size":{"type":"string","enum":["high"],"description":"The video key frame Interval (also called as Group of Picture or GOP) of the input file is `high`. This parameter is present when the gop is greater than 20 seconds."},"video_frame_rate":{"type":"string","description":"The video frame rate of the input file. Video with average frames per second (fps) less than 5 or greater than 120 is non-standard. A `-1` frame rate value indicates Mux could not determine the frame rate of the video track."},"video_resolution":{"type":"string","description":"The video resolution of the input file. Video resolution higher than 2048 pixels on any one dimension (height or width) is considered non-standard, The resolution value is presented as `width` x `height` in pixels."},"video_bitrate":{"type":"string","enum":["high"],"description":"The video bitrate of the input file is `high`. This parameter is present when the average bitrate of any key frame interval (also known as Group of Pictures or GOP) is higher than what\'s considered standard which typically is 16 Mbps."},"pixel_aspect_ratio":{"type":"string","description":"The video pixel aspect ratio of the input file."},"video_edit_list":{"type":"string","enum":["non-standard"],"description":"Video Edit List reason indicates that the input file\'s video track contains a complex Edit Decision List."},"audio_edit_list":{"type":"string","enum":["non-standard"],"description":"Audio Edit List reason indicates that the input file\'s audio track contains a complex Edit Decision List."},"unexpected_media_file_parameters":{"type":"string","enum":["non-standard"],"description":"A catch-all reason when the input file in created with non-standard encoding parameters."},"unsupported_pixel_format":{"type":"string","description":"The video pixel format, as a string, returned by libav. Considered non-standard if not one of yuv420p or yuvj420p."},"unexpected_video_parameters":{"type":"string"}}},"test":{"type":"boolean","format":"boolean","description":"True means this live stream is a test asset. A test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test assets are watermarked with the Mux logo, limited to 10 seconds, and deleted after 24 hrs."},"ingest_type":{"type":"string","enum":["on_demand_url","on_demand_direct_upload","on_demand_clip","live_rtmp","live_srt"],"description":"The type of ingest used to create the asset."}}},"attempts":{"type":"array","description":"Attempts for sending out the webhook event","items":{"type":"object","properties":{"webhook_id":{"type":"integer","description":"Unique identifier for the webhook"},"response_status_code":{"type":"integer","description":"HTTP response status code for the webhook attempt"},"response_headers":{"type":"object","description":"HTTP response headers for the webhook attempt"},"response_body":{"type":["string","null"],"description":"HTTP response body for the webhook attempt"},"max_attempts":{"description":"Max attempts number for the webhook attempt","type":"integer"},"id":{"description":"Unique identifier for the webhook attempt","type":"string"},"created_at":{"description":"Time the webhook request was attempted","type":"string","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"address":{"description":"URL address for the webhook attempt","type":"string"}}}},"request_id":{"type":["string","null"],"deprecated":true},"accessor":{"type":["string","null"],"deprecated":true},"accessor_source":{"type":["string","null"],"deprecated":true}},"required":["type","id","created_at","object","environment","data","attempts"]},"example":{"aspect_ratio":"16:9","created_at":1642487872,"duration":2.225789,"id":"SqQnqz6s5MBuXGvJaUWdXuXM93J9Q2yv","master_access":"none","max_stored_frame_rate":29.917,"max_stored_resolution":"HD","resolution_tier":"1080p","mp4_support":"none","passthrough":"mux","recording_times":[{"duration":2.205,"started_at":{"nanos":622000000,"seconds":1642487873}}],"status":"ready","tracks":[{"id":"RGX5211voSGwqYX8Cf9A00gQaxRXamh0","max_frame_rate":29.917,"max_height":720,"max_width":1280,"type":"video"},{"id":"Yn9bnXQ4VcC01KlTl018OAzowXn1r8eT","max_channel_layout":"mono","max_channels":1,"type":"audio"}]}},"video.asset.live_stream_completed":{"description":"The live stream for this asset has completed. Every time a live stream starts and ends a new asset gets created and this event fires.","payload":{"type":"object","properties":{"type":{"type":"string","description":"Type for the webhook event"},"id":{"type":"string","description":"Unique identifier for the event"},"created_at":{"type":"string","description":"Time the event was created","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"object":{"type":"object","properties":{"type":{"type":"string"},"id":{"type":"string"}},"required":["type","id"]},"environment":{"type":"object","properties":{"name":{"type":"string","description":"Name for the environment"},"id":{"type":"string","description":"Unique identifier for the environment"}},"required":["name","id"]},"data":{"type":"object","x-required":["id","created_at","status","max_resolution_tier","encoding_tier","mp4_support","master_access"],"properties":{"id":{"type":"string","description":"Unique identifier for the Asset. Max 255 characters."},"created_at":{"type":"integer","format":"int32"},"status":{"type":"string","enum":["preparing","ready","errored"],"description":"The status of the asset."},"duration":{"type":"number","format":"double","description":"The duration of the asset in seconds (max duration for a single asset is 12 hours)."},"max_stored_resolution":{"type":"string","enum":["Audio only","SD","HD","FHD","UHD"],"description":"This field is deprecated. Please use `resolution_tier` instead. The maximum resolution that has been stored for the asset. The asset may be delivered at lower resolutions depending on the device and bandwidth, however it cannot be delivered at a higher value than is stored.","deprecated":true},"resolution_tier":{"type":"string","enum":["audio-only","720p","1080p","1440p","2160p"],"description":"The resolution tier that the asset was ingested at, affecting billing for ingest & storage. This field also represents the highest resolution tier that the content can be delivered at, however the actual resolution may be lower depending on the device, bandwidth, and exact resolution of the uploaded asset."},"max_resolution_tier":{"type":"string","enum":["1080p","1440p","2160p"],"description":"Max resolution tier can be used to control the maximum `resolution_tier` your asset is encoded, stored, and streamed at. If not set, this defaults to `1080p`."},"encoding_tier":{"type":"string","deprecated":true,"enum":["smart","baseline","premium"],"description":"This field is deprecated. Please use `video_quality` instead. The encoding tier informs the cost, quality, and available platform features for the asset. The default encoding tier for an account can be set in the Mux Dashboard. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"video_quality":{"type":"string","enum":["basic","plus","premium"],"description":"The video quality controls the cost, quality, and available platform features for the asset. The default video quality for an account can be set in the Mux Dashboard. This field replaces the deprecated `encoding_tier` value. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"max_stored_frame_rate":{"type":"number","format":"double","description":"The maximum frame rate that has been stored for the asset. The asset may be delivered at lower frame rates depending on the device and bandwidth, however it cannot be delivered at a higher value than is stored. This field may return -1 if the frame rate of the input cannot be reliably determined."},"aspect_ratio":{"type":"string","description":"The aspect ratio of the asset in the form of `width:height`, for example `16:9`."},"playback_ids":{"type":"array","description":"An array of Playback ID objects. Use these to create HLS playback URLs. See [Play your videos](https://docs.mux.com/guides/play-your-videos) for more details.","items":{"type":"object","x-required":["id","policy"],"properties":{"id":{"type":"string","description":"Unique identifier for the PlaybackID"},"policy":{"type":"string","enum":["public","signed","drm"],"description":"* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\\n\\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](https://docs.mux.com/guides/secure-video-playback) for details about creating tokens.\\n\\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](https://docs.mux.com/guides/protect-videos-with-drm).\\n"},"drm_configuration_id":{"type":"string","description":"The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."}}}},"tracks":{"type":"array","description":"The individual media tracks that make up an asset.","items":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier for the Track"},"type":{"type":"string","description":"The type of track","enum":["video","audio","text"]},"duration":{"type":"number","format":"double","description":"The duration in seconds of the track media. This parameter is not set for `text` type tracks. This field is optional and may not be set. The top level `duration` field of an asset will always be set."},"max_width":{"type":"integer","format":"int64","description":"The maximum width in pixels available for the track. Only set for the `video` type track."},"max_height":{"type":"integer","format":"int64","description":"The maximum height in pixels available for the track. Only set for the `video` type track."},"max_frame_rate":{"type":"number","format":"double","description":"The maximum frame rate available for the track. Only set for the `video` type track. This field may return `-1` if the frame rate of the input cannot be reliably determined."},"max_channels":{"type":"integer","format":"int64","description":"The maximum number of audio channels the track supports. Only set for the `audio` type track."},"max_channel_layout":{"type":"string","description":"Only set for the `audio` type track.","deprecated":true},"text_type":{"type":"string","enum":["subtitles"],"description":"This parameter is only set for `text` type tracks."},"text_source":{"type":"string","description":"The source of the text contained in a Track of type `text`. Valid `text_source`\\nvalues are listed below.\\n* `uploaded`: Tracks uploaded to Mux as caption or subtitle files using the Create Asset Track API.\\n* `embedded`: Tracks extracted from an embedded stream of CEA-608 closed captions.\\n* `generated_vod`: Tracks generated by automatic speech recognition on an on-demand asset.\\n* `generated_live`: Tracks generated by automatic speech recognition on a live stream configured with `generated_subtitles`. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\\n* `generated_live_final`: Tracks generated by automatic speech recognition on a live stream using `generated_subtitles`. The accuracy, timing, and formatting of these subtitles is improved compared to the corresponding `generated_live` tracks. However, `generated_live_final` tracks will not be available in `ready` status until the live stream ends. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\\n","enum":["uploaded","embedded","generated_live","generated_live_final","generated_vod"]},"language_code":{"type":"string","description":"The language code value represents [BCP 47](https://tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is only set for `text` and `audio` track types."},"name":{"type":"string","description":"The name of the track containing a human-readable description. The HLS manifest will associate a subtitle `text` or `audio` track with this value. For example, the value should be \\"English\\" for a subtitle text track for the `language_code` value of `en-US`. This parameter is only set for `text` and `audio` track types."},"closed_captions":{"type":"boolean","description":"Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This parameter is only set tracks where `type` is `text` and `text_type` is `subtitles`."},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the track either when creating the asset or track. This parameter is only set for `text` type tracks. Max 255 characters."},"status":{"type":"string","enum":["preparing","ready","errored","deleted"],"description":"The status of the track. This parameter is only set for `text` type tracks."},"primary":{"type":"boolean","description":"For an audio track, indicates that this is the primary audio track, ingested from the main input for this asset. The primary audio track cannot be deleted."},"error":{"type":"object","description":"Object that describes any errors that happened when processing this asset.","properties":{"type":{"type":"string","description":"The type of error that occurred for this asset."},"messages":{"type":"array","description":"Error messages with more details.","items":{"type":"string"}}}}}}},"errors":{"type":"object","description":"Object that describes any errors that happened when processing this asset.","properties":{"type":{"type":"string","description":"The type of error that occurred for this asset."},"messages":{"type":"array","description":"Error messages with more details.","items":{"type":"string"}}}},"per_title_encode":{"type":"boolean","format":"boolean","x-mux-doc-decorators":["hidden"],"deprecated":true},"upload_id":{"type":"string","description":"Unique identifier for the Direct Upload. This is an optional parameter added when the asset is created from a direct upload."},"is_live":{"type":"boolean","format":"boolean","description":"Indicates whether the live stream that created this asset is currently `active` and not in `idle` state. This is an optional parameter added when the asset is created from a live stream."},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the asset. Max 255 characters."},"live_stream_id":{"type":"string","description":"Unique identifier for the live stream. This is an optional parameter added when the asset is created from a live stream."},"master":{"type":"object","description":"An object containing the current status of Master Access and the link to the Master MP4 file when ready. This object does not exist if `master_access` is set to `none` and when the temporary URL expires.","properties":{"status":{"enum":["ready","preparing","errored"],"type":"string"},"url":{"type":"string","description":"The temporary URL to the master version of the video, as an MP4 file. This URL will expire after 24 hours."}}},"master_access":{"type":"string","enum":["temporary","none"],"default":"none"},"mp4_support":{"type":"string","default":"none","enum":["standard","none","capped-1080p","audio-only","audio-only,capped-1080p"],"x-mux-doc-decorators-deprecated-enum-values":["standard"]},"source_asset_id":{"type":"string","description":"Asset Identifier of the video used as the source for creating the clip."},"normalize_audio":{"type":"boolean","default":false,"description":"Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets."},"static_renditions":{"type":"object","description":"An object containing the current status of any static renditions (mp4s). The object does not exist if no static renditions have been requested. See [Download your videos](https://docs.mux.com/guides/enable-static-mp4-renditions) for more information.","properties":{"status":{"type":"string","default":"disabled","description":"Indicates the status of downloadable MP4 versions of this asset.","enum":["ready","preparing","disabled","errored"]},"files":{"type":"array","description":"Array of file objects.","items":{"type":"object","properties":{"name":{"type":"string","enum":["low.mp4","medium.mp4","high.mp4","audio.m4a","capped-1080p.mp4"]},"ext":{"type":"string","description":"Extension of the static rendition file","enum":["mp4","m4a"]},"height":{"type":"integer","format":"int32","description":"The height of the static rendition\'s file in pixels"},"width":{"type":"integer","format":"int32","description":"The width of the static rendition\'s file in pixels"},"bitrate":{"type":"integer","format":"int64","description":"The bitrate in bits per second"},"filesize":{"type":"integer","format":"int64","description":"The file size in bytes"}}}}}},"recording_times":{"type":"array","description":"An array of individual live stream recording sessions. A recording session is created on each encoder connection during the live stream. Additionally any time slate media is inserted during brief interruptions in the live stream media or times when the live streaming software disconnects, a recording session representing the slate media will be added with a \\"slate\\" type.","items":{"type":"object","properties":{"started_at":{"type":"object","properties":{"nanos":{"format":"int32","type":"integer"},"seconds":{"format":"int32","type":"integer"}},"required":["seconds"]},"duration":{"type":"number","format":"double","description":"The duration of the live stream recorded. The time value is in seconds."},"type":{"type":"string","enum":["content","slate"],"description":"The type of media represented by the recording session, either `content` for normal stream content or `slate` for slate media inserted during stream interruptions."}}}},"non_standard_input_reasons":{"type":"object","description":"An object containing one or more reasons the input file is non-standard. See [the guide on minimizing processing time](https://docs.mux.com/guides/minimize-processing-time) for more information on what a standard input is defined as. This object only exists on on-demand assets that have non-standard inputs, so if missing you can assume the input qualifies as standard.","properties":{"video_codec":{"type":"string","description":"The video codec used on the input file. For example, the input file encoded with `hevc` video codec is non-standard and the value of this parameter is `hevc`."},"audio_codec":{"type":"string","description":"The audio codec used on the input file. Non-AAC audio codecs are non-standard."},"video_gop_size":{"type":"string","enum":["high"],"description":"The video key frame Interval (also called as Group of Picture or GOP) of the input file is `high`. This parameter is present when the gop is greater than 20 seconds."},"video_frame_rate":{"type":"string","description":"The video frame rate of the input file. Video with average frames per second (fps) less than 5 or greater than 120 is non-standard. A `-1` frame rate value indicates Mux could not determine the frame rate of the video track."},"video_resolution":{"type":"string","description":"The video resolution of the input file. Video resolution higher than 2048 pixels on any one dimension (height or width) is considered non-standard, The resolution value is presented as `width` x `height` in pixels."},"video_bitrate":{"type":"string","enum":["high"],"description":"The video bitrate of the input file is `high`. This parameter is present when the average bitrate of any key frame interval (also known as Group of Pictures or GOP) is higher than what\'s considered standard which typically is 16 Mbps."},"pixel_aspect_ratio":{"type":"string","description":"The video pixel aspect ratio of the input file."},"video_edit_list":{"type":"string","enum":["non-standard"],"description":"Video Edit List reason indicates that the input file\'s video track contains a complex Edit Decision List."},"audio_edit_list":{"type":"string","enum":["non-standard"],"description":"Audio Edit List reason indicates that the input file\'s audio track contains a complex Edit Decision List."},"unexpected_media_file_parameters":{"type":"string","enum":["non-standard"],"description":"A catch-all reason when the input file in created with non-standard encoding parameters."},"unsupported_pixel_format":{"type":"string","description":"The video pixel format, as a string, returned by libav. Considered non-standard if not one of yuv420p or yuvj420p."},"unexpected_video_parameters":{"type":"string"}}},"test":{"type":"boolean","format":"boolean","description":"True means this live stream is a test asset. A test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test assets are watermarked with the Mux logo, limited to 10 seconds, and deleted after 24 hrs."},"ingest_type":{"type":"string","enum":["on_demand_url","on_demand_direct_upload","on_demand_clip","live_rtmp","live_srt"],"description":"The type of ingest used to create the asset."}}},"attempts":{"type":"array","description":"Attempts for sending out the webhook event","items":{"type":"object","properties":{"webhook_id":{"type":"integer","description":"Unique identifier for the webhook"},"response_status_code":{"type":"integer","description":"HTTP response status code for the webhook attempt"},"response_headers":{"type":"object","description":"HTTP response headers for the webhook attempt"},"response_body":{"type":["string","null"],"description":"HTTP response body for the webhook attempt"},"max_attempts":{"description":"Max attempts number for the webhook attempt","type":"integer"},"id":{"description":"Unique identifier for the webhook attempt","type":"string"},"created_at":{"description":"Time the webhook request was attempted","type":"string","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"address":{"description":"URL address for the webhook attempt","type":"string"}}}},"request_id":{"type":["string","null"],"deprecated":true},"accessor":{"type":["string","null"],"deprecated":true},"accessor_source":{"type":["string","null"],"deprecated":true}},"required":["type","id","created_at","object","environment","data","attempts"]},"example":{"aspect_ratio":"16:9","created_at":1648036857,"duration":70.633333,"id":"SqQnqz6s5MBuXGvJaUWdXuXM93J9Q2yv","live_stream_id":"sY7b7fW01LImWpoOv2oiVROwHv5Y","master":{"status":"preparing"},"master_access":"temporary","max_stored_frame_rate":30,"max_stored_resolution":"HD","resolution_tier":"1080p","mp4_support":"standard","passthrough":"mux","playback_ids":[{"id":"uNbxnGLKJ00yfbijDO8COxTOyVKT01xpxW","policy":"public"}],"recording_times":[{"duration":70.444,"started_at":{"nanos":356000000,"seconds":1648036859}}],"static_renditions":{"status":"preparing"},"status":"ready","tracks":[{"id":"X00Ps1dm4S00IEgWcu5r1ZtA01Lwey00wdK9uFYLYbF7l6c","max_frame_rate":30,"max_height":720,"max_width":1280,"type":"video"},{"id":"Zl3hpkbsMpDPr6WsPebqoWQ541PSwpjVp1umO2p4pe4","max_channel_layout":"stereo","max_channels":2,"type":"audio"}]}},"video.asset.static_renditions.ready":{"description":"Static renditions for this asset are ready. Static renditions are streamable mp4 files that are most commonly used for allowing users to download files for offline viewing.","payload":{"type":"object","properties":{"type":{"type":"string","description":"Type for the webhook event"},"id":{"type":"string","description":"Unique identifier for the event"},"created_at":{"type":"string","description":"Time the event was created","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"object":{"type":"object","properties":{"type":{"type":"string"},"id":{"type":"string"}},"required":["type","id"]},"environment":{"type":"object","properties":{"name":{"type":"string","description":"Name for the environment"},"id":{"type":"string","description":"Unique identifier for the environment"}},"required":["name","id"]},"data":{"type":"object","x-required":["id","created_at","status","max_resolution_tier","encoding_tier","mp4_support","master_access"],"properties":{"id":{"type":"string","description":"Unique identifier for the Asset. Max 255 characters."},"created_at":{"type":"integer","format":"int32"},"status":{"type":"string","enum":["preparing","ready","errored"],"description":"The status of the asset."},"duration":{"type":"number","format":"double","description":"The duration of the asset in seconds (max duration for a single asset is 12 hours)."},"max_stored_resolution":{"type":"string","enum":["Audio only","SD","HD","FHD","UHD"],"description":"This field is deprecated. Please use `resolution_tier` instead. The maximum resolution that has been stored for the asset. The asset may be delivered at lower resolutions depending on the device and bandwidth, however it cannot be delivered at a higher value than is stored.","deprecated":true},"resolution_tier":{"type":"string","enum":["audio-only","720p","1080p","1440p","2160p"],"description":"The resolution tier that the asset was ingested at, affecting billing for ingest & storage. This field also represents the highest resolution tier that the content can be delivered at, however the actual resolution may be lower depending on the device, bandwidth, and exact resolution of the uploaded asset."},"max_resolution_tier":{"type":"string","enum":["1080p","1440p","2160p"],"description":"Max resolution tier can be used to control the maximum `resolution_tier` your asset is encoded, stored, and streamed at. If not set, this defaults to `1080p`."},"encoding_tier":{"type":"string","deprecated":true,"enum":["smart","baseline","premium"],"description":"This field is deprecated. Please use `video_quality` instead. The encoding tier informs the cost, quality, and available platform features for the asset. The default encoding tier for an account can be set in the Mux Dashboard. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"video_quality":{"type":"string","enum":["basic","plus","premium"],"description":"The video quality controls the cost, quality, and available platform features for the asset. The default video quality for an account can be set in the Mux Dashboard. This field replaces the deprecated `encoding_tier` value. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"max_stored_frame_rate":{"type":"number","format":"double","description":"The maximum frame rate that has been stored for the asset. The asset may be delivered at lower frame rates depending on the device and bandwidth, however it cannot be delivered at a higher value than is stored. This field may return -1 if the frame rate of the input cannot be reliably determined."},"aspect_ratio":{"type":"string","description":"The aspect ratio of the asset in the form of `width:height`, for example `16:9`."},"playback_ids":{"type":"array","description":"An array of Playback ID objects. Use these to create HLS playback URLs. See [Play your videos](https://docs.mux.com/guides/play-your-videos) for more details.","items":{"type":"object","x-required":["id","policy"],"properties":{"id":{"type":"string","description":"Unique identifier for the PlaybackID"},"policy":{"type":"string","enum":["public","signed","drm"],"description":"* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\\n\\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](https://docs.mux.com/guides/secure-video-playback) for details about creating tokens.\\n\\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](https://docs.mux.com/guides/protect-videos-with-drm).\\n"},"drm_configuration_id":{"type":"string","description":"The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."}}}},"tracks":{"type":"array","description":"The individual media tracks that make up an asset.","items":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier for the Track"},"type":{"type":"string","description":"The type of track","enum":["video","audio","text"]},"duration":{"type":"number","format":"double","description":"The duration in seconds of the track media. This parameter is not set for `text` type tracks. This field is optional and may not be set. The top level `duration` field of an asset will always be set."},"max_width":{"type":"integer","format":"int64","description":"The maximum width in pixels available for the track. Only set for the `video` type track."},"max_height":{"type":"integer","format":"int64","description":"The maximum height in pixels available for the track. Only set for the `video` type track."},"max_frame_rate":{"type":"number","format":"double","description":"The maximum frame rate available for the track. Only set for the `video` type track. This field may return `-1` if the frame rate of the input cannot be reliably determined."},"max_channels":{"type":"integer","format":"int64","description":"The maximum number of audio channels the track supports. Only set for the `audio` type track."},"max_channel_layout":{"type":"string","description":"Only set for the `audio` type track.","deprecated":true},"text_type":{"type":"string","enum":["subtitles"],"description":"This parameter is only set for `text` type tracks."},"text_source":{"type":"string","description":"The source of the text contained in a Track of type `text`. Valid `text_source`\\nvalues are listed below.\\n* `uploaded`: Tracks uploaded to Mux as caption or subtitle files using the Create Asset Track API.\\n* `embedded`: Tracks extracted from an embedded stream of CEA-608 closed captions.\\n* `generated_vod`: Tracks generated by automatic speech recognition on an on-demand asset.\\n* `generated_live`: Tracks generated by automatic speech recognition on a live stream configured with `generated_subtitles`. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\\n* `generated_live_final`: Tracks generated by automatic speech recognition on a live stream using `generated_subtitles`. The accuracy, timing, and formatting of these subtitles is improved compared to the corresponding `generated_live` tracks. However, `generated_live_final` tracks will not be available in `ready` status until the live stream ends. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\\n","enum":["uploaded","embedded","generated_live","generated_live_final","generated_vod"]},"language_code":{"type":"string","description":"The language code value represents [BCP 47](https://tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is only set for `text` and `audio` track types."},"name":{"type":"string","description":"The name of the track containing a human-readable description. The HLS manifest will associate a subtitle `text` or `audio` track with this value. For example, the value should be \\"English\\" for a subtitle text track for the `language_code` value of `en-US`. This parameter is only set for `text` and `audio` track types."},"closed_captions":{"type":"boolean","description":"Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This parameter is only set tracks where `type` is `text` and `text_type` is `subtitles`."},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the track either when creating the asset or track. This parameter is only set for `text` type tracks. Max 255 characters."},"status":{"type":"string","enum":["preparing","ready","errored","deleted"],"description":"The status of the track. This parameter is only set for `text` type tracks."},"primary":{"type":"boolean","description":"For an audio track, indicates that this is the primary audio track, ingested from the main input for this asset. The primary audio track cannot be deleted."},"error":{"type":"object","description":"Object that describes any errors that happened when processing this asset.","properties":{"type":{"type":"string","description":"The type of error that occurred for this asset."},"messages":{"type":"array","description":"Error messages with more details.","items":{"type":"string"}}}}}}},"errors":{"type":"object","description":"Object that describes any errors that happened when processing this asset.","properties":{"type":{"type":"string","description":"The type of error that occurred for this asset."},"messages":{"type":"array","description":"Error messages with more details.","items":{"type":"string"}}}},"per_title_encode":{"type":"boolean","format":"boolean","x-mux-doc-decorators":["hidden"],"deprecated":true},"upload_id":{"type":"string","description":"Unique identifier for the Direct Upload. This is an optional parameter added when the asset is created from a direct upload."},"is_live":{"type":"boolean","format":"boolean","description":"Indicates whether the live stream that created this asset is currently `active` and not in `idle` state. This is an optional parameter added when the asset is created from a live stream."},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the asset. Max 255 characters."},"live_stream_id":{"type":"string","description":"Unique identifier for the live stream. This is an optional parameter added when the asset is created from a live stream."},"master":{"type":"object","description":"An object containing the current status of Master Access and the link to the Master MP4 file when ready. This object does not exist if `master_access` is set to `none` and when the temporary URL expires.","properties":{"status":{"enum":["ready","preparing","errored"],"type":"string"},"url":{"type":"string","description":"The temporary URL to the master version of the video, as an MP4 file. This URL will expire after 24 hours."}}},"master_access":{"type":"string","enum":["temporary","none"],"default":"none"},"mp4_support":{"type":"string","default":"none","enum":["standard","none","capped-1080p","audio-only","audio-only,capped-1080p"],"x-mux-doc-decorators-deprecated-enum-values":["standard"]},"source_asset_id":{"type":"string","description":"Asset Identifier of the video used as the source for creating the clip."},"normalize_audio":{"type":"boolean","default":false,"description":"Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets."},"static_renditions":{"type":"object","description":"An object containing the current status of any static renditions (mp4s). The object does not exist if no static renditions have been requested. See [Download your videos](https://docs.mux.com/guides/enable-static-mp4-renditions) for more information.","properties":{"status":{"type":"string","default":"disabled","description":"Indicates the status of downloadable MP4 versions of this asset.","enum":["ready","preparing","disabled","errored"]},"files":{"type":"array","description":"Array of file objects.","items":{"type":"object","properties":{"name":{"type":"string","enum":["low.mp4","medium.mp4","high.mp4","audio.m4a","capped-1080p.mp4"]},"ext":{"type":"string","description":"Extension of the static rendition file","enum":["mp4","m4a"]},"height":{"type":"integer","format":"int32","description":"The height of the static rendition\'s file in pixels"},"width":{"type":"integer","format":"int32","description":"The width of the static rendition\'s file in pixels"},"bitrate":{"type":"integer","format":"int64","description":"The bitrate in bits per second"},"filesize":{"type":"integer","format":"int64","description":"The file size in bytes"}}}}}},"recording_times":{"type":"array","description":"An array of individual live stream recording sessions. A recording session is created on each encoder connection during the live stream. Additionally any time slate media is inserted during brief interruptions in the live stream media or times when the live streaming software disconnects, a recording session representing the slate media will be added with a \\"slate\\" type.","items":{"type":"object","properties":{"started_at":{"type":"object","properties":{"nanos":{"format":"int32","type":"integer"},"seconds":{"format":"int32","type":"integer"}},"required":["seconds"]},"duration":{"type":"number","format":"double","description":"The duration of the live stream recorded. The time value is in seconds."},"type":{"type":"string","enum":["content","slate"],"description":"The type of media represented by the recording session, either `content` for normal stream content or `slate` for slate media inserted during stream interruptions."}}}},"non_standard_input_reasons":{"type":"object","description":"An object containing one or more reasons the input file is non-standard. See [the guide on minimizing processing time](https://docs.mux.com/guides/minimize-processing-time) for more information on what a standard input is defined as. This object only exists on on-demand assets that have non-standard inputs, so if missing you can assume the input qualifies as standard.","properties":{"video_codec":{"type":"string","description":"The video codec used on the input file. For example, the input file encoded with `hevc` video codec is non-standard and the value of this parameter is `hevc`."},"audio_codec":{"type":"string","description":"The audio codec used on the input file. Non-AAC audio codecs are non-standard."},"video_gop_size":{"type":"string","enum":["high"],"description":"The video key frame Interval (also called as Group of Picture or GOP) of the input file is `high`. This parameter is present when the gop is greater than 20 seconds."},"video_frame_rate":{"type":"string","description":"The video frame rate of the input file. Video with average frames per second (fps) less than 5 or greater than 120 is non-standard. A `-1` frame rate value indicates Mux could not determine the frame rate of the video track."},"video_resolution":{"type":"string","description":"The video resolution of the input file. Video resolution higher than 2048 pixels on any one dimension (height or width) is considered non-standard, The resolution value is presented as `width` x `height` in pixels."},"video_bitrate":{"type":"string","enum":["high"],"description":"The video bitrate of the input file is `high`. This parameter is present when the average bitrate of any key frame interval (also known as Group of Pictures or GOP) is higher than what\'s considered standard which typically is 16 Mbps."},"pixel_aspect_ratio":{"type":"string","description":"The video pixel aspect ratio of the input file."},"video_edit_list":{"type":"string","enum":["non-standard"],"description":"Video Edit List reason indicates that the input file\'s video track contains a complex Edit Decision List."},"audio_edit_list":{"type":"string","enum":["non-standard"],"description":"Audio Edit List reason indicates that the input file\'s audio track contains a complex Edit Decision List."},"unexpected_media_file_parameters":{"type":"string","enum":["non-standard"],"description":"A catch-all reason when the input file in created with non-standard encoding parameters."},"unsupported_pixel_format":{"type":"string","description":"The video pixel format, as a string, returned by libav. Considered non-standard if not one of yuv420p or yuvj420p."},"unexpected_video_parameters":{"type":"string"}}},"test":{"type":"boolean","format":"boolean","description":"True means this live stream is a test asset. A test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test assets are watermarked with the Mux logo, limited to 10 seconds, and deleted after 24 hrs."},"ingest_type":{"type":"string","enum":["on_demand_url","on_demand_direct_upload","on_demand_clip","live_rtmp","live_srt"],"description":"The type of ingest used to create the asset."}}},"attempts":{"type":"array","description":"Attempts for sending out the webhook event","items":{"type":"object","properties":{"webhook_id":{"type":"integer","description":"Unique identifier for the webhook"},"response_status_code":{"type":"integer","description":"HTTP response status code for the webhook attempt"},"response_headers":{"type":"object","description":"HTTP response headers for the webhook attempt"},"response_body":{"type":["string","null"],"description":"HTTP response body for the webhook attempt"},"max_attempts":{"description":"Max attempts number for the webhook attempt","type":"integer"},"id":{"description":"Unique identifier for the webhook attempt","type":"string"},"created_at":{"description":"Time the webhook request was attempted","type":"string","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"address":{"description":"URL address for the webhook attempt","type":"string"}}}},"request_id":{"type":["string","null"],"deprecated":true},"accessor":{"type":["string","null"],"deprecated":true},"accessor_source":{"type":["string","null"],"deprecated":true}},"required":["type","id","created_at","object","environment","data","attempts"]},"example":{"aspect_ratio":"16:9","created_at":1655161384,"duration":77.303667,"event_created_at":1655161455986,"id":"SqQnqz6s5MBuXGvJaUWdXuXM93J9Q2yv","master":{"status":"ready","url":"https://master.mux.com/01yO9JVg3dKPDknRNNAiElf6D55I99Ok/master.mp4?skid=default&signature={signature}"},"master_access":"temporary","max_stored_frame_rate":30.303,"max_stored_resolution":"HD","resolution_tier":"1080p","mp4_support":"standard","non_standard_input_reasons":{"audio_codec":"opus"},"passthrough":"37746","playback_ids":[{"id":"uNbxnGLKJ00yfbijDO8COxTOyVKT01xpxW","policy":"public"}],"static_renditions":{"files":[{"bitrate":4246216,"ext":"mp4","filesize":41043419,"height":1080,"name":"high.mp4","width":1920},{"bitrate":1329632,"ext":"mp4","filesize":12852061,"height":1080,"name":"medium.mp4","width":1920},{"bitrate":718752,"ext":"mp4","filesize":6947402,"height":720,"name":"low.mp4","width":1280}],"status":"ready"},"status":"ready","tracks":[{"id":"L900H24Ghrqg0102r49L300lU1ari3Qp5XW9","max_frame_rate":30.303,"max_height":1080,"max_width":1920,"type":"video"},{"id":"iLiualx5CMSOLSV302r7KjdBM6Jf2LtkWfqZHbjGxfCg","max_channel_layout":"mono","max_channels":1,"type":"audio"}],"upload_id":"HAc9qB7vdQzLcCSNh00VsISAZRmxVsQ"}},"video.asset.static_renditions.preparing":{"description":"Static renditions for this asset are being prepared. After requesting static renditions you will get this webhook when they are being prepared.","payload":{"type":"object","properties":{"type":{"type":"string","description":"Type for the webhook event"},"id":{"type":"string","description":"Unique identifier for the event"},"created_at":{"type":"string","description":"Time the event was created","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"object":{"type":"object","properties":{"type":{"type":"string"},"id":{"type":"string"}},"required":["type","id"]},"environment":{"type":"object","properties":{"name":{"type":"string","description":"Name for the environment"},"id":{"type":"string","description":"Unique identifier for the environment"}},"required":["name","id"]},"data":{"type":"object","x-required":["id","created_at","status","max_resolution_tier","encoding_tier","mp4_support","master_access"],"properties":{"id":{"type":"string","description":"Unique identifier for the Asset. Max 255 characters."},"created_at":{"type":"integer","format":"int32"},"status":{"type":"string","enum":["preparing","ready","errored"],"description":"The status of the asset."},"duration":{"type":"number","format":"double","description":"The duration of the asset in seconds (max duration for a single asset is 12 hours)."},"max_stored_resolution":{"type":"string","enum":["Audio only","SD","HD","FHD","UHD"],"description":"This field is deprecated. Please use `resolution_tier` instead. The maximum resolution that has been stored for the asset. The asset may be delivered at lower resolutions depending on the device and bandwidth, however it cannot be delivered at a higher value than is stored.","deprecated":true},"resolution_tier":{"type":"string","enum":["audio-only","720p","1080p","1440p","2160p"],"description":"The resolution tier that the asset was ingested at, affecting billing for ingest & storage. This field also represents the highest resolution tier that the content can be delivered at, however the actual resolution may be lower depending on the device, bandwidth, and exact resolution of the uploaded asset."},"max_resolution_tier":{"type":"string","enum":["1080p","1440p","2160p"],"description":"Max resolution tier can be used to control the maximum `resolution_tier` your asset is encoded, stored, and streamed at. If not set, this defaults to `1080p`."},"encoding_tier":{"type":"string","deprecated":true,"enum":["smart","baseline","premium"],"description":"This field is deprecated. Please use `video_quality` instead. The encoding tier informs the cost, quality, and available platform features for the asset. The default encoding tier for an account can be set in the Mux Dashboard. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"video_quality":{"type":"string","enum":["basic","plus","premium"],"description":"The video quality controls the cost, quality, and available platform features for the asset. The default video quality for an account can be set in the Mux Dashboard. This field replaces the deprecated `encoding_tier` value. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"max_stored_frame_rate":{"type":"number","format":"double","description":"The maximum frame rate that has been stored for the asset. The asset may be delivered at lower frame rates depending on the device and bandwidth, however it cannot be delivered at a higher value than is stored. This field may return -1 if the frame rate of the input cannot be reliably determined."},"aspect_ratio":{"type":"string","description":"The aspect ratio of the asset in the form of `width:height`, for example `16:9`."},"playback_ids":{"type":"array","description":"An array of Playback ID objects. Use these to create HLS playback URLs. See [Play your videos](https://docs.mux.com/guides/play-your-videos) for more details.","items":{"type":"object","x-required":["id","policy"],"properties":{"id":{"type":"string","description":"Unique identifier for the PlaybackID"},"policy":{"type":"string","enum":["public","signed","drm"],"description":"* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\\n\\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](https://docs.mux.com/guides/secure-video-playback) for details about creating tokens.\\n\\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](https://docs.mux.com/guides/protect-videos-with-drm).\\n"},"drm_configuration_id":{"type":"string","description":"The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."}}}},"tracks":{"type":"array","description":"The individual media tracks that make up an asset.","items":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier for the Track"},"type":{"type":"string","description":"The type of track","enum":["video","audio","text"]},"duration":{"type":"number","format":"double","description":"The duration in seconds of the track media. This parameter is not set for `text` type tracks. This field is optional and may not be set. The top level `duration` field of an asset will always be set."},"max_width":{"type":"integer","format":"int64","description":"The maximum width in pixels available for the track. Only set for the `video` type track."},"max_height":{"type":"integer","format":"int64","description":"The maximum height in pixels available for the track. Only set for the `video` type track."},"max_frame_rate":{"type":"number","format":"double","description":"The maximum frame rate available for the track. Only set for the `video` type track. This field may return `-1` if the frame rate of the input cannot be reliably determined."},"max_channels":{"type":"integer","format":"int64","description":"The maximum number of audio channels the track supports. Only set for the `audio` type track."},"max_channel_layout":{"type":"string","description":"Only set for the `audio` type track.","deprecated":true},"text_type":{"type":"string","enum":["subtitles"],"description":"This parameter is only set for `text` type tracks."},"text_source":{"type":"string","description":"The source of the text contained in a Track of type `text`. Valid `text_source`\\nvalues are listed below.\\n* `uploaded`: Tracks uploaded to Mux as caption or subtitle files using the Create Asset Track API.\\n* `embedded`: Tracks extracted from an embedded stream of CEA-608 closed captions.\\n* `generated_vod`: Tracks generated by automatic speech recognition on an on-demand asset.\\n* `generated_live`: Tracks generated by automatic speech recognition on a live stream configured with `generated_subtitles`. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\\n* `generated_live_final`: Tracks generated by automatic speech recognition on a live stream using `generated_subtitles`. The accuracy, timing, and formatting of these subtitles is improved compared to the corresponding `generated_live` tracks. However, `generated_live_final` tracks will not be available in `ready` status until the live stream ends. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\\n","enum":["uploaded","embedded","generated_live","generated_live_final","generated_vod"]},"language_code":{"type":"string","description":"The language code value represents [BCP 47](https://tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is only set for `text` and `audio` track types."},"name":{"type":"string","description":"The name of the track containing a human-readable description. The HLS manifest will associate a subtitle `text` or `audio` track with this value. For example, the value should be \\"English\\" for a subtitle text track for the `language_code` value of `en-US`. This parameter is only set for `text` and `audio` track types."},"closed_captions":{"type":"boolean","description":"Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This parameter is only set tracks where `type` is `text` and `text_type` is `subtitles`."},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the track either when creating the asset or track. This parameter is only set for `text` type tracks. Max 255 characters."},"status":{"type":"string","enum":["preparing","ready","errored","deleted"],"description":"The status of the track. This parameter is only set for `text` type tracks."},"primary":{"type":"boolean","description":"For an audio track, indicates that this is the primary audio track, ingested from the main input for this asset. The primary audio track cannot be deleted."},"error":{"type":"object","description":"Object that describes any errors that happened when processing this asset.","properties":{"type":{"type":"string","description":"The type of error that occurred for this asset."},"messages":{"type":"array","description":"Error messages with more details.","items":{"type":"string"}}}}}}},"errors":{"type":"object","description":"Object that describes any errors that happened when processing this asset.","properties":{"type":{"type":"string","description":"The type of error that occurred for this asset."},"messages":{"type":"array","description":"Error messages with more details.","items":{"type":"string"}}}},"per_title_encode":{"type":"boolean","format":"boolean","x-mux-doc-decorators":["hidden"],"deprecated":true},"upload_id":{"type":"string","description":"Unique identifier for the Direct Upload. This is an optional parameter added when the asset is created from a direct upload."},"is_live":{"type":"boolean","format":"boolean","description":"Indicates whether the live stream that created this asset is currently `active` and not in `idle` state. This is an optional parameter added when the asset is created from a live stream."},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the asset. Max 255 characters."},"live_stream_id":{"type":"string","description":"Unique identifier for the live stream. This is an optional parameter added when the asset is created from a live stream."},"master":{"type":"object","description":"An object containing the current status of Master Access and the link to the Master MP4 file when ready. This object does not exist if `master_access` is set to `none` and when the temporary URL expires.","properties":{"status":{"enum":["ready","preparing","errored"],"type":"string"},"url":{"type":"string","description":"The temporary URL to the master version of the video, as an MP4 file. This URL will expire after 24 hours."}}},"master_access":{"type":"string","enum":["temporary","none"],"default":"none"},"mp4_support":{"type":"string","default":"none","enum":["standard","none","capped-1080p","audio-only","audio-only,capped-1080p"],"x-mux-doc-decorators-deprecated-enum-values":["standard"]},"source_asset_id":{"type":"string","description":"Asset Identifier of the video used as the source for creating the clip."},"normalize_audio":{"type":"boolean","default":false,"description":"Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets."},"static_renditions":{"type":"object","description":"An object containing the current status of any static renditions (mp4s). The object does not exist if no static renditions have been requested. See [Download your videos](https://docs.mux.com/guides/enable-static-mp4-renditions) for more information.","properties":{"status":{"type":"string","default":"disabled","description":"Indicates the status of downloadable MP4 versions of this asset.","enum":["ready","preparing","disabled","errored"]},"files":{"type":"array","description":"Array of file objects.","items":{"type":"object","properties":{"name":{"type":"string","enum":["low.mp4","medium.mp4","high.mp4","audio.m4a","capped-1080p.mp4"]},"ext":{"type":"string","description":"Extension of the static rendition file","enum":["mp4","m4a"]},"height":{"type":"integer","format":"int32","description":"The height of the static rendition\'s file in pixels"},"width":{"type":"integer","format":"int32","description":"The width of the static rendition\'s file in pixels"},"bitrate":{"type":"integer","format":"int64","description":"The bitrate in bits per second"},"filesize":{"type":"integer","format":"int64","description":"The file size in bytes"}}}}}},"recording_times":{"type":"array","description":"An array of individual live stream recording sessions. A recording session is created on each encoder connection during the live stream. Additionally any time slate media is inserted during brief interruptions in the live stream media or times when the live streaming software disconnects, a recording session representing the slate media will be added with a \\"slate\\" type.","items":{"type":"object","properties":{"started_at":{"type":"object","properties":{"nanos":{"format":"int32","type":"integer"},"seconds":{"format":"int32","type":"integer"}},"required":["seconds"]},"duration":{"type":"number","format":"double","description":"The duration of the live stream recorded. The time value is in seconds."},"type":{"type":"string","enum":["content","slate"],"description":"The type of media represented by the recording session, either `content` for normal stream content or `slate` for slate media inserted during stream interruptions."}}}},"non_standard_input_reasons":{"type":"object","description":"An object containing one or more reasons the input file is non-standard. See [the guide on minimizing processing time](https://docs.mux.com/guides/minimize-processing-time) for more information on what a standard input is defined as. This object only exists on on-demand assets that have non-standard inputs, so if missing you can assume the input qualifies as standard.","properties":{"video_codec":{"type":"string","description":"The video codec used on the input file. For example, the input file encoded with `hevc` video codec is non-standard and the value of this parameter is `hevc`."},"audio_codec":{"type":"string","description":"The audio codec used on the input file. Non-AAC audio codecs are non-standard."},"video_gop_size":{"type":"string","enum":["high"],"description":"The video key frame Interval (also called as Group of Picture or GOP) of the input file is `high`. This parameter is present when the gop is greater than 20 seconds."},"video_frame_rate":{"type":"string","description":"The video frame rate of the input file. Video with average frames per second (fps) less than 5 or greater than 120 is non-standard. A `-1` frame rate value indicates Mux could not determine the frame rate of the video track."},"video_resolution":{"type":"string","description":"The video resolution of the input file. Video resolution higher than 2048 pixels on any one dimension (height or width) is considered non-standard, The resolution value is presented as `width` x `height` in pixels."},"video_bitrate":{"type":"string","enum":["high"],"description":"The video bitrate of the input file is `high`. This parameter is present when the average bitrate of any key frame interval (also known as Group of Pictures or GOP) is higher than what\'s considered standard which typically is 16 Mbps."},"pixel_aspect_ratio":{"type":"string","description":"The video pixel aspect ratio of the input file."},"video_edit_list":{"type":"string","enum":["non-standard"],"description":"Video Edit List reason indicates that the input file\'s video track contains a complex Edit Decision List."},"audio_edit_list":{"type":"string","enum":["non-standard"],"description":"Audio Edit List reason indicates that the input file\'s audio track contains a complex Edit Decision List."},"unexpected_media_file_parameters":{"type":"string","enum":["non-standard"],"description":"A catch-all reason when the input file in created with non-standard encoding parameters."},"unsupported_pixel_format":{"type":"string","description":"The video pixel format, as a string, returned by libav. Considered non-standard if not one of yuv420p or yuvj420p."},"unexpected_video_parameters":{"type":"string"}}},"test":{"type":"boolean","format":"boolean","description":"True means this live stream is a test asset. A test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test assets are watermarked with the Mux logo, limited to 10 seconds, and deleted after 24 hrs."},"ingest_type":{"type":"string","enum":["on_demand_url","on_demand_direct_upload","on_demand_clip","live_rtmp","live_srt"],"description":"The type of ingest used to create the asset."}}},"attempts":{"type":"array","description":"Attempts for sending out the webhook event","items":{"type":"object","properties":{"webhook_id":{"type":"integer","description":"Unique identifier for the webhook"},"response_status_code":{"type":"integer","description":"HTTP response status code for the webhook attempt"},"response_headers":{"type":"object","description":"HTTP response headers for the webhook attempt"},"response_body":{"type":["string","null"],"description":"HTTP response body for the webhook attempt"},"max_attempts":{"description":"Max attempts number for the webhook attempt","type":"integer"},"id":{"description":"Unique identifier for the webhook attempt","type":"string"},"created_at":{"description":"Time the webhook request was attempted","type":"string","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"address":{"description":"URL address for the webhook attempt","type":"string"}}}},"request_id":{"type":["string","null"],"deprecated":true},"accessor":{"type":["string","null"],"deprecated":true},"accessor_source":{"type":["string","null"],"deprecated":true}},"required":["type","id","created_at","object","environment","data","attempts"]},"example":{"aspect_ratio":"9:16","created_at":1652255078,"duration":26.125,"id":"SqQnqz6s5MBuXGvJaUWdXuXM93J9Q2yv","master":{"status":"preparing"},"master_access":"temporary","max_stored_frame_rate":-1,"max_stored_resolution":"HD","resolution_tier":"1080p","mp4_support":"standard","passthrough":"mux","playback_ids":[{"id":"uNbxnGLKJ00yfbijDO8COxTOyVKT01xpxW","policy":"public"}],"recording_times":[{"duration":26.083,"started_at":{"nanos":488000000,"seconds":1652255077}}],"static_renditions":{"status":"preparing"},"status":"ready","tracks":[{"id":"6OfMZnzmg3vP7N006waqPo2ManHU7UeAAa7tBEpG4KFQ","max_frame_rate":-1,"max_height":1280,"max_width":720,"type":"video"}]}},"video.asset.static_renditions.deleted":{"description":"Static renditions for this asset have been deleted. The static renditions (mp4 files) for this asset will no longer be available.","payload":{"type":"object","properties":{"type":{"type":"string","description":"Type for the webhook event"},"id":{"type":"string","description":"Unique identifier for the event"},"created_at":{"type":"string","description":"Time the event was created","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"object":{"type":"object","properties":{"type":{"type":"string"},"id":{"type":"string"}},"required":["type","id"]},"environment":{"type":"object","properties":{"name":{"type":"string","description":"Name for the environment"},"id":{"type":"string","description":"Unique identifier for the environment"}},"required":["name","id"]},"data":{"type":"object","x-required":["id","created_at","status","max_resolution_tier","encoding_tier","mp4_support","master_access"],"properties":{"id":{"type":"string","description":"Unique identifier for the Asset. Max 255 characters."},"created_at":{"type":"integer","format":"int32"},"status":{"type":"string","enum":["preparing","ready","errored"],"description":"The status of the asset."},"duration":{"type":"number","format":"double","description":"The duration of the asset in seconds (max duration for a single asset is 12 hours)."},"max_stored_resolution":{"type":"string","enum":["Audio only","SD","HD","FHD","UHD"],"description":"This field is deprecated. Please use `resolution_tier` instead. The maximum resolution that has been stored for the asset. The asset may be delivered at lower resolutions depending on the device and bandwidth, however it cannot be delivered at a higher value than is stored.","deprecated":true},"resolution_tier":{"type":"string","enum":["audio-only","720p","1080p","1440p","2160p"],"description":"The resolution tier that the asset was ingested at, affecting billing for ingest & storage. This field also represents the highest resolution tier that the content can be delivered at, however the actual resolution may be lower depending on the device, bandwidth, and exact resolution of the uploaded asset."},"max_resolution_tier":{"type":"string","enum":["1080p","1440p","2160p"],"description":"Max resolution tier can be used to control the maximum `resolution_tier` your asset is encoded, stored, and streamed at. If not set, this defaults to `1080p`."},"encoding_tier":{"type":"string","deprecated":true,"enum":["smart","baseline","premium"],"description":"This field is deprecated. Please use `video_quality` instead. The encoding tier informs the cost, quality, and available platform features for the asset. The default encoding tier for an account can be set in the Mux Dashboard. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"video_quality":{"type":"string","enum":["basic","plus","premium"],"description":"The video quality controls the cost, quality, and available platform features for the asset. The default video quality for an account can be set in the Mux Dashboard. This field replaces the deprecated `encoding_tier` value. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"max_stored_frame_rate":{"type":"number","format":"double","description":"The maximum frame rate that has been stored for the asset. The asset may be delivered at lower frame rates depending on the device and bandwidth, however it cannot be delivered at a higher value than is stored. This field may return -1 if the frame rate of the input cannot be reliably determined."},"aspect_ratio":{"type":"string","description":"The aspect ratio of the asset in the form of `width:height`, for example `16:9`."},"playback_ids":{"type":"array","description":"An array of Playback ID objects. Use these to create HLS playback URLs. See [Play your videos](https://docs.mux.com/guides/play-your-videos) for more details.","items":{"type":"object","x-required":["id","policy"],"properties":{"id":{"type":"string","description":"Unique identifier for the PlaybackID"},"policy":{"type":"string","enum":["public","signed","drm"],"description":"* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\\n\\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](https://docs.mux.com/guides/secure-video-playback) for details about creating tokens.\\n\\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](https://docs.mux.com/guides/protect-videos-with-drm).\\n"},"drm_configuration_id":{"type":"string","description":"The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."}}}},"tracks":{"type":"array","description":"The individual media tracks that make up an asset.","items":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier for the Track"},"type":{"type":"string","description":"The type of track","enum":["video","audio","text"]},"duration":{"type":"number","format":"double","description":"The duration in seconds of the track media. This parameter is not set for `text` type tracks. This field is optional and may not be set. The top level `duration` field of an asset will always be set."},"max_width":{"type":"integer","format":"int64","description":"The maximum width in pixels available for the track. Only set for the `video` type track."},"max_height":{"type":"integer","format":"int64","description":"The maximum height in pixels available for the track. Only set for the `video` type track."},"max_frame_rate":{"type":"number","format":"double","description":"The maximum frame rate available for the track. Only set for the `video` type track. This field may return `-1` if the frame rate of the input cannot be reliably determined."},"max_channels":{"type":"integer","format":"int64","description":"The maximum number of audio channels the track supports. Only set for the `audio` type track."},"max_channel_layout":{"type":"string","description":"Only set for the `audio` type track.","deprecated":true},"text_type":{"type":"string","enum":["subtitles"],"description":"This parameter is only set for `text` type tracks."},"text_source":{"type":"string","description":"The source of the text contained in a Track of type `text`. Valid `text_source`\\nvalues are listed below.\\n* `uploaded`: Tracks uploaded to Mux as caption or subtitle files using the Create Asset Track API.\\n* `embedded`: Tracks extracted from an embedded stream of CEA-608 closed captions.\\n* `generated_vod`: Tracks generated by automatic speech recognition on an on-demand asset.\\n* `generated_live`: Tracks generated by automatic speech recognition on a live stream configured with `generated_subtitles`. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\\n* `generated_live_final`: Tracks generated by automatic speech recognition on a live stream using `generated_subtitles`. The accuracy, timing, and formatting of these subtitles is improved compared to the corresponding `generated_live` tracks. However, `generated_live_final` tracks will not be available in `ready` status until the live stream ends. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\\n","enum":["uploaded","embedded","generated_live","generated_live_final","generated_vod"]},"language_code":{"type":"string","description":"The language code value represents [BCP 47](https://tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is only set for `text` and `audio` track types."},"name":{"type":"string","description":"The name of the track containing a human-readable description. The HLS manifest will associate a subtitle `text` or `audio` track with this value. For example, the value should be \\"English\\" for a subtitle text track for the `language_code` value of `en-US`. This parameter is only set for `text` and `audio` track types."},"closed_captions":{"type":"boolean","description":"Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This parameter is only set tracks where `type` is `text` and `text_type` is `subtitles`."},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the track either when creating the asset or track. This parameter is only set for `text` type tracks. Max 255 characters."},"status":{"type":"string","enum":["preparing","ready","errored","deleted"],"description":"The status of the track. This parameter is only set for `text` type tracks."},"primary":{"type":"boolean","description":"For an audio track, indicates that this is the primary audio track, ingested from the main input for this asset. The primary audio track cannot be deleted."},"error":{"type":"object","description":"Object that describes any errors that happened when processing this asset.","properties":{"type":{"type":"string","description":"The type of error that occurred for this asset."},"messages":{"type":"array","description":"Error messages with more details.","items":{"type":"string"}}}}}}},"errors":{"type":"object","description":"Object that describes any errors that happened when processing this asset.","properties":{"type":{"type":"string","description":"The type of error that occurred for this asset."},"messages":{"type":"array","description":"Error messages with more details.","items":{"type":"string"}}}},"per_title_encode":{"type":"boolean","format":"boolean","x-mux-doc-decorators":["hidden"],"deprecated":true},"upload_id":{"type":"string","description":"Unique identifier for the Direct Upload. This is an optional parameter added when the asset is created from a direct upload."},"is_live":{"type":"boolean","format":"boolean","description":"Indicates whether the live stream that created this asset is currently `active` and not in `idle` state. This is an optional parameter added when the asset is created from a live stream."},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the asset. Max 255 characters."},"live_stream_id":{"type":"string","description":"Unique identifier for the live stream. This is an optional parameter added when the asset is created from a live stream."},"master":{"type":"object","description":"An object containing the current status of Master Access and the link to the Master MP4 file when ready. This object does not exist if `master_access` is set to `none` and when the temporary URL expires.","properties":{"status":{"enum":["ready","preparing","errored"],"type":"string"},"url":{"type":"string","description":"The temporary URL to the master version of the video, as an MP4 file. This URL will expire after 24 hours."}}},"master_access":{"type":"string","enum":["temporary","none"],"default":"none"},"mp4_support":{"type":"string","default":"none","enum":["standard","none","capped-1080p","audio-only","audio-only,capped-1080p"],"x-mux-doc-decorators-deprecated-enum-values":["standard"]},"source_asset_id":{"type":"string","description":"Asset Identifier of the video used as the source for creating the clip."},"normalize_audio":{"type":"boolean","default":false,"description":"Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets."},"static_renditions":{"type":"object","description":"An object containing the current status of any static renditions (mp4s). The object does not exist if no static renditions have been requested. See [Download your videos](https://docs.mux.com/guides/enable-static-mp4-renditions) for more information.","properties":{"status":{"type":"string","default":"disabled","description":"Indicates the status of downloadable MP4 versions of this asset.","enum":["ready","preparing","disabled","errored"]},"files":{"type":"array","description":"Array of file objects.","items":{"type":"object","properties":{"name":{"type":"string","enum":["low.mp4","medium.mp4","high.mp4","audio.m4a","capped-1080p.mp4"]},"ext":{"type":"string","description":"Extension of the static rendition file","enum":["mp4","m4a"]},"height":{"type":"integer","format":"int32","description":"The height of the static rendition\'s file in pixels"},"width":{"type":"integer","format":"int32","description":"The width of the static rendition\'s file in pixels"},"bitrate":{"type":"integer","format":"int64","description":"The bitrate in bits per second"},"filesize":{"type":"integer","format":"int64","description":"The file size in bytes"}}}}}},"recording_times":{"type":"array","description":"An array of individual live stream recording sessions. A recording session is created on each encoder connection during the live stream. Additionally any time slate media is inserted during brief interruptions in the live stream media or times when the live streaming software disconnects, a recording session representing the slate media will be added with a \\"slate\\" type.","items":{"type":"object","properties":{"started_at":{"type":"object","properties":{"nanos":{"format":"int32","type":"integer"},"seconds":{"format":"int32","type":"integer"}},"required":["seconds"]},"duration":{"type":"number","format":"double","description":"The duration of the live stream recorded. The time value is in seconds."},"type":{"type":"string","enum":["content","slate"],"description":"The type of media represented by the recording session, either `content` for normal stream content or `slate` for slate media inserted during stream interruptions."}}}},"non_standard_input_reasons":{"type":"object","description":"An object containing one or more reasons the input file is non-standard. See [the guide on minimizing processing time](https://docs.mux.com/guides/minimize-processing-time) for more information on what a standard input is defined as. This object only exists on on-demand assets that have non-standard inputs, so if missing you can assume the input qualifies as standard.","properties":{"video_codec":{"type":"string","description":"The video codec used on the input file. For example, the input file encoded with `hevc` video codec is non-standard and the value of this parameter is `hevc`."},"audio_codec":{"type":"string","description":"The audio codec used on the input file. Non-AAC audio codecs are non-standard."},"video_gop_size":{"type":"string","enum":["high"],"description":"The video key frame Interval (also called as Group of Picture or GOP) of the input file is `high`. This parameter is present when the gop is greater than 20 seconds."},"video_frame_rate":{"type":"string","description":"The video frame rate of the input file. Video with average frames per second (fps) less than 5 or greater than 120 is non-standard. A `-1` frame rate value indicates Mux could not determine the frame rate of the video track."},"video_resolution":{"type":"string","description":"The video resolution of the input file. Video resolution higher than 2048 pixels on any one dimension (height or width) is considered non-standard, The resolution value is presented as `width` x `height` in pixels."},"video_bitrate":{"type":"string","enum":["high"],"description":"The video bitrate of the input file is `high`. This parameter is present when the average bitrate of any key frame interval (also known as Group of Pictures or GOP) is higher than what\'s considered standard which typically is 16 Mbps."},"pixel_aspect_ratio":{"type":"string","description":"The video pixel aspect ratio of the input file."},"video_edit_list":{"type":"string","enum":["non-standard"],"description":"Video Edit List reason indicates that the input file\'s video track contains a complex Edit Decision List."},"audio_edit_list":{"type":"string","enum":["non-standard"],"description":"Audio Edit List reason indicates that the input file\'s audio track contains a complex Edit Decision List."},"unexpected_media_file_parameters":{"type":"string","enum":["non-standard"],"description":"A catch-all reason when the input file in created with non-standard encoding parameters."},"unsupported_pixel_format":{"type":"string","description":"The video pixel format, as a string, returned by libav. Considered non-standard if not one of yuv420p or yuvj420p."},"unexpected_video_parameters":{"type":"string"}}},"test":{"type":"boolean","format":"boolean","description":"True means this live stream is a test asset. A test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test assets are watermarked with the Mux logo, limited to 10 seconds, and deleted after 24 hrs."},"ingest_type":{"type":"string","enum":["on_demand_url","on_demand_direct_upload","on_demand_clip","live_rtmp","live_srt"],"description":"The type of ingest used to create the asset."}}},"attempts":{"type":"array","description":"Attempts for sending out the webhook event","items":{"type":"object","properties":{"webhook_id":{"type":"integer","description":"Unique identifier for the webhook"},"response_status_code":{"type":"integer","description":"HTTP response status code for the webhook attempt"},"response_headers":{"type":"object","description":"HTTP response headers for the webhook attempt"},"response_body":{"type":["string","null"],"description":"HTTP response body for the webhook attempt"},"max_attempts":{"description":"Max attempts number for the webhook attempt","type":"integer"},"id":{"description":"Unique identifier for the webhook attempt","type":"string"},"created_at":{"description":"Time the webhook request was attempted","type":"string","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"address":{"description":"URL address for the webhook attempt","type":"string"}}}},"request_id":{"type":["string","null"],"deprecated":true},"accessor":{"type":["string","null"],"deprecated":true},"accessor_source":{"type":["string","null"],"deprecated":true}},"required":["type","id","created_at","object","environment","data","attempts"]},"example":{"aspect_ratio":"16:9","created_at":1644354024,"duration":340.773756,"id":"SqQnqz6s5MBuXGvJaUWdXuXM93J9Q2yv","master":{"status":"ready","url":"https://master.mux.com/SqQnqz6s5MBuXGvWdXuXM93J9Q2yv/master.mp4?skid=default&signature={signature}"},"master_access":"temporary","max_stored_frame_rate":59.94,"max_stored_resolution":"HD","resolution_tier":"1080p","mp4_support":"none","non_standard_input_reasons":{"video_codec":"hevc"},"passthrough":"mux","playback_ids":[{"id":"uNbxnGLKJ00yfbijDO8COxTOyVKT01xpxW","policy":"public"}],"status":"ready","tracks":[{"duration":340.795208,"id":"coqb4ZjmxHkx02ReNsd3JOLXQQAtvHIG01YJ9VlQlA9es","max_channel_layout":"stereo","max_channels":2,"type":"audio"},{"duration":340.79045,"id":"pGBSQsYJaUJQR8HYC01nh86NQdMSTGhFhQHSXOJgd1Lw","max_frame_rate":59.94,"max_height":1080,"max_width":1920,"type":"video"}],"upload_id":"gSrmnTtVcnQkVzqquUDQ62zfKb2QihYnJjsfYGFxI2"}},"video.asset.static_renditions.errored":{"description":"Preparing static renditions for this asset has encountered an error. This indicates that there was some error when creating static renditions (mp4s) of your asset. This should be rare and if you see it unexpectedly please open a support ticket.","payload":{"type":"object","properties":{"type":{"type":"string","description":"Type for the webhook event"},"id":{"type":"string","description":"Unique identifier for the event"},"created_at":{"type":"string","description":"Time the event was created","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"object":{"type":"object","properties":{"type":{"type":"string"},"id":{"type":"string"}},"required":["type","id"]},"environment":{"type":"object","properties":{"name":{"type":"string","description":"Name for the environment"},"id":{"type":"string","description":"Unique identifier for the environment"}},"required":["name","id"]},"data":{"type":"object","x-required":["id","created_at","status","max_resolution_tier","encoding_tier","mp4_support","master_access"],"properties":{"id":{"type":"string","description":"Unique identifier for the Asset. Max 255 characters."},"created_at":{"type":"integer","format":"int32"},"status":{"type":"string","enum":["preparing","ready","errored"],"description":"The status of the asset."},"duration":{"type":"number","format":"double","description":"The duration of the asset in seconds (max duration for a single asset is 12 hours)."},"max_stored_resolution":{"type":"string","enum":["Audio only","SD","HD","FHD","UHD"],"description":"This field is deprecated. Please use `resolution_tier` instead. The maximum resolution that has been stored for the asset. The asset may be delivered at lower resolutions depending on the device and bandwidth, however it cannot be delivered at a higher value than is stored.","deprecated":true},"resolution_tier":{"type":"string","enum":["audio-only","720p","1080p","1440p","2160p"],"description":"The resolution tier that the asset was ingested at, affecting billing for ingest & storage. This field also represents the highest resolution tier that the content can be delivered at, however the actual resolution may be lower depending on the device, bandwidth, and exact resolution of the uploaded asset."},"max_resolution_tier":{"type":"string","enum":["1080p","1440p","2160p"],"description":"Max resolution tier can be used to control the maximum `resolution_tier` your asset is encoded, stored, and streamed at. If not set, this defaults to `1080p`."},"encoding_tier":{"type":"string","deprecated":true,"enum":["smart","baseline","premium"],"description":"This field is deprecated. Please use `video_quality` instead. The encoding tier informs the cost, quality, and available platform features for the asset. The default encoding tier for an account can be set in the Mux Dashboard. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"video_quality":{"type":"string","enum":["basic","plus","premium"],"description":"The video quality controls the cost, quality, and available platform features for the asset. The default video quality for an account can be set in the Mux Dashboard. This field replaces the deprecated `encoding_tier` value. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"max_stored_frame_rate":{"type":"number","format":"double","description":"The maximum frame rate that has been stored for the asset. The asset may be delivered at lower frame rates depending on the device and bandwidth, however it cannot be delivered at a higher value than is stored. This field may return -1 if the frame rate of the input cannot be reliably determined."},"aspect_ratio":{"type":"string","description":"The aspect ratio of the asset in the form of `width:height`, for example `16:9`."},"playback_ids":{"type":"array","description":"An array of Playback ID objects. Use these to create HLS playback URLs. See [Play your videos](https://docs.mux.com/guides/play-your-videos) for more details.","items":{"type":"object","x-required":["id","policy"],"properties":{"id":{"type":"string","description":"Unique identifier for the PlaybackID"},"policy":{"type":"string","enum":["public","signed","drm"],"description":"* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\\n\\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](https://docs.mux.com/guides/secure-video-playback) for details about creating tokens.\\n\\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](https://docs.mux.com/guides/protect-videos-with-drm).\\n"},"drm_configuration_id":{"type":"string","description":"The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."}}}},"tracks":{"type":"array","description":"The individual media tracks that make up an asset.","items":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier for the Track"},"type":{"type":"string","description":"The type of track","enum":["video","audio","text"]},"duration":{"type":"number","format":"double","description":"The duration in seconds of the track media. This parameter is not set for `text` type tracks. This field is optional and may not be set. The top level `duration` field of an asset will always be set."},"max_width":{"type":"integer","format":"int64","description":"The maximum width in pixels available for the track. Only set for the `video` type track."},"max_height":{"type":"integer","format":"int64","description":"The maximum height in pixels available for the track. Only set for the `video` type track."},"max_frame_rate":{"type":"number","format":"double","description":"The maximum frame rate available for the track. Only set for the `video` type track. This field may return `-1` if the frame rate of the input cannot be reliably determined."},"max_channels":{"type":"integer","format":"int64","description":"The maximum number of audio channels the track supports. Only set for the `audio` type track."},"max_channel_layout":{"type":"string","description":"Only set for the `audio` type track.","deprecated":true},"text_type":{"type":"string","enum":["subtitles"],"description":"This parameter is only set for `text` type tracks."},"text_source":{"type":"string","description":"The source of the text contained in a Track of type `text`. Valid `text_source`\\nvalues are listed below.\\n* `uploaded`: Tracks uploaded to Mux as caption or subtitle files using the Create Asset Track API.\\n* `embedded`: Tracks extracted from an embedded stream of CEA-608 closed captions.\\n* `generated_vod`: Tracks generated by automatic speech recognition on an on-demand asset.\\n* `generated_live`: Tracks generated by automatic speech recognition on a live stream configured with `generated_subtitles`. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\\n* `generated_live_final`: Tracks generated by automatic speech recognition on a live stream using `generated_subtitles`. The accuracy, timing, and formatting of these subtitles is improved compared to the corresponding `generated_live` tracks. However, `generated_live_final` tracks will not be available in `ready` status until the live stream ends. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\\n","enum":["uploaded","embedded","generated_live","generated_live_final","generated_vod"]},"language_code":{"type":"string","description":"The language code value represents [BCP 47](https://tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is only set for `text` and `audio` track types."},"name":{"type":"string","description":"The name of the track containing a human-readable description. The HLS manifest will associate a subtitle `text` or `audio` track with this value. For example, the value should be \\"English\\" for a subtitle text track for the `language_code` value of `en-US`. This parameter is only set for `text` and `audio` track types."},"closed_captions":{"type":"boolean","description":"Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This parameter is only set tracks where `type` is `text` and `text_type` is `subtitles`."},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the track either when creating the asset or track. This parameter is only set for `text` type tracks. Max 255 characters."},"status":{"type":"string","enum":["preparing","ready","errored","deleted"],"description":"The status of the track. This parameter is only set for `text` type tracks."},"primary":{"type":"boolean","description":"For an audio track, indicates that this is the primary audio track, ingested from the main input for this asset. The primary audio track cannot be deleted."},"error":{"type":"object","description":"Object that describes any errors that happened when processing this asset.","properties":{"type":{"type":"string","description":"The type of error that occurred for this asset."},"messages":{"type":"array","description":"Error messages with more details.","items":{"type":"string"}}}}}}},"errors":{"type":"object","description":"Object that describes any errors that happened when processing this asset.","properties":{"type":{"type":"string","description":"The type of error that occurred for this asset."},"messages":{"type":"array","description":"Error messages with more details.","items":{"type":"string"}}}},"per_title_encode":{"type":"boolean","format":"boolean","x-mux-doc-decorators":["hidden"],"deprecated":true},"upload_id":{"type":"string","description":"Unique identifier for the Direct Upload. This is an optional parameter added when the asset is created from a direct upload."},"is_live":{"type":"boolean","format":"boolean","description":"Indicates whether the live stream that created this asset is currently `active` and not in `idle` state. This is an optional parameter added when the asset is created from a live stream."},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the asset. Max 255 characters."},"live_stream_id":{"type":"string","description":"Unique identifier for the live stream. This is an optional parameter added when the asset is created from a live stream."},"master":{"type":"object","description":"An object containing the current status of Master Access and the link to the Master MP4 file when ready. This object does not exist if `master_access` is set to `none` and when the temporary URL expires.","properties":{"status":{"enum":["ready","preparing","errored"],"type":"string"},"url":{"type":"string","description":"The temporary URL to the master version of the video, as an MP4 file. This URL will expire after 24 hours."}}},"master_access":{"type":"string","enum":["temporary","none"],"default":"none"},"mp4_support":{"type":"string","default":"none","enum":["standard","none","capped-1080p","audio-only","audio-only,capped-1080p"],"x-mux-doc-decorators-deprecated-enum-values":["standard"]},"source_asset_id":{"type":"string","description":"Asset Identifier of the video used as the source for creating the clip."},"normalize_audio":{"type":"boolean","default":false,"description":"Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets."},"static_renditions":{"type":"object","description":"An object containing the current status of any static renditions (mp4s). The object does not exist if no static renditions have been requested. See [Download your videos](https://docs.mux.com/guides/enable-static-mp4-renditions) for more information.","properties":{"status":{"type":"string","default":"disabled","description":"Indicates the status of downloadable MP4 versions of this asset.","enum":["ready","preparing","disabled","errored"]},"files":{"type":"array","description":"Array of file objects.","items":{"type":"object","properties":{"name":{"type":"string","enum":["low.mp4","medium.mp4","high.mp4","audio.m4a","capped-1080p.mp4"]},"ext":{"type":"string","description":"Extension of the static rendition file","enum":["mp4","m4a"]},"height":{"type":"integer","format":"int32","description":"The height of the static rendition\'s file in pixels"},"width":{"type":"integer","format":"int32","description":"The width of the static rendition\'s file in pixels"},"bitrate":{"type":"integer","format":"int64","description":"The bitrate in bits per second"},"filesize":{"type":"integer","format":"int64","description":"The file size in bytes"}}}}}},"recording_times":{"type":"array","description":"An array of individual live stream recording sessions. A recording session is created on each encoder connection during the live stream. Additionally any time slate media is inserted during brief interruptions in the live stream media or times when the live streaming software disconnects, a recording session representing the slate media will be added with a \\"slate\\" type.","items":{"type":"object","properties":{"started_at":{"type":"object","properties":{"nanos":{"format":"int32","type":"integer"},"seconds":{"format":"int32","type":"integer"}},"required":["seconds"]},"duration":{"type":"number","format":"double","description":"The duration of the live stream recorded. The time value is in seconds."},"type":{"type":"string","enum":["content","slate"],"description":"The type of media represented by the recording session, either `content` for normal stream content or `slate` for slate media inserted during stream interruptions."}}}},"non_standard_input_reasons":{"type":"object","description":"An object containing one or more reasons the input file is non-standard. See [the guide on minimizing processing time](https://docs.mux.com/guides/minimize-processing-time) for more information on what a standard input is defined as. This object only exists on on-demand assets that have non-standard inputs, so if missing you can assume the input qualifies as standard.","properties":{"video_codec":{"type":"string","description":"The video codec used on the input file. For example, the input file encoded with `hevc` video codec is non-standard and the value of this parameter is `hevc`."},"audio_codec":{"type":"string","description":"The audio codec used on the input file. Non-AAC audio codecs are non-standard."},"video_gop_size":{"type":"string","enum":["high"],"description":"The video key frame Interval (also called as Group of Picture or GOP) of the input file is `high`. This parameter is present when the gop is greater than 20 seconds."},"video_frame_rate":{"type":"string","description":"The video frame rate of the input file. Video with average frames per second (fps) less than 5 or greater than 120 is non-standard. A `-1` frame rate value indicates Mux could not determine the frame rate of the video track."},"video_resolution":{"type":"string","description":"The video resolution of the input file. Video resolution higher than 2048 pixels on any one dimension (height or width) is considered non-standard, The resolution value is presented as `width` x `height` in pixels."},"video_bitrate":{"type":"string","enum":["high"],"description":"The video bitrate of the input file is `high`. This parameter is present when the average bitrate of any key frame interval (also known as Group of Pictures or GOP) is higher than what\'s considered standard which typically is 16 Mbps."},"pixel_aspect_ratio":{"type":"string","description":"The video pixel aspect ratio of the input file."},"video_edit_list":{"type":"string","enum":["non-standard"],"description":"Video Edit List reason indicates that the input file\'s video track contains a complex Edit Decision List."},"audio_edit_list":{"type":"string","enum":["non-standard"],"description":"Audio Edit List reason indicates that the input file\'s audio track contains a complex Edit Decision List."},"unexpected_media_file_parameters":{"type":"string","enum":["non-standard"],"description":"A catch-all reason when the input file in created with non-standard encoding parameters."},"unsupported_pixel_format":{"type":"string","description":"The video pixel format, as a string, returned by libav. Considered non-standard if not one of yuv420p or yuvj420p."},"unexpected_video_parameters":{"type":"string"}}},"test":{"type":"boolean","format":"boolean","description":"True means this live stream is a test asset. A test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test assets are watermarked with the Mux logo, limited to 10 seconds, and deleted after 24 hrs."},"ingest_type":{"type":"string","enum":["on_demand_url","on_demand_direct_upload","on_demand_clip","live_rtmp","live_srt"],"description":"The type of ingest used to create the asset."}}},"attempts":{"type":"array","description":"Attempts for sending out the webhook event","items":{"type":"object","properties":{"webhook_id":{"type":"integer","description":"Unique identifier for the webhook"},"response_status_code":{"type":"integer","description":"HTTP response status code for the webhook attempt"},"response_headers":{"type":"object","description":"HTTP response headers for the webhook attempt"},"response_body":{"type":["string","null"],"description":"HTTP response body for the webhook attempt"},"max_attempts":{"description":"Max attempts number for the webhook attempt","type":"integer"},"id":{"description":"Unique identifier for the webhook attempt","type":"string"},"created_at":{"description":"Time the webhook request was attempted","type":"string","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"address":{"description":"URL address for the webhook attempt","type":"string"}}}},"request_id":{"type":["string","null"],"deprecated":true},"accessor":{"type":["string","null"],"deprecated":true},"accessor_source":{"type":["string","null"],"deprecated":true}},"required":["type","id","created_at","object","environment","data","attempts"]},"example":{"aspect_ratio":"9:16","created_at":1648023210,"duration":145.386333,"id":"SqQnqz6s5MBuXGvJaUWdXuXM93J9Q2yv","master":{"status":"ready","url":"https://master.mux.com/00cJmmJwI8YvL5Hj00HT8U0eSpVquTA/master.mp4?skid=default&signature={signature}"},"master_access":"temporary","max_stored_frame_rate":30,"max_stored_resolution":"HD","resolution_tier":"1080p","mp4_support":"standard","passthrough":"mux","playback_ids":[{"id":"uNbxnGLKJ00yfbijDO8COxTOyVKT01xpxW","policy":"public"}],"recording_times":[{"duration":145.327,"started_at":{"nanos":115000000,"seconds":1648023209}}],"static_renditions":{"status":"errored"},"status":"ready","tracks":[{"id":"dGxYBn9J011I7ZSoeBBsnEisrsA5MAapoJGP01FHEtGfQ","max_frame_rate":30,"max_height":1280,"max_width":720,"type":"video"},{"id":"tQ7sTYuqvjWaM3yYGtAkFzLeArvk9IWB01gIOjOP8HuE","max_channel_layout":"mono","max_channels":1,"type":"audio"}]}},"video.asset.master.ready":{"description":"Master access for this asset is ready. Master access is used when downloading an asset for purposes of editing or post-production work. The master access file is not intended to be streamed or downloaded by end-users.","payload":{"type":"object","properties":{"type":{"type":"string","description":"Type for the webhook event"},"id":{"type":"string","description":"Unique identifier for the event"},"created_at":{"type":"string","description":"Time the event was created","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"object":{"type":"object","properties":{"type":{"type":"string"},"id":{"type":"string"}},"required":["type","id"]},"environment":{"type":"object","properties":{"name":{"type":"string","description":"Name for the environment"},"id":{"type":"string","description":"Unique identifier for the environment"}},"required":["name","id"]},"data":{"type":"object","x-required":["id","created_at","status","max_resolution_tier","encoding_tier","mp4_support","master_access"],"properties":{"id":{"type":"string","description":"Unique identifier for the Asset. Max 255 characters."},"created_at":{"type":"integer","format":"int32"},"status":{"type":"string","enum":["preparing","ready","errored"],"description":"The status of the asset."},"duration":{"type":"number","format":"double","description":"The duration of the asset in seconds (max duration for a single asset is 12 hours)."},"max_stored_resolution":{"type":"string","enum":["Audio only","SD","HD","FHD","UHD"],"description":"This field is deprecated. Please use `resolution_tier` instead. The maximum resolution that has been stored for the asset. The asset may be delivered at lower resolutions depending on the device and bandwidth, however it cannot be delivered at a higher value than is stored.","deprecated":true},"resolution_tier":{"type":"string","enum":["audio-only","720p","1080p","1440p","2160p"],"description":"The resolution tier that the asset was ingested at, affecting billing for ingest & storage. This field also represents the highest resolution tier that the content can be delivered at, however the actual resolution may be lower depending on the device, bandwidth, and exact resolution of the uploaded asset."},"max_resolution_tier":{"type":"string","enum":["1080p","1440p","2160p"],"description":"Max resolution tier can be used to control the maximum `resolution_tier` your asset is encoded, stored, and streamed at. If not set, this defaults to `1080p`."},"encoding_tier":{"type":"string","deprecated":true,"enum":["smart","baseline","premium"],"description":"This field is deprecated. Please use `video_quality` instead. The encoding tier informs the cost, quality, and available platform features for the asset. The default encoding tier for an account can be set in the Mux Dashboard. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"video_quality":{"type":"string","enum":["basic","plus","premium"],"description":"The video quality controls the cost, quality, and available platform features for the asset. The default video quality for an account can be set in the Mux Dashboard. This field replaces the deprecated `encoding_tier` value. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"max_stored_frame_rate":{"type":"number","format":"double","description":"The maximum frame rate that has been stored for the asset. The asset may be delivered at lower frame rates depending on the device and bandwidth, however it cannot be delivered at a higher value than is stored. This field may return -1 if the frame rate of the input cannot be reliably determined."},"aspect_ratio":{"type":"string","description":"The aspect ratio of the asset in the form of `width:height`, for example `16:9`."},"playback_ids":{"type":"array","description":"An array of Playback ID objects. Use these to create HLS playback URLs. See [Play your videos](https://docs.mux.com/guides/play-your-videos) for more details.","items":{"type":"object","x-required":["id","policy"],"properties":{"id":{"type":"string","description":"Unique identifier for the PlaybackID"},"policy":{"type":"string","enum":["public","signed","drm"],"description":"* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\\n\\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](https://docs.mux.com/guides/secure-video-playback) for details about creating tokens.\\n\\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](https://docs.mux.com/guides/protect-videos-with-drm).\\n"},"drm_configuration_id":{"type":"string","description":"The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."}}}},"tracks":{"type":"array","description":"The individual media tracks that make up an asset.","items":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier for the Track"},"type":{"type":"string","description":"The type of track","enum":["video","audio","text"]},"duration":{"type":"number","format":"double","description":"The duration in seconds of the track media. This parameter is not set for `text` type tracks. This field is optional and may not be set. The top level `duration` field of an asset will always be set."},"max_width":{"type":"integer","format":"int64","description":"The maximum width in pixels available for the track. Only set for the `video` type track."},"max_height":{"type":"integer","format":"int64","description":"The maximum height in pixels available for the track. Only set for the `video` type track."},"max_frame_rate":{"type":"number","format":"double","description":"The maximum frame rate available for the track. Only set for the `video` type track. This field may return `-1` if the frame rate of the input cannot be reliably determined."},"max_channels":{"type":"integer","format":"int64","description":"The maximum number of audio channels the track supports. Only set for the `audio` type track."},"max_channel_layout":{"type":"string","description":"Only set for the `audio` type track.","deprecated":true},"text_type":{"type":"string","enum":["subtitles"],"description":"This parameter is only set for `text` type tracks."},"text_source":{"type":"string","description":"The source of the text contained in a Track of type `text`. Valid `text_source`\\nvalues are listed below.\\n* `uploaded`: Tracks uploaded to Mux as caption or subtitle files using the Create Asset Track API.\\n* `embedded`: Tracks extracted from an embedded stream of CEA-608 closed captions.\\n* `generated_vod`: Tracks generated by automatic speech recognition on an on-demand asset.\\n* `generated_live`: Tracks generated by automatic speech recognition on a live stream configured with `generated_subtitles`. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\\n* `generated_live_final`: Tracks generated by automatic speech recognition on a live stream using `generated_subtitles`. The accuracy, timing, and formatting of these subtitles is improved compared to the corresponding `generated_live` tracks. However, `generated_live_final` tracks will not be available in `ready` status until the live stream ends. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\\n","enum":["uploaded","embedded","generated_live","generated_live_final","generated_vod"]},"language_code":{"type":"string","description":"The language code value represents [BCP 47](https://tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is only set for `text` and `audio` track types."},"name":{"type":"string","description":"The name of the track containing a human-readable description. The HLS manifest will associate a subtitle `text` or `audio` track with this value. For example, the value should be \\"English\\" for a subtitle text track for the `language_code` value of `en-US`. This parameter is only set for `text` and `audio` track types."},"closed_captions":{"type":"boolean","description":"Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This parameter is only set tracks where `type` is `text` and `text_type` is `subtitles`."},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the track either when creating the asset or track. This parameter is only set for `text` type tracks. Max 255 characters."},"status":{"type":"string","enum":["preparing","ready","errored","deleted"],"description":"The status of the track. This parameter is only set for `text` type tracks."},"primary":{"type":"boolean","description":"For an audio track, indicates that this is the primary audio track, ingested from the main input for this asset. The primary audio track cannot be deleted."},"error":{"type":"object","description":"Object that describes any errors that happened when processing this asset.","properties":{"type":{"type":"string","description":"The type of error that occurred for this asset."},"messages":{"type":"array","description":"Error messages with more details.","items":{"type":"string"}}}}}}},"errors":{"type":"object","description":"Object that describes any errors that happened when processing this asset.","properties":{"type":{"type":"string","description":"The type of error that occurred for this asset."},"messages":{"type":"array","description":"Error messages with more details.","items":{"type":"string"}}}},"per_title_encode":{"type":"boolean","format":"boolean","x-mux-doc-decorators":["hidden"],"deprecated":true},"upload_id":{"type":"string","description":"Unique identifier for the Direct Upload. This is an optional parameter added when the asset is created from a direct upload."},"is_live":{"type":"boolean","format":"boolean","description":"Indicates whether the live stream that created this asset is currently `active` and not in `idle` state. This is an optional parameter added when the asset is created from a live stream."},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the asset. Max 255 characters."},"live_stream_id":{"type":"string","description":"Unique identifier for the live stream. This is an optional parameter added when the asset is created from a live stream."},"master":{"type":"object","description":"An object containing the current status of Master Access and the link to the Master MP4 file when ready. This object does not exist if `master_access` is set to `none` and when the temporary URL expires.","properties":{"status":{"enum":["ready","preparing","errored"],"type":"string"},"url":{"type":"string","description":"The temporary URL to the master version of the video, as an MP4 file. This URL will expire after 24 hours."}}},"master_access":{"type":"string","enum":["temporary","none"],"default":"none"},"mp4_support":{"type":"string","default":"none","enum":["standard","none","capped-1080p","audio-only","audio-only,capped-1080p"],"x-mux-doc-decorators-deprecated-enum-values":["standard"]},"source_asset_id":{"type":"string","description":"Asset Identifier of the video used as the source for creating the clip."},"normalize_audio":{"type":"boolean","default":false,"description":"Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets."},"static_renditions":{"type":"object","description":"An object containing the current status of any static renditions (mp4s). The object does not exist if no static renditions have been requested. See [Download your videos](https://docs.mux.com/guides/enable-static-mp4-renditions) for more information.","properties":{"status":{"type":"string","default":"disabled","description":"Indicates the status of downloadable MP4 versions of this asset.","enum":["ready","preparing","disabled","errored"]},"files":{"type":"array","description":"Array of file objects.","items":{"type":"object","properties":{"name":{"type":"string","enum":["low.mp4","medium.mp4","high.mp4","audio.m4a","capped-1080p.mp4"]},"ext":{"type":"string","description":"Extension of the static rendition file","enum":["mp4","m4a"]},"height":{"type":"integer","format":"int32","description":"The height of the static rendition\'s file in pixels"},"width":{"type":"integer","format":"int32","description":"The width of the static rendition\'s file in pixels"},"bitrate":{"type":"integer","format":"int64","description":"The bitrate in bits per second"},"filesize":{"type":"integer","format":"int64","description":"The file size in bytes"}}}}}},"recording_times":{"type":"array","description":"An array of individual live stream recording sessions. A recording session is created on each encoder connection during the live stream. Additionally any time slate media is inserted during brief interruptions in the live stream media or times when the live streaming software disconnects, a recording session representing the slate media will be added with a \\"slate\\" type.","items":{"type":"object","properties":{"started_at":{"type":"object","properties":{"nanos":{"format":"int32","type":"integer"},"seconds":{"format":"int32","type":"integer"}},"required":["seconds"]},"duration":{"type":"number","format":"double","description":"The duration of the live stream recorded. The time value is in seconds."},"type":{"type":"string","enum":["content","slate"],"description":"The type of media represented by the recording session, either `content` for normal stream content or `slate` for slate media inserted during stream interruptions."}}}},"non_standard_input_reasons":{"type":"object","description":"An object containing one or more reasons the input file is non-standard. See [the guide on minimizing processing time](https://docs.mux.com/guides/minimize-processing-time) for more information on what a standard input is defined as. This object only exists on on-demand assets that have non-standard inputs, so if missing you can assume the input qualifies as standard.","properties":{"video_codec":{"type":"string","description":"The video codec used on the input file. For example, the input file encoded with `hevc` video codec is non-standard and the value of this parameter is `hevc`."},"audio_codec":{"type":"string","description":"The audio codec used on the input file. Non-AAC audio codecs are non-standard."},"video_gop_size":{"type":"string","enum":["high"],"description":"The video key frame Interval (also called as Group of Picture or GOP) of the input file is `high`. This parameter is present when the gop is greater than 20 seconds."},"video_frame_rate":{"type":"string","description":"The video frame rate of the input file. Video with average frames per second (fps) less than 5 or greater than 120 is non-standard. A `-1` frame rate value indicates Mux could not determine the frame rate of the video track."},"video_resolution":{"type":"string","description":"The video resolution of the input file. Video resolution higher than 2048 pixels on any one dimension (height or width) is considered non-standard, The resolution value is presented as `width` x `height` in pixels."},"video_bitrate":{"type":"string","enum":["high"],"description":"The video bitrate of the input file is `high`. This parameter is present when the average bitrate of any key frame interval (also known as Group of Pictures or GOP) is higher than what\'s considered standard which typically is 16 Mbps."},"pixel_aspect_ratio":{"type":"string","description":"The video pixel aspect ratio of the input file."},"video_edit_list":{"type":"string","enum":["non-standard"],"description":"Video Edit List reason indicates that the input file\'s video track contains a complex Edit Decision List."},"audio_edit_list":{"type":"string","enum":["non-standard"],"description":"Audio Edit List reason indicates that the input file\'s audio track contains a complex Edit Decision List."},"unexpected_media_file_parameters":{"type":"string","enum":["non-standard"],"description":"A catch-all reason when the input file in created with non-standard encoding parameters."},"unsupported_pixel_format":{"type":"string","description":"The video pixel format, as a string, returned by libav. Considered non-standard if not one of yuv420p or yuvj420p."},"unexpected_video_parameters":{"type":"string"}}},"test":{"type":"boolean","format":"boolean","description":"True means this live stream is a test asset. A test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test assets are watermarked with the Mux logo, limited to 10 seconds, and deleted after 24 hrs."},"ingest_type":{"type":"string","enum":["on_demand_url","on_demand_direct_upload","on_demand_clip","live_rtmp","live_srt"],"description":"The type of ingest used to create the asset."}}},"attempts":{"type":"array","description":"Attempts for sending out the webhook event","items":{"type":"object","properties":{"webhook_id":{"type":"integer","description":"Unique identifier for the webhook"},"response_status_code":{"type":"integer","description":"HTTP response status code for the webhook attempt"},"response_headers":{"type":"object","description":"HTTP response headers for the webhook attempt"},"response_body":{"type":["string","null"],"description":"HTTP response body for the webhook attempt"},"max_attempts":{"description":"Max attempts number for the webhook attempt","type":"integer"},"id":{"description":"Unique identifier for the webhook attempt","type":"string"},"created_at":{"description":"Time the webhook request was attempted","type":"string","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"address":{"description":"URL address for the webhook attempt","type":"string"}}}},"request_id":{"type":["string","null"],"deprecated":true},"accessor":{"type":["string","null"],"deprecated":true},"accessor_source":{"type":["string","null"],"deprecated":true}},"required":["type","id","created_at","object","environment","data","attempts"]},"example":{"aspect_ratio":"16:9","created_at":1655161297,"duration":46.985667,"event_created_at":1655161324333,"id":"SqQnqz6s5MBuXGvJaUWdXuXM93J9Q2yo","master":{"status":"ready","url":"https://master.mux.com/SqQnqz6s5MBuXGvJaUWd93J9Q2yv/master.mp4?skid=default&signature={signature}"},"master_access":"temporary","max_stored_frame_rate":30.303,"max_stored_resolution":"HD","resolution_tier":"1080p","mp4_support":"standard","non_standard_input_reasons":{"audio_codec":"opus"},"passthrough":"mux","playback_ids":[{"id":"uNbxnGLKJ00yfbijDO8COxTOyVKT01xpxW","policy":"public"}],"static_renditions":{"status":"preparing"},"status":"ready","tracks":[{"id":"6q4zurimYADMv01d5Dd1V4g2vfESZ2Dkj","max_frame_rate":30.303,"max_height":1080,"max_width":1920,"type":"video"},{"id":"4fsmJ5JJOIomTPYTPY189DgJNn7oONHjB4r02GH56HL00","max_channel_layout":"mono","max_channels":1,"type":"audio"}],"upload_id":"600qw01Y01XC9Y5YmnEFVgp7R01My7vuj01T"}},"video.asset.master.preparing":{"description":"Master access for this asset is being prepared. After requesting master access you will get this webhook while it is being prepared.","payload":{"type":"object","properties":{"type":{"type":"string","description":"Type for the webhook event"},"id":{"type":"string","description":"Unique identifier for the event"},"created_at":{"type":"string","description":"Time the event was created","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"object":{"type":"object","properties":{"type":{"type":"string"},"id":{"type":"string"}},"required":["type","id"]},"environment":{"type":"object","properties":{"name":{"type":"string","description":"Name for the environment"},"id":{"type":"string","description":"Unique identifier for the environment"}},"required":["name","id"]},"data":{"type":"object","x-required":["id","created_at","status","max_resolution_tier","encoding_tier","mp4_support","master_access"],"properties":{"id":{"type":"string","description":"Unique identifier for the Asset. Max 255 characters."},"created_at":{"type":"integer","format":"int32"},"status":{"type":"string","enum":["preparing","ready","errored"],"description":"The status of the asset."},"duration":{"type":"number","format":"double","description":"The duration of the asset in seconds (max duration for a single asset is 12 hours)."},"max_stored_resolution":{"type":"string","enum":["Audio only","SD","HD","FHD","UHD"],"description":"This field is deprecated. Please use `resolution_tier` instead. The maximum resolution that has been stored for the asset. The asset may be delivered at lower resolutions depending on the device and bandwidth, however it cannot be delivered at a higher value than is stored.","deprecated":true},"resolution_tier":{"type":"string","enum":["audio-only","720p","1080p","1440p","2160p"],"description":"The resolution tier that the asset was ingested at, affecting billing for ingest & storage. This field also represents the highest resolution tier that the content can be delivered at, however the actual resolution may be lower depending on the device, bandwidth, and exact resolution of the uploaded asset."},"max_resolution_tier":{"type":"string","enum":["1080p","1440p","2160p"],"description":"Max resolution tier can be used to control the maximum `resolution_tier` your asset is encoded, stored, and streamed at. If not set, this defaults to `1080p`."},"encoding_tier":{"type":"string","deprecated":true,"enum":["smart","baseline","premium"],"description":"This field is deprecated. Please use `video_quality` instead. The encoding tier informs the cost, quality, and available platform features for the asset. The default encoding tier for an account can be set in the Mux Dashboard. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"video_quality":{"type":"string","enum":["basic","plus","premium"],"description":"The video quality controls the cost, quality, and available platform features for the asset. The default video quality for an account can be set in the Mux Dashboard. This field replaces the deprecated `encoding_tier` value. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"max_stored_frame_rate":{"type":"number","format":"double","description":"The maximum frame rate that has been stored for the asset. The asset may be delivered at lower frame rates depending on the device and bandwidth, however it cannot be delivered at a higher value than is stored. This field may return -1 if the frame rate of the input cannot be reliably determined."},"aspect_ratio":{"type":"string","description":"The aspect ratio of the asset in the form of `width:height`, for example `16:9`."},"playback_ids":{"type":"array","description":"An array of Playback ID objects. Use these to create HLS playback URLs. See [Play your videos](https://docs.mux.com/guides/play-your-videos) for more details.","items":{"type":"object","x-required":["id","policy"],"properties":{"id":{"type":"string","description":"Unique identifier for the PlaybackID"},"policy":{"type":"string","enum":["public","signed","drm"],"description":"* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\\n\\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](https://docs.mux.com/guides/secure-video-playback) for details about creating tokens.\\n\\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](https://docs.mux.com/guides/protect-videos-with-drm).\\n"},"drm_configuration_id":{"type":"string","description":"The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."}}}},"tracks":{"type":"array","description":"The individual media tracks that make up an asset.","items":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier for the Track"},"type":{"type":"string","description":"The type of track","enum":["video","audio","text"]},"duration":{"type":"number","format":"double","description":"The duration in seconds of the track media. This parameter is not set for `text` type tracks. This field is optional and may not be set. The top level `duration` field of an asset will always be set."},"max_width":{"type":"integer","format":"int64","description":"The maximum width in pixels available for the track. Only set for the `video` type track."},"max_height":{"type":"integer","format":"int64","description":"The maximum height in pixels available for the track. Only set for the `video` type track."},"max_frame_rate":{"type":"number","format":"double","description":"The maximum frame rate available for the track. Only set for the `video` type track. This field may return `-1` if the frame rate of the input cannot be reliably determined."},"max_channels":{"type":"integer","format":"int64","description":"The maximum number of audio channels the track supports. Only set for the `audio` type track."},"max_channel_layout":{"type":"string","description":"Only set for the `audio` type track.","deprecated":true},"text_type":{"type":"string","enum":["subtitles"],"description":"This parameter is only set for `text` type tracks."},"text_source":{"type":"string","description":"The source of the text contained in a Track of type `text`. Valid `text_source`\\nvalues are listed below.\\n* `uploaded`: Tracks uploaded to Mux as caption or subtitle files using the Create Asset Track API.\\n* `embedded`: Tracks extracted from an embedded stream of CEA-608 closed captions.\\n* `generated_vod`: Tracks generated by automatic speech recognition on an on-demand asset.\\n* `generated_live`: Tracks generated by automatic speech recognition on a live stream configured with `generated_subtitles`. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\\n* `generated_live_final`: Tracks generated by automatic speech recognition on a live stream using `generated_subtitles`. The accuracy, timing, and formatting of these subtitles is improved compared to the corresponding `generated_live` tracks. However, `generated_live_final` tracks will not be available in `ready` status until the live stream ends. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\\n","enum":["uploaded","embedded","generated_live","generated_live_final","generated_vod"]},"language_code":{"type":"string","description":"The language code value represents [BCP 47](https://tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is only set for `text` and `audio` track types."},"name":{"type":"string","description":"The name of the track containing a human-readable description. The HLS manifest will associate a subtitle `text` or `audio` track with this value. For example, the value should be \\"English\\" for a subtitle text track for the `language_code` value of `en-US`. This parameter is only set for `text` and `audio` track types."},"closed_captions":{"type":"boolean","description":"Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This parameter is only set tracks where `type` is `text` and `text_type` is `subtitles`."},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the track either when creating the asset or track. This parameter is only set for `text` type tracks. Max 255 characters."},"status":{"type":"string","enum":["preparing","ready","errored","deleted"],"description":"The status of the track. This parameter is only set for `text` type tracks."},"primary":{"type":"boolean","description":"For an audio track, indicates that this is the primary audio track, ingested from the main input for this asset. The primary audio track cannot be deleted."},"error":{"type":"object","description":"Object that describes any errors that happened when processing this asset.","properties":{"type":{"type":"string","description":"The type of error that occurred for this asset."},"messages":{"type":"array","description":"Error messages with more details.","items":{"type":"string"}}}}}}},"errors":{"type":"object","description":"Object that describes any errors that happened when processing this asset.","properties":{"type":{"type":"string","description":"The type of error that occurred for this asset."},"messages":{"type":"array","description":"Error messages with more details.","items":{"type":"string"}}}},"per_title_encode":{"type":"boolean","format":"boolean","x-mux-doc-decorators":["hidden"],"deprecated":true},"upload_id":{"type":"string","description":"Unique identifier for the Direct Upload. This is an optional parameter added when the asset is created from a direct upload."},"is_live":{"type":"boolean","format":"boolean","description":"Indicates whether the live stream that created this asset is currently `active` and not in `idle` state. This is an optional parameter added when the asset is created from a live stream."},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the asset. Max 255 characters."},"live_stream_id":{"type":"string","description":"Unique identifier for the live stream. This is an optional parameter added when the asset is created from a live stream."},"master":{"type":"object","description":"An object containing the current status of Master Access and the link to the Master MP4 file when ready. This object does not exist if `master_access` is set to `none` and when the temporary URL expires.","properties":{"status":{"enum":["ready","preparing","errored"],"type":"string"},"url":{"type":"string","description":"The temporary URL to the master version of the video, as an MP4 file. This URL will expire after 24 hours."}}},"master_access":{"type":"string","enum":["temporary","none"],"default":"none"},"mp4_support":{"type":"string","default":"none","enum":["standard","none","capped-1080p","audio-only","audio-only,capped-1080p"],"x-mux-doc-decorators-deprecated-enum-values":["standard"]},"source_asset_id":{"type":"string","description":"Asset Identifier of the video used as the source for creating the clip."},"normalize_audio":{"type":"boolean","default":false,"description":"Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets."},"static_renditions":{"type":"object","description":"An object containing the current status of any static renditions (mp4s). The object does not exist if no static renditions have been requested. See [Download your videos](https://docs.mux.com/guides/enable-static-mp4-renditions) for more information.","properties":{"status":{"type":"string","default":"disabled","description":"Indicates the status of downloadable MP4 versions of this asset.","enum":["ready","preparing","disabled","errored"]},"files":{"type":"array","description":"Array of file objects.","items":{"type":"object","properties":{"name":{"type":"string","enum":["low.mp4","medium.mp4","high.mp4","audio.m4a","capped-1080p.mp4"]},"ext":{"type":"string","description":"Extension of the static rendition file","enum":["mp4","m4a"]},"height":{"type":"integer","format":"int32","description":"The height of the static rendition\'s file in pixels"},"width":{"type":"integer","format":"int32","description":"The width of the static rendition\'s file in pixels"},"bitrate":{"type":"integer","format":"int64","description":"The bitrate in bits per second"},"filesize":{"type":"integer","format":"int64","description":"The file size in bytes"}}}}}},"recording_times":{"type":"array","description":"An array of individual live stream recording sessions. A recording session is created on each encoder connection during the live stream. Additionally any time slate media is inserted during brief interruptions in the live stream media or times when the live streaming software disconnects, a recording session representing the slate media will be added with a \\"slate\\" type.","items":{"type":"object","properties":{"started_at":{"type":"object","properties":{"nanos":{"format":"int32","type":"integer"},"seconds":{"format":"int32","type":"integer"}},"required":["seconds"]},"duration":{"type":"number","format":"double","description":"The duration of the live stream recorded. The time value is in seconds."},"type":{"type":"string","enum":["content","slate"],"description":"The type of media represented by the recording session, either `content` for normal stream content or `slate` for slate media inserted during stream interruptions."}}}},"non_standard_input_reasons":{"type":"object","description":"An object containing one or more reasons the input file is non-standard. See [the guide on minimizing processing time](https://docs.mux.com/guides/minimize-processing-time) for more information on what a standard input is defined as. This object only exists on on-demand assets that have non-standard inputs, so if missing you can assume the input qualifies as standard.","properties":{"video_codec":{"type":"string","description":"The video codec used on the input file. For example, the input file encoded with `hevc` video codec is non-standard and the value of this parameter is `hevc`."},"audio_codec":{"type":"string","description":"The audio codec used on the input file. Non-AAC audio codecs are non-standard."},"video_gop_size":{"type":"string","enum":["high"],"description":"The video key frame Interval (also called as Group of Picture or GOP) of the input file is `high`. This parameter is present when the gop is greater than 20 seconds."},"video_frame_rate":{"type":"string","description":"The video frame rate of the input file. Video with average frames per second (fps) less than 5 or greater than 120 is non-standard. A `-1` frame rate value indicates Mux could not determine the frame rate of the video track."},"video_resolution":{"type":"string","description":"The video resolution of the input file. Video resolution higher than 2048 pixels on any one dimension (height or width) is considered non-standard, The resolution value is presented as `width` x `height` in pixels."},"video_bitrate":{"type":"string","enum":["high"],"description":"The video bitrate of the input file is `high`. This parameter is present when the average bitrate of any key frame interval (also known as Group of Pictures or GOP) is higher than what\'s considered standard which typically is 16 Mbps."},"pixel_aspect_ratio":{"type":"string","description":"The video pixel aspect ratio of the input file."},"video_edit_list":{"type":"string","enum":["non-standard"],"description":"Video Edit List reason indicates that the input file\'s video track contains a complex Edit Decision List."},"audio_edit_list":{"type":"string","enum":["non-standard"],"description":"Audio Edit List reason indicates that the input file\'s audio track contains a complex Edit Decision List."},"unexpected_media_file_parameters":{"type":"string","enum":["non-standard"],"description":"A catch-all reason when the input file in created with non-standard encoding parameters."},"unsupported_pixel_format":{"type":"string","description":"The video pixel format, as a string, returned by libav. Considered non-standard if not one of yuv420p or yuvj420p."},"unexpected_video_parameters":{"type":"string"}}},"test":{"type":"boolean","format":"boolean","description":"True means this live stream is a test asset. A test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test assets are watermarked with the Mux logo, limited to 10 seconds, and deleted after 24 hrs."},"ingest_type":{"type":"string","enum":["on_demand_url","on_demand_direct_upload","on_demand_clip","live_rtmp","live_srt"],"description":"The type of ingest used to create the asset."}}},"attempts":{"type":"array","description":"Attempts for sending out the webhook event","items":{"type":"object","properties":{"webhook_id":{"type":"integer","description":"Unique identifier for the webhook"},"response_status_code":{"type":"integer","description":"HTTP response status code for the webhook attempt"},"response_headers":{"type":"object","description":"HTTP response headers for the webhook attempt"},"response_body":{"type":["string","null"],"description":"HTTP response body for the webhook attempt"},"max_attempts":{"description":"Max attempts number for the webhook attempt","type":"integer"},"id":{"description":"Unique identifier for the webhook attempt","type":"string"},"created_at":{"description":"Time the webhook request was attempted","type":"string","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"address":{"description":"URL address for the webhook attempt","type":"string"}}}},"request_id":{"type":["string","null"],"deprecated":true},"accessor":{"type":["string","null"],"deprecated":true},"accessor_source":{"type":["string","null"],"deprecated":true}},"required":["type","id","created_at","object","environment","data","attempts"]},"example":{"aspect_ratio":"16:9","created_at":1655071077,"duration":8.433333,"event_created_at":1655157674060,"id":"SqQnqz6s5MBuXGvJaUWdXuXM93J9Q2yv","master":{"status":"preparing"},"master_access":"temporary","max_stored_frame_rate":30,"max_stored_resolution":"HD","resolution_tier":"1080p","mp4_support":"standard","non_standard_input_reasons":{"video_codec":"hevc"},"passthrough":"mux","playback_ids":[{"id":"uNbxnGLKJ00yfbijDO8COxTOyVKT01xpxW","policy":"public"}],"static_renditions":{"files":[{"bitrate":3853864,"ext":"mp4","filesize":4094255,"height":1080,"name":"high.mp4","width":1920},{"bitrate":763736,"ext":"mp4","filesize":811380,"height":576,"name":"low.mp4","width":1024},{"bitrate":1328040,"ext":"mp4","filesize":1410882,"height":720,"name":"medium.mp4","width":1280}],"status":"ready"},"status":"ready","tracks":[{"duration":8.498333,"id":"tvynBfgICyCMEq2XDxIzMOzAC8dnBO2b","max_frame_rate":30,"max_height":1080,"max_width":1920,"type":"video"},{"duration":8.498345,"id":"uZ2OP8I402I02HDTpXjRRE5OaVV6P02fBaMWeuThsQ2ODw","max_channel_layout":"mono","max_channels":1,"type":"audio"}],"upload_id":"YBcb901Uzpnegt6F5bUuHEnNjAaTeCQdP"}},"video.asset.master.deleted":{"description":"Master access for this asset has been deleted. Master access for this asset has been removed. You will no longer be able to download the master file. If you want it again you should re-request it.","payload":{"type":"object","properties":{"type":{"type":"string","description":"Type for the webhook event"},"id":{"type":"string","description":"Unique identifier for the event"},"created_at":{"type":"string","description":"Time the event was created","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"object":{"type":"object","properties":{"type":{"type":"string"},"id":{"type":"string"}},"required":["type","id"]},"environment":{"type":"object","properties":{"name":{"type":"string","description":"Name for the environment"},"id":{"type":"string","description":"Unique identifier for the environment"}},"required":["name","id"]},"data":{"type":"object","x-required":["id","created_at","status","max_resolution_tier","encoding_tier","mp4_support","master_access"],"properties":{"id":{"type":"string","description":"Unique identifier for the Asset. Max 255 characters."},"created_at":{"type":"integer","format":"int32"},"status":{"type":"string","enum":["preparing","ready","errored"],"description":"The status of the asset."},"duration":{"type":"number","format":"double","description":"The duration of the asset in seconds (max duration for a single asset is 12 hours)."},"max_stored_resolution":{"type":"string","enum":["Audio only","SD","HD","FHD","UHD"],"description":"This field is deprecated. Please use `resolution_tier` instead. The maximum resolution that has been stored for the asset. The asset may be delivered at lower resolutions depending on the device and bandwidth, however it cannot be delivered at a higher value than is stored.","deprecated":true},"resolution_tier":{"type":"string","enum":["audio-only","720p","1080p","1440p","2160p"],"description":"The resolution tier that the asset was ingested at, affecting billing for ingest & storage. This field also represents the highest resolution tier that the content can be delivered at, however the actual resolution may be lower depending on the device, bandwidth, and exact resolution of the uploaded asset."},"max_resolution_tier":{"type":"string","enum":["1080p","1440p","2160p"],"description":"Max resolution tier can be used to control the maximum `resolution_tier` your asset is encoded, stored, and streamed at. If not set, this defaults to `1080p`."},"encoding_tier":{"type":"string","deprecated":true,"enum":["smart","baseline","premium"],"description":"This field is deprecated. Please use `video_quality` instead. The encoding tier informs the cost, quality, and available platform features for the asset. The default encoding tier for an account can be set in the Mux Dashboard. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"video_quality":{"type":"string","enum":["basic","plus","premium"],"description":"The video quality controls the cost, quality, and available platform features for the asset. The default video quality for an account can be set in the Mux Dashboard. This field replaces the deprecated `encoding_tier` value. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"max_stored_frame_rate":{"type":"number","format":"double","description":"The maximum frame rate that has been stored for the asset. The asset may be delivered at lower frame rates depending on the device and bandwidth, however it cannot be delivered at a higher value than is stored. This field may return -1 if the frame rate of the input cannot be reliably determined."},"aspect_ratio":{"type":"string","description":"The aspect ratio of the asset in the form of `width:height`, for example `16:9`."},"playback_ids":{"type":"array","description":"An array of Playback ID objects. Use these to create HLS playback URLs. See [Play your videos](https://docs.mux.com/guides/play-your-videos) for more details.","items":{"type":"object","x-required":["id","policy"],"properties":{"id":{"type":"string","description":"Unique identifier for the PlaybackID"},"policy":{"type":"string","enum":["public","signed","drm"],"description":"* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\\n\\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](https://docs.mux.com/guides/secure-video-playback) for details about creating tokens.\\n\\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](https://docs.mux.com/guides/protect-videos-with-drm).\\n"},"drm_configuration_id":{"type":"string","description":"The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."}}}},"tracks":{"type":"array","description":"The individual media tracks that make up an asset.","items":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier for the Track"},"type":{"type":"string","description":"The type of track","enum":["video","audio","text"]},"duration":{"type":"number","format":"double","description":"The duration in seconds of the track media. This parameter is not set for `text` type tracks. This field is optional and may not be set. The top level `duration` field of an asset will always be set."},"max_width":{"type":"integer","format":"int64","description":"The maximum width in pixels available for the track. Only set for the `video` type track."},"max_height":{"type":"integer","format":"int64","description":"The maximum height in pixels available for the track. Only set for the `video` type track."},"max_frame_rate":{"type":"number","format":"double","description":"The maximum frame rate available for the track. Only set for the `video` type track. This field may return `-1` if the frame rate of the input cannot be reliably determined."},"max_channels":{"type":"integer","format":"int64","description":"The maximum number of audio channels the track supports. Only set for the `audio` type track."},"max_channel_layout":{"type":"string","description":"Only set for the `audio` type track.","deprecated":true},"text_type":{"type":"string","enum":["subtitles"],"description":"This parameter is only set for `text` type tracks."},"text_source":{"type":"string","description":"The source of the text contained in a Track of type `text`. Valid `text_source`\\nvalues are listed below.\\n* `uploaded`: Tracks uploaded to Mux as caption or subtitle files using the Create Asset Track API.\\n* `embedded`: Tracks extracted from an embedded stream of CEA-608 closed captions.\\n* `generated_vod`: Tracks generated by automatic speech recognition on an on-demand asset.\\n* `generated_live`: Tracks generated by automatic speech recognition on a live stream configured with `generated_subtitles`. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\\n* `generated_live_final`: Tracks generated by automatic speech recognition on a live stream using `generated_subtitles`. The accuracy, timing, and formatting of these subtitles is improved compared to the corresponding `generated_live` tracks. However, `generated_live_final` tracks will not be available in `ready` status until the live stream ends. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\\n","enum":["uploaded","embedded","generated_live","generated_live_final","generated_vod"]},"language_code":{"type":"string","description":"The language code value represents [BCP 47](https://tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is only set for `text` and `audio` track types."},"name":{"type":"string","description":"The name of the track containing a human-readable description. The HLS manifest will associate a subtitle `text` or `audio` track with this value. For example, the value should be \\"English\\" for a subtitle text track for the `language_code` value of `en-US`. This parameter is only set for `text` and `audio` track types."},"closed_captions":{"type":"boolean","description":"Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This parameter is only set tracks where `type` is `text` and `text_type` is `subtitles`."},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the track either when creating the asset or track. This parameter is only set for `text` type tracks. Max 255 characters."},"status":{"type":"string","enum":["preparing","ready","errored","deleted"],"description":"The status of the track. This parameter is only set for `text` type tracks."},"primary":{"type":"boolean","description":"For an audio track, indicates that this is the primary audio track, ingested from the main input for this asset. The primary audio track cannot be deleted."},"error":{"type":"object","description":"Object that describes any errors that happened when processing this asset.","properties":{"type":{"type":"string","description":"The type of error that occurred for this asset."},"messages":{"type":"array","description":"Error messages with more details.","items":{"type":"string"}}}}}}},"errors":{"type":"object","description":"Object that describes any errors that happened when processing this asset.","properties":{"type":{"type":"string","description":"The type of error that occurred for this asset."},"messages":{"type":"array","description":"Error messages with more details.","items":{"type":"string"}}}},"per_title_encode":{"type":"boolean","format":"boolean","x-mux-doc-decorators":["hidden"],"deprecated":true},"upload_id":{"type":"string","description":"Unique identifier for the Direct Upload. This is an optional parameter added when the asset is created from a direct upload."},"is_live":{"type":"boolean","format":"boolean","description":"Indicates whether the live stream that created this asset is currently `active` and not in `idle` state. This is an optional parameter added when the asset is created from a live stream."},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the asset. Max 255 characters."},"live_stream_id":{"type":"string","description":"Unique identifier for the live stream. This is an optional parameter added when the asset is created from a live stream."},"master":{"type":"object","description":"An object containing the current status of Master Access and the link to the Master MP4 file when ready. This object does not exist if `master_access` is set to `none` and when the temporary URL expires.","properties":{"status":{"enum":["ready","preparing","errored"],"type":"string"},"url":{"type":"string","description":"The temporary URL to the master version of the video, as an MP4 file. This URL will expire after 24 hours."}}},"master_access":{"type":"string","enum":["temporary","none"],"default":"none"},"mp4_support":{"type":"string","default":"none","enum":["standard","none","capped-1080p","audio-only","audio-only,capped-1080p"],"x-mux-doc-decorators-deprecated-enum-values":["standard"]},"source_asset_id":{"type":"string","description":"Asset Identifier of the video used as the source for creating the clip."},"normalize_audio":{"type":"boolean","default":false,"description":"Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets."},"static_renditions":{"type":"object","description":"An object containing the current status of any static renditions (mp4s). The object does not exist if no static renditions have been requested. See [Download your videos](https://docs.mux.com/guides/enable-static-mp4-renditions) for more information.","properties":{"status":{"type":"string","default":"disabled","description":"Indicates the status of downloadable MP4 versions of this asset.","enum":["ready","preparing","disabled","errored"]},"files":{"type":"array","description":"Array of file objects.","items":{"type":"object","properties":{"name":{"type":"string","enum":["low.mp4","medium.mp4","high.mp4","audio.m4a","capped-1080p.mp4"]},"ext":{"type":"string","description":"Extension of the static rendition file","enum":["mp4","m4a"]},"height":{"type":"integer","format":"int32","description":"The height of the static rendition\'s file in pixels"},"width":{"type":"integer","format":"int32","description":"The width of the static rendition\'s file in pixels"},"bitrate":{"type":"integer","format":"int64","description":"The bitrate in bits per second"},"filesize":{"type":"integer","format":"int64","description":"The file size in bytes"}}}}}},"recording_times":{"type":"array","description":"An array of individual live stream recording sessions. A recording session is created on each encoder connection during the live stream. Additionally any time slate media is inserted during brief interruptions in the live stream media or times when the live streaming software disconnects, a recording session representing the slate media will be added with a \\"slate\\" type.","items":{"type":"object","properties":{"started_at":{"type":"object","properties":{"nanos":{"format":"int32","type":"integer"},"seconds":{"format":"int32","type":"integer"}},"required":["seconds"]},"duration":{"type":"number","format":"double","description":"The duration of the live stream recorded. The time value is in seconds."},"type":{"type":"string","enum":["content","slate"],"description":"The type of media represented by the recording session, either `content` for normal stream content or `slate` for slate media inserted during stream interruptions."}}}},"non_standard_input_reasons":{"type":"object","description":"An object containing one or more reasons the input file is non-standard. See [the guide on minimizing processing time](https://docs.mux.com/guides/minimize-processing-time) for more information on what a standard input is defined as. This object only exists on on-demand assets that have non-standard inputs, so if missing you can assume the input qualifies as standard.","properties":{"video_codec":{"type":"string","description":"The video codec used on the input file. For example, the input file encoded with `hevc` video codec is non-standard and the value of this parameter is `hevc`."},"audio_codec":{"type":"string","description":"The audio codec used on the input file. Non-AAC audio codecs are non-standard."},"video_gop_size":{"type":"string","enum":["high"],"description":"The video key frame Interval (also called as Group of Picture or GOP) of the input file is `high`. This parameter is present when the gop is greater than 20 seconds."},"video_frame_rate":{"type":"string","description":"The video frame rate of the input file. Video with average frames per second (fps) less than 5 or greater than 120 is non-standard. A `-1` frame rate value indicates Mux could not determine the frame rate of the video track."},"video_resolution":{"type":"string","description":"The video resolution of the input file. Video resolution higher than 2048 pixels on any one dimension (height or width) is considered non-standard, The resolution value is presented as `width` x `height` in pixels."},"video_bitrate":{"type":"string","enum":["high"],"description":"The video bitrate of the input file is `high`. This parameter is present when the average bitrate of any key frame interval (also known as Group of Pictures or GOP) is higher than what\'s considered standard which typically is 16 Mbps."},"pixel_aspect_ratio":{"type":"string","description":"The video pixel aspect ratio of the input file."},"video_edit_list":{"type":"string","enum":["non-standard"],"description":"Video Edit List reason indicates that the input file\'s video track contains a complex Edit Decision List."},"audio_edit_list":{"type":"string","enum":["non-standard"],"description":"Audio Edit List reason indicates that the input file\'s audio track contains a complex Edit Decision List."},"unexpected_media_file_parameters":{"type":"string","enum":["non-standard"],"description":"A catch-all reason when the input file in created with non-standard encoding parameters."},"unsupported_pixel_format":{"type":"string","description":"The video pixel format, as a string, returned by libav. Considered non-standard if not one of yuv420p or yuvj420p."},"unexpected_video_parameters":{"type":"string"}}},"test":{"type":"boolean","format":"boolean","description":"True means this live stream is a test asset. A test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test assets are watermarked with the Mux logo, limited to 10 seconds, and deleted after 24 hrs."},"ingest_type":{"type":"string","enum":["on_demand_url","on_demand_direct_upload","on_demand_clip","live_rtmp","live_srt"],"description":"The type of ingest used to create the asset."}}},"attempts":{"type":"array","description":"Attempts for sending out the webhook event","items":{"type":"object","properties":{"webhook_id":{"type":"integer","description":"Unique identifier for the webhook"},"response_status_code":{"type":"integer","description":"HTTP response status code for the webhook attempt"},"response_headers":{"type":"object","description":"HTTP response headers for the webhook attempt"},"response_body":{"type":["string","null"],"description":"HTTP response body for the webhook attempt"},"max_attempts":{"description":"Max attempts number for the webhook attempt","type":"integer"},"id":{"description":"Unique identifier for the webhook attempt","type":"string"},"created_at":{"description":"Time the webhook request was attempted","type":"string","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"address":{"description":"URL address for the webhook attempt","type":"string"}}}},"request_id":{"type":["string","null"],"deprecated":true},"accessor":{"type":["string","null"],"deprecated":true},"accessor_source":{"type":["string","null"],"deprecated":true}},"required":["type","id","created_at","object","environment","data","attempts"]},"example":{"aspect_ratio":"16:9","created_at":1646097960,"duration":5080.332244,"id":"SqQnqz6s5MBuXGvJaUWdXuXM93J9Q2yv","master_access":"none","max_stored_frame_rate":59.938,"max_stored_resolution":"HD","resolution_tier":"1080p","mp4_support":"none","passthrough":"mux","playback_ids":[{"id":"uNbxnGLKJ00yfbijDO8COxTOyVKT01xpxW","policy":"public"}],"recording_times":[{"duration":5080.254,"started_at":{"nanos":781000000,"seconds":1646097961}}],"status":"ready","tracks":[{"id":"rdZzhrwGUW007gombRtWLr4reCQV02V4dd7g01KNZihovw","max_frame_rate":59.938,"max_height":1080,"max_width":1920,"type":"video"},{"id":"B3SYk6gxjROJE7IyABMtOetxiqX01bMt2Is2BPYjf6hc","max_channel_layout":"stereo","max_channels":2,"type":"audio"}]}},"video.asset.master.errored":{"description":"Master access for this asset has encountered an error. This indicates that there was some error when creating master access for this asset. This should be rare and if you see it unexpectedly please open a support ticket.","payload":{"type":"object","properties":{"type":{"type":"string","description":"Type for the webhook event"},"id":{"type":"string","description":"Unique identifier for the event"},"created_at":{"type":"string","description":"Time the event was created","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"object":{"type":"object","properties":{"type":{"type":"string"},"id":{"type":"string"}},"required":["type","id"]},"environment":{"type":"object","properties":{"name":{"type":"string","description":"Name for the environment"},"id":{"type":"string","description":"Unique identifier for the environment"}},"required":["name","id"]},"data":{"type":"object","x-required":["id","created_at","status","max_resolution_tier","encoding_tier","mp4_support","master_access"],"properties":{"id":{"type":"string","description":"Unique identifier for the Asset. Max 255 characters."},"created_at":{"type":"integer","format":"int32"},"status":{"type":"string","enum":["preparing","ready","errored"],"description":"The status of the asset."},"duration":{"type":"number","format":"double","description":"The duration of the asset in seconds (max duration for a single asset is 12 hours)."},"max_stored_resolution":{"type":"string","enum":["Audio only","SD","HD","FHD","UHD"],"description":"This field is deprecated. Please use `resolution_tier` instead. The maximum resolution that has been stored for the asset. The asset may be delivered at lower resolutions depending on the device and bandwidth, however it cannot be delivered at a higher value than is stored.","deprecated":true},"resolution_tier":{"type":"string","enum":["audio-only","720p","1080p","1440p","2160p"],"description":"The resolution tier that the asset was ingested at, affecting billing for ingest & storage. This field also represents the highest resolution tier that the content can be delivered at, however the actual resolution may be lower depending on the device, bandwidth, and exact resolution of the uploaded asset."},"max_resolution_tier":{"type":"string","enum":["1080p","1440p","2160p"],"description":"Max resolution tier can be used to control the maximum `resolution_tier` your asset is encoded, stored, and streamed at. If not set, this defaults to `1080p`."},"encoding_tier":{"type":"string","deprecated":true,"enum":["smart","baseline","premium"],"description":"This field is deprecated. Please use `video_quality` instead. The encoding tier informs the cost, quality, and available platform features for the asset. The default encoding tier for an account can be set in the Mux Dashboard. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"video_quality":{"type":"string","enum":["basic","plus","premium"],"description":"The video quality controls the cost, quality, and available platform features for the asset. The default video quality for an account can be set in the Mux Dashboard. This field replaces the deprecated `encoding_tier` value. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"max_stored_frame_rate":{"type":"number","format":"double","description":"The maximum frame rate that has been stored for the asset. The asset may be delivered at lower frame rates depending on the device and bandwidth, however it cannot be delivered at a higher value than is stored. This field may return -1 if the frame rate of the input cannot be reliably determined."},"aspect_ratio":{"type":"string","description":"The aspect ratio of the asset in the form of `width:height`, for example `16:9`."},"playback_ids":{"type":"array","description":"An array of Playback ID objects. Use these to create HLS playback URLs. See [Play your videos](https://docs.mux.com/guides/play-your-videos) for more details.","items":{"type":"object","x-required":["id","policy"],"properties":{"id":{"type":"string","description":"Unique identifier for the PlaybackID"},"policy":{"type":"string","enum":["public","signed","drm"],"description":"* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\\n\\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](https://docs.mux.com/guides/secure-video-playback) for details about creating tokens.\\n\\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](https://docs.mux.com/guides/protect-videos-with-drm).\\n"},"drm_configuration_id":{"type":"string","description":"The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."}}}},"tracks":{"type":"array","description":"The individual media tracks that make up an asset.","items":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier for the Track"},"type":{"type":"string","description":"The type of track","enum":["video","audio","text"]},"duration":{"type":"number","format":"double","description":"The duration in seconds of the track media. This parameter is not set for `text` type tracks. This field is optional and may not be set. The top level `duration` field of an asset will always be set."},"max_width":{"type":"integer","format":"int64","description":"The maximum width in pixels available for the track. Only set for the `video` type track."},"max_height":{"type":"integer","format":"int64","description":"The maximum height in pixels available for the track. Only set for the `video` type track."},"max_frame_rate":{"type":"number","format":"double","description":"The maximum frame rate available for the track. Only set for the `video` type track. This field may return `-1` if the frame rate of the input cannot be reliably determined."},"max_channels":{"type":"integer","format":"int64","description":"The maximum number of audio channels the track supports. Only set for the `audio` type track."},"max_channel_layout":{"type":"string","description":"Only set for the `audio` type track.","deprecated":true},"text_type":{"type":"string","enum":["subtitles"],"description":"This parameter is only set for `text` type tracks."},"text_source":{"type":"string","description":"The source of the text contained in a Track of type `text`. Valid `text_source`\\nvalues are listed below.\\n* `uploaded`: Tracks uploaded to Mux as caption or subtitle files using the Create Asset Track API.\\n* `embedded`: Tracks extracted from an embedded stream of CEA-608 closed captions.\\n* `generated_vod`: Tracks generated by automatic speech recognition on an on-demand asset.\\n* `generated_live`: Tracks generated by automatic speech recognition on a live stream configured with `generated_subtitles`. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\\n* `generated_live_final`: Tracks generated by automatic speech recognition on a live stream using `generated_subtitles`. The accuracy, timing, and formatting of these subtitles is improved compared to the corresponding `generated_live` tracks. However, `generated_live_final` tracks will not be available in `ready` status until the live stream ends. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\\n","enum":["uploaded","embedded","generated_live","generated_live_final","generated_vod"]},"language_code":{"type":"string","description":"The language code value represents [BCP 47](https://tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is only set for `text` and `audio` track types."},"name":{"type":"string","description":"The name of the track containing a human-readable description. The HLS manifest will associate a subtitle `text` or `audio` track with this value. For example, the value should be \\"English\\" for a subtitle text track for the `language_code` value of `en-US`. This parameter is only set for `text` and `audio` track types."},"closed_captions":{"type":"boolean","description":"Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This parameter is only set tracks where `type` is `text` and `text_type` is `subtitles`."},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the track either when creating the asset or track. This parameter is only set for `text` type tracks. Max 255 characters."},"status":{"type":"string","enum":["preparing","ready","errored","deleted"],"description":"The status of the track. This parameter is only set for `text` type tracks."},"primary":{"type":"boolean","description":"For an audio track, indicates that this is the primary audio track, ingested from the main input for this asset. The primary audio track cannot be deleted."},"error":{"type":"object","description":"Object that describes any errors that happened when processing this asset.","properties":{"type":{"type":"string","description":"The type of error that occurred for this asset."},"messages":{"type":"array","description":"Error messages with more details.","items":{"type":"string"}}}}}}},"errors":{"type":"object","description":"Object that describes any errors that happened when processing this asset.","properties":{"type":{"type":"string","description":"The type of error that occurred for this asset."},"messages":{"type":"array","description":"Error messages with more details.","items":{"type":"string"}}}},"per_title_encode":{"type":"boolean","format":"boolean","x-mux-doc-decorators":["hidden"],"deprecated":true},"upload_id":{"type":"string","description":"Unique identifier for the Direct Upload. This is an optional parameter added when the asset is created from a direct upload."},"is_live":{"type":"boolean","format":"boolean","description":"Indicates whether the live stream that created this asset is currently `active` and not in `idle` state. This is an optional parameter added when the asset is created from a live stream."},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the asset. Max 255 characters."},"live_stream_id":{"type":"string","description":"Unique identifier for the live stream. This is an optional parameter added when the asset is created from a live stream."},"master":{"type":"object","description":"An object containing the current status of Master Access and the link to the Master MP4 file when ready. This object does not exist if `master_access` is set to `none` and when the temporary URL expires.","properties":{"status":{"enum":["ready","preparing","errored"],"type":"string"},"url":{"type":"string","description":"The temporary URL to the master version of the video, as an MP4 file. This URL will expire after 24 hours."}}},"master_access":{"type":"string","enum":["temporary","none"],"default":"none"},"mp4_support":{"type":"string","default":"none","enum":["standard","none","capped-1080p","audio-only","audio-only,capped-1080p"],"x-mux-doc-decorators-deprecated-enum-values":["standard"]},"source_asset_id":{"type":"string","description":"Asset Identifier of the video used as the source for creating the clip."},"normalize_audio":{"type":"boolean","default":false,"description":"Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets."},"static_renditions":{"type":"object","description":"An object containing the current status of any static renditions (mp4s). The object does not exist if no static renditions have been requested. See [Download your videos](https://docs.mux.com/guides/enable-static-mp4-renditions) for more information.","properties":{"status":{"type":"string","default":"disabled","description":"Indicates the status of downloadable MP4 versions of this asset.","enum":["ready","preparing","disabled","errored"]},"files":{"type":"array","description":"Array of file objects.","items":{"type":"object","properties":{"name":{"type":"string","enum":["low.mp4","medium.mp4","high.mp4","audio.m4a","capped-1080p.mp4"]},"ext":{"type":"string","description":"Extension of the static rendition file","enum":["mp4","m4a"]},"height":{"type":"integer","format":"int32","description":"The height of the static rendition\'s file in pixels"},"width":{"type":"integer","format":"int32","description":"The width of the static rendition\'s file in pixels"},"bitrate":{"type":"integer","format":"int64","description":"The bitrate in bits per second"},"filesize":{"type":"integer","format":"int64","description":"The file size in bytes"}}}}}},"recording_times":{"type":"array","description":"An array of individual live stream recording sessions. A recording session is created on each encoder connection during the live stream. Additionally any time slate media is inserted during brief interruptions in the live stream media or times when the live streaming software disconnects, a recording session representing the slate media will be added with a \\"slate\\" type.","items":{"type":"object","properties":{"started_at":{"type":"object","properties":{"nanos":{"format":"int32","type":"integer"},"seconds":{"format":"int32","type":"integer"}},"required":["seconds"]},"duration":{"type":"number","format":"double","description":"The duration of the live stream recorded. The time value is in seconds."},"type":{"type":"string","enum":["content","slate"],"description":"The type of media represented by the recording session, either `content` for normal stream content or `slate` for slate media inserted during stream interruptions."}}}},"non_standard_input_reasons":{"type":"object","description":"An object containing one or more reasons the input file is non-standard. See [the guide on minimizing processing time](https://docs.mux.com/guides/minimize-processing-time) for more information on what a standard input is defined as. This object only exists on on-demand assets that have non-standard inputs, so if missing you can assume the input qualifies as standard.","properties":{"video_codec":{"type":"string","description":"The video codec used on the input file. For example, the input file encoded with `hevc` video codec is non-standard and the value of this parameter is `hevc`."},"audio_codec":{"type":"string","description":"The audio codec used on the input file. Non-AAC audio codecs are non-standard."},"video_gop_size":{"type":"string","enum":["high"],"description":"The video key frame Interval (also called as Group of Picture or GOP) of the input file is `high`. This parameter is present when the gop is greater than 20 seconds."},"video_frame_rate":{"type":"string","description":"The video frame rate of the input file. Video with average frames per second (fps) less than 5 or greater than 120 is non-standard. A `-1` frame rate value indicates Mux could not determine the frame rate of the video track."},"video_resolution":{"type":"string","description":"The video resolution of the input file. Video resolution higher than 2048 pixels on any one dimension (height or width) is considered non-standard, The resolution value is presented as `width` x `height` in pixels."},"video_bitrate":{"type":"string","enum":["high"],"description":"The video bitrate of the input file is `high`. This parameter is present when the average bitrate of any key frame interval (also known as Group of Pictures or GOP) is higher than what\'s considered standard which typically is 16 Mbps."},"pixel_aspect_ratio":{"type":"string","description":"The video pixel aspect ratio of the input file."},"video_edit_list":{"type":"string","enum":["non-standard"],"description":"Video Edit List reason indicates that the input file\'s video track contains a complex Edit Decision List."},"audio_edit_list":{"type":"string","enum":["non-standard"],"description":"Audio Edit List reason indicates that the input file\'s audio track contains a complex Edit Decision List."},"unexpected_media_file_parameters":{"type":"string","enum":["non-standard"],"description":"A catch-all reason when the input file in created with non-standard encoding parameters."},"unsupported_pixel_format":{"type":"string","description":"The video pixel format, as a string, returned by libav. Considered non-standard if not one of yuv420p or yuvj420p."},"unexpected_video_parameters":{"type":"string"}}},"test":{"type":"boolean","format":"boolean","description":"True means this live stream is a test asset. A test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test assets are watermarked with the Mux logo, limited to 10 seconds, and deleted after 24 hrs."},"ingest_type":{"type":"string","enum":["on_demand_url","on_demand_direct_upload","on_demand_clip","live_rtmp","live_srt"],"description":"The type of ingest used to create the asset."}}},"attempts":{"type":"array","description":"Attempts for sending out the webhook event","items":{"type":"object","properties":{"webhook_id":{"type":"integer","description":"Unique identifier for the webhook"},"response_status_code":{"type":"integer","description":"HTTP response status code for the webhook attempt"},"response_headers":{"type":"object","description":"HTTP response headers for the webhook attempt"},"response_body":{"type":["string","null"],"description":"HTTP response body for the webhook attempt"},"max_attempts":{"description":"Max attempts number for the webhook attempt","type":"integer"},"id":{"description":"Unique identifier for the webhook attempt","type":"string"},"created_at":{"description":"Time the webhook request was attempted","type":"string","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"address":{"description":"URL address for the webhook attempt","type":"string"}}}},"request_id":{"type":["string","null"],"deprecated":true},"accessor":{"type":["string","null"],"deprecated":true},"accessor_source":{"type":["string","null"],"deprecated":true}},"required":["type","id","created_at","object","environment","data","attempts"]},"example":{"aspect_ratio":"16:9","created_at":1646697194,"duration":431.637867,"id":"SqQnqz6s5MBuXGvJaUWdXuXM93J9Q2yv","master":{"status":"errored"},"master_access":"temporary","max_stored_frame_rate":29.97,"max_stored_resolution":"HD","resolution_tier":"1080p","mp4_support":"standard","passthrough":"mux","playback_ids":[{"id":"uNbxnGLKJ00yfbijDO8COxTOyVKT01xpxW","policy":"public"}],"recording_times":[{"duration":431.531,"started_at":{"nanos":908000000,"seconds":1646697192}}],"static_renditions":{"status":"preparing"},"status":"ready","tracks":[{"id":"gGMj02XZW00ZCdEYTEhTwOLIZLv8nZT54pDQmDIhXmtS00","max_frame_rate":29.97,"max_height":1080,"max_width":1920,"type":"video"},{"id":"PQ1ycW5Fp201zIORxzC8EToKkb69009WPRq3wgZvosHNc","max_channel_layout":"stereo","max_channels":2,"type":"audio"}]}},"video.asset.track.created":{"description":"A new track for this asset has been created, for example a subtitle text track.","payload":{"type":"object","properties":{"type":{"type":"string","description":"Type for the webhook event"},"id":{"type":"string","description":"Unique identifier for the event"},"created_at":{"type":"string","description":"Time the event was created","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"object":{"type":"object","properties":{"type":{"type":"string"},"id":{"type":"string"}},"required":["type","id"]},"environment":{"type":"object","properties":{"name":{"type":"string","description":"Name for the environment"},"id":{"type":"string","description":"Unique identifier for the environment"}},"required":["name","id"]},"data":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier for the Track"},"type":{"type":"string","description":"The type of track","enum":["video","audio","text"]},"duration":{"type":"number","format":"double","description":"The duration in seconds of the track media. This parameter is not set for `text` type tracks. This field is optional and may not be set. The top level `duration` field of an asset will always be set."},"max_width":{"type":"integer","format":"int64","description":"The maximum width in pixels available for the track. Only set for the `video` type track."},"max_height":{"type":"integer","format":"int64","description":"The maximum height in pixels available for the track. Only set for the `video` type track."},"max_frame_rate":{"type":"number","format":"double","description":"The maximum frame rate available for the track. Only set for the `video` type track. This field may return `-1` if the frame rate of the input cannot be reliably determined."},"max_channels":{"type":"integer","format":"int64","description":"The maximum number of audio channels the track supports. Only set for the `audio` type track."},"max_channel_layout":{"type":"string","description":"Only set for the `audio` type track.","deprecated":true},"text_type":{"type":"string","enum":["subtitles"],"description":"This parameter is only set for `text` type tracks."},"text_source":{"type":"string","description":"The source of the text contained in a Track of type `text`. Valid `text_source`\\nvalues are listed below.\\n* `uploaded`: Tracks uploaded to Mux as caption or subtitle files using the Create Asset Track API.\\n* `embedded`: Tracks extracted from an embedded stream of CEA-608 closed captions.\\n* `generated_vod`: Tracks generated by automatic speech recognition on an on-demand asset.\\n* `generated_live`: Tracks generated by automatic speech recognition on a live stream configured with `generated_subtitles`. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\\n* `generated_live_final`: Tracks generated by automatic speech recognition on a live stream using `generated_subtitles`. The accuracy, timing, and formatting of these subtitles is improved compared to the corresponding `generated_live` tracks. However, `generated_live_final` tracks will not be available in `ready` status until the live stream ends. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\\n","enum":["uploaded","embedded","generated_live","generated_live_final","generated_vod"]},"language_code":{"type":"string","description":"The language code value represents [BCP 47](https://tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is only set for `text` and `audio` track types."},"name":{"type":"string","description":"The name of the track containing a human-readable description. The HLS manifest will associate a subtitle `text` or `audio` track with this value. For example, the value should be \\"English\\" for a subtitle text track for the `language_code` value of `en-US`. This parameter is only set for `text` and `audio` track types."},"closed_captions":{"type":"boolean","description":"Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This parameter is only set tracks where `type` is `text` and `text_type` is `subtitles`."},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the track either when creating the asset or track. This parameter is only set for `text` type tracks. Max 255 characters."},"status":{"type":"string","enum":["preparing","ready","errored","deleted"],"description":"The status of the track. This parameter is only set for `text` type tracks."},"primary":{"type":"boolean","description":"For an audio track, indicates that this is the primary audio track, ingested from the main input for this asset. The primary audio track cannot be deleted."},"asset_id":{"type":"string","description":"Unique identifier for the Asset. Max 255 characters."},"error":{"type":"object","description":"Object that describes any errors that happened when processing this asset.","properties":{"type":{"type":"string","description":"The type of error that occurred for this asset."},"messages":{"type":"array","description":"Error messages with more details.","items":{"type":"string"}}}}}},"attempts":{"type":"array","description":"Attempts for sending out the webhook event","items":{"type":"object","properties":{"webhook_id":{"type":"integer","description":"Unique identifier for the webhook"},"response_status_code":{"type":"integer","description":"HTTP response status code for the webhook attempt"},"response_headers":{"type":"object","description":"HTTP response headers for the webhook attempt"},"response_body":{"type":["string","null"],"description":"HTTP response body for the webhook attempt"},"max_attempts":{"description":"Max attempts number for the webhook attempt","type":"integer"},"id":{"description":"Unique identifier for the webhook attempt","type":"string"},"created_at":{"description":"Time the webhook request was attempted","type":"string","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"address":{"description":"URL address for the webhook attempt","type":"string"}}}},"request_id":{"type":["string","null"],"deprecated":true},"accessor":{"type":["string","null"],"deprecated":true},"accessor_source":{"type":["string","null"],"deprecated":true}},"required":["type","id","created_at","object","environment","data","attempts"]},"example":{"asset_id":"SqQnqz6s5MBuXGvJaUWdXuXM93J9Q2yv","closed_captions":true,"event_created_at":1655164603330,"id":"Temx6jqszglQg02JIUJtudt8FQtbsoFA8lTWD3Y","language_code":"en-US","name":"English","passthrough":"English","status":"preparing","text_source":"uploaded","text_type":"subtitles","type":"text"}},"video.asset.track.ready":{"description":"A track for this asset is ready. In the example of a subtitle text track the text track will now be delivered with your HLS stream.","payload":{"type":"object","properties":{"type":{"type":"string","description":"Type for the webhook event"},"id":{"type":"string","description":"Unique identifier for the event"},"created_at":{"type":"string","description":"Time the event was created","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"object":{"type":"object","properties":{"type":{"type":"string"},"id":{"type":"string"}},"required":["type","id"]},"environment":{"type":"object","properties":{"name":{"type":"string","description":"Name for the environment"},"id":{"type":"string","description":"Unique identifier for the environment"}},"required":["name","id"]},"data":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier for the Track"},"type":{"type":"string","description":"The type of track","enum":["video","audio","text"]},"duration":{"type":"number","format":"double","description":"The duration in seconds of the track media. This parameter is not set for `text` type tracks. This field is optional and may not be set. The top level `duration` field of an asset will always be set."},"max_width":{"type":"integer","format":"int64","description":"The maximum width in pixels available for the track. Only set for the `video` type track."},"max_height":{"type":"integer","format":"int64","description":"The maximum height in pixels available for the track. Only set for the `video` type track."},"max_frame_rate":{"type":"number","format":"double","description":"The maximum frame rate available for the track. Only set for the `video` type track. This field may return `-1` if the frame rate of the input cannot be reliably determined."},"max_channels":{"type":"integer","format":"int64","description":"The maximum number of audio channels the track supports. Only set for the `audio` type track."},"max_channel_layout":{"type":"string","description":"Only set for the `audio` type track.","deprecated":true},"text_type":{"type":"string","enum":["subtitles"],"description":"This parameter is only set for `text` type tracks."},"text_source":{"type":"string","description":"The source of the text contained in a Track of type `text`. Valid `text_source`\\nvalues are listed below.\\n* `uploaded`: Tracks uploaded to Mux as caption or subtitle files using the Create Asset Track API.\\n* `embedded`: Tracks extracted from an embedded stream of CEA-608 closed captions.\\n* `generated_vod`: Tracks generated by automatic speech recognition on an on-demand asset.\\n* `generated_live`: Tracks generated by automatic speech recognition on a live stream configured with `generated_subtitles`. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\\n* `generated_live_final`: Tracks generated by automatic speech recognition on a live stream using `generated_subtitles`. The accuracy, timing, and formatting of these subtitles is improved compared to the corresponding `generated_live` tracks. However, `generated_live_final` tracks will not be available in `ready` status until the live stream ends. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\\n","enum":["uploaded","embedded","generated_live","generated_live_final","generated_vod"]},"language_code":{"type":"string","description":"The language code value represents [BCP 47](https://tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is only set for `text` and `audio` track types."},"name":{"type":"string","description":"The name of the track containing a human-readable description. The HLS manifest will associate a subtitle `text` or `audio` track with this value. For example, the value should be \\"English\\" for a subtitle text track for the `language_code` value of `en-US`. This parameter is only set for `text` and `audio` track types."},"closed_captions":{"type":"boolean","description":"Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This parameter is only set tracks where `type` is `text` and `text_type` is `subtitles`."},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the track either when creating the asset or track. This parameter is only set for `text` type tracks. Max 255 characters."},"status":{"type":"string","enum":["preparing","ready","errored","deleted"],"description":"The status of the track. This parameter is only set for `text` type tracks."},"primary":{"type":"boolean","description":"For an audio track, indicates that this is the primary audio track, ingested from the main input for this asset. The primary audio track cannot be deleted."},"asset_id":{"type":"string","description":"Unique identifier for the Asset. Max 255 characters."},"error":{"type":"object","description":"Object that describes any errors that happened when processing this asset.","properties":{"type":{"type":"string","description":"The type of error that occurred for this asset."},"messages":{"type":"array","description":"Error messages with more details.","items":{"type":"string"}}}}}},"attempts":{"type":"array","description":"Attempts for sending out the webhook event","items":{"type":"object","properties":{"webhook_id":{"type":"integer","description":"Unique identifier for the webhook"},"response_status_code":{"type":"integer","description":"HTTP response status code for the webhook attempt"},"response_headers":{"type":"object","description":"HTTP response headers for the webhook attempt"},"response_body":{"type":["string","null"],"description":"HTTP response body for the webhook attempt"},"max_attempts":{"description":"Max attempts number for the webhook attempt","type":"integer"},"id":{"description":"Unique identifier for the webhook attempt","type":"string"},"created_at":{"description":"Time the webhook request was attempted","type":"string","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"address":{"description":"URL address for the webhook attempt","type":"string"}}}},"request_id":{"type":["string","null"],"deprecated":true},"accessor":{"type":["string","null"],"deprecated":true},"accessor_source":{"type":["string","null"],"deprecated":true}},"required":["type","id","created_at","object","environment","data","attempts"]},"example":{"asset_id":"SqQnqz6s5MBuXGvJaUWdXuXM93J9Q2yv","closed_captions":true,"id":"sY7b7fW01LImWpoOv2oiVROwHv5Y","language_code":"xh","name":"xh (CC)","passthrough":"279003","status":"ready","text_source":"uploaded","text_type":"subtitles","type":"text"}},"video.asset.track.errored":{"description":"A track for this asset has encountered an error. There was some error preparing this track. Most commonly this could be a text track file that Mux was unable to download for processing.","payload":{"type":"object","properties":{"type":{"type":"string","description":"Type for the webhook event"},"id":{"type":"string","description":"Unique identifier for the event"},"created_at":{"type":"string","description":"Time the event was created","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"object":{"type":"object","properties":{"type":{"type":"string"},"id":{"type":"string"}},"required":["type","id"]},"environment":{"type":"object","properties":{"name":{"type":"string","description":"Name for the environment"},"id":{"type":"string","description":"Unique identifier for the environment"}},"required":["name","id"]},"data":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier for the Track"},"type":{"type":"string","description":"The type of track","enum":["video","audio","text"]},"duration":{"type":"number","format":"double","description":"The duration in seconds of the track media. This parameter is not set for `text` type tracks. This field is optional and may not be set. The top level `duration` field of an asset will always be set."},"max_width":{"type":"integer","format":"int64","description":"The maximum width in pixels available for the track. Only set for the `video` type track."},"max_height":{"type":"integer","format":"int64","description":"The maximum height in pixels available for the track. Only set for the `video` type track."},"max_frame_rate":{"type":"number","format":"double","description":"The maximum frame rate available for the track. Only set for the `video` type track. This field may return `-1` if the frame rate of the input cannot be reliably determined."},"max_channels":{"type":"integer","format":"int64","description":"The maximum number of audio channels the track supports. Only set for the `audio` type track."},"max_channel_layout":{"type":"string","description":"Only set for the `audio` type track.","deprecated":true},"text_type":{"type":"string","enum":["subtitles"],"description":"This parameter is only set for `text` type tracks."},"text_source":{"type":"string","description":"The source of the text contained in a Track of type `text`. Valid `text_source`\\nvalues are listed below.\\n* `uploaded`: Tracks uploaded to Mux as caption or subtitle files using the Create Asset Track API.\\n* `embedded`: Tracks extracted from an embedded stream of CEA-608 closed captions.\\n* `generated_vod`: Tracks generated by automatic speech recognition on an on-demand asset.\\n* `generated_live`: Tracks generated by automatic speech recognition on a live stream configured with `generated_subtitles`. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\\n* `generated_live_final`: Tracks generated by automatic speech recognition on a live stream using `generated_subtitles`. The accuracy, timing, and formatting of these subtitles is improved compared to the corresponding `generated_live` tracks. However, `generated_live_final` tracks will not be available in `ready` status until the live stream ends. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\\n","enum":["uploaded","embedded","generated_live","generated_live_final","generated_vod"]},"language_code":{"type":"string","description":"The language code value represents [BCP 47](https://tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is only set for `text` and `audio` track types."},"name":{"type":"string","description":"The name of the track containing a human-readable description. The HLS manifest will associate a subtitle `text` or `audio` track with this value. For example, the value should be \\"English\\" for a subtitle text track for the `language_code` value of `en-US`. This parameter is only set for `text` and `audio` track types."},"closed_captions":{"type":"boolean","description":"Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This parameter is only set tracks where `type` is `text` and `text_type` is `subtitles`."},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the track either when creating the asset or track. This parameter is only set for `text` type tracks. Max 255 characters."},"status":{"type":"string","enum":["preparing","ready","errored","deleted"],"description":"The status of the track. This parameter is only set for `text` type tracks."},"primary":{"type":"boolean","description":"For an audio track, indicates that this is the primary audio track, ingested from the main input for this asset. The primary audio track cannot be deleted."},"asset_id":{"type":"string","description":"Unique identifier for the Asset. Max 255 characters."},"error":{"type":"object","description":"Object that describes any errors that happened when processing this asset.","properties":{"type":{"type":"string","description":"The type of error that occurred for this asset."},"messages":{"type":"array","description":"Error messages with more details.","items":{"type":"string"}}}}}},"attempts":{"type":"array","description":"Attempts for sending out the webhook event","items":{"type":"object","properties":{"webhook_id":{"type":"integer","description":"Unique identifier for the webhook"},"response_status_code":{"type":"integer","description":"HTTP response status code for the webhook attempt"},"response_headers":{"type":"object","description":"HTTP response headers for the webhook attempt"},"response_body":{"type":["string","null"],"description":"HTTP response body for the webhook attempt"},"max_attempts":{"description":"Max attempts number for the webhook attempt","type":"integer"},"id":{"description":"Unique identifier for the webhook attempt","type":"string"},"created_at":{"description":"Time the webhook request was attempted","type":"string","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"address":{"description":"URL address for the webhook attempt","type":"string"}}}},"request_id":{"type":["string","null"],"deprecated":true},"accessor":{"type":["string","null"],"deprecated":true},"accessor_source":{"type":["string","null"],"deprecated":true}},"required":["type","id","created_at","object","environment","data","attempts"]},"example":{"asset_id":"SqQnqz6s5MBuXGvJaUWdXuXM93J9Q2yv","closed_captions":true,"error":{"messages":["Error while downloading file: \\"https://example.com/myVIdeo_en.srt\\": \\"Download failed\\" "],"type":"download_failed"},"event_created_at":1655160738856,"id":"sY7b7fW01LImWpoOv2oiVROwHv5Y","language_code":"en-US","name":"English","passthrough":"English","status":"errored","text_source":"uploaded","text_type":"subtitles","type":"text"}},"video.asset.track.deleted":{"description":"A track for this asset has been deleted.","payload":{"type":"object","properties":{"type":{"type":"string","description":"Type for the webhook event"},"id":{"type":"string","description":"Unique identifier for the event"},"created_at":{"type":"string","description":"Time the event was created","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"object":{"type":"object","properties":{"type":{"type":"string"},"id":{"type":"string"}},"required":["type","id"]},"environment":{"type":"object","properties":{"name":{"type":"string","description":"Name for the environment"},"id":{"type":"string","description":"Unique identifier for the environment"}},"required":["name","id"]},"data":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier for the Track"},"type":{"type":"string","description":"The type of track","enum":["video","audio","text"]},"duration":{"type":"number","format":"double","description":"The duration in seconds of the track media. This parameter is not set for `text` type tracks. This field is optional and may not be set. The top level `duration` field of an asset will always be set."},"max_width":{"type":"integer","format":"int64","description":"The maximum width in pixels available for the track. Only set for the `video` type track."},"max_height":{"type":"integer","format":"int64","description":"The maximum height in pixels available for the track. Only set for the `video` type track."},"max_frame_rate":{"type":"number","format":"double","description":"The maximum frame rate available for the track. Only set for the `video` type track. This field may return `-1` if the frame rate of the input cannot be reliably determined."},"max_channels":{"type":"integer","format":"int64","description":"The maximum number of audio channels the track supports. Only set for the `audio` type track."},"max_channel_layout":{"type":"string","description":"Only set for the `audio` type track.","deprecated":true},"text_type":{"type":"string","enum":["subtitles"],"description":"This parameter is only set for `text` type tracks."},"text_source":{"type":"string","description":"The source of the text contained in a Track of type `text`. Valid `text_source`\\nvalues are listed below.\\n* `uploaded`: Tracks uploaded to Mux as caption or subtitle files using the Create Asset Track API.\\n* `embedded`: Tracks extracted from an embedded stream of CEA-608 closed captions.\\n* `generated_vod`: Tracks generated by automatic speech recognition on an on-demand asset.\\n* `generated_live`: Tracks generated by automatic speech recognition on a live stream configured with `generated_subtitles`. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\\n* `generated_live_final`: Tracks generated by automatic speech recognition on a live stream using `generated_subtitles`. The accuracy, timing, and formatting of these subtitles is improved compared to the corresponding `generated_live` tracks. However, `generated_live_final` tracks will not be available in `ready` status until the live stream ends. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\\n","enum":["uploaded","embedded","generated_live","generated_live_final","generated_vod"]},"language_code":{"type":"string","description":"The language code value represents [BCP 47](https://tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is only set for `text` and `audio` track types."},"name":{"type":"string","description":"The name of the track containing a human-readable description. The HLS manifest will associate a subtitle `text` or `audio` track with this value. For example, the value should be \\"English\\" for a subtitle text track for the `language_code` value of `en-US`. This parameter is only set for `text` and `audio` track types."},"closed_captions":{"type":"boolean","description":"Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This parameter is only set tracks where `type` is `text` and `text_type` is `subtitles`."},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the track either when creating the asset or track. This parameter is only set for `text` type tracks. Max 255 characters."},"status":{"type":"string","enum":["preparing","ready","errored","deleted"],"description":"The status of the track. This parameter is only set for `text` type tracks."},"primary":{"type":"boolean","description":"For an audio track, indicates that this is the primary audio track, ingested from the main input for this asset. The primary audio track cannot be deleted."},"asset_id":{"type":"string","description":"Unique identifier for the Asset. Max 255 characters."},"error":{"type":"object","description":"Object that describes any errors that happened when processing this asset.","properties":{"type":{"type":"string","description":"The type of error that occurred for this asset."},"messages":{"type":"array","description":"Error messages with more details.","items":{"type":"string"}}}}}},"attempts":{"type":"array","description":"Attempts for sending out the webhook event","items":{"type":"object","properties":{"webhook_id":{"type":"integer","description":"Unique identifier for the webhook"},"response_status_code":{"type":"integer","description":"HTTP response status code for the webhook attempt"},"response_headers":{"type":"object","description":"HTTP response headers for the webhook attempt"},"response_body":{"type":["string","null"],"description":"HTTP response body for the webhook attempt"},"max_attempts":{"description":"Max attempts number for the webhook attempt","type":"integer"},"id":{"description":"Unique identifier for the webhook attempt","type":"string"},"created_at":{"description":"Time the webhook request was attempted","type":"string","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"address":{"description":"URL address for the webhook attempt","type":"string"}}}},"request_id":{"type":["string","null"],"deprecated":true},"accessor":{"type":["string","null"],"deprecated":true},"accessor_source":{"type":["string","null"],"deprecated":true}},"required":["type","id","created_at","object","environment","data","attempts"]},"example":{"asset_id":"SqQnqz6s5MBuXGvJaUWdXuXM93J9Q2yv","closed_captions":true,"event_created_at":1655160817172,"id":"sY7b7fW01LImWpoOv2oiVROwHv5Y","language_code":"en-US","name":"English","passthrough":"English","status":"deleted","text_source":"uploaded","text_type":"subtitles","type":"text"}},"video.asset.warning":{"description":"This event fires when Mux has encountered a non-fatal issue with the recorded asset of the live stream. At this time, the event is only fired when Mux is unable to download a slate image from the URL set as `reconnect_slate_url` parameter value.","payload":{"type":"object","properties":{"type":{"type":"string","description":"Type for the webhook event"},"id":{"type":"string","description":"Unique identifier for the event"},"created_at":{"type":"string","description":"Time the event was created","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"object":{"type":"object","properties":{"type":{"type":"string"},"id":{"type":"string"}},"required":["type","id"]},"environment":{"type":"object","properties":{"name":{"type":"string","description":"Name for the environment"},"id":{"type":"string","description":"Unique identifier for the environment"}},"required":["name","id"]},"data":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier for the Asset. Max 255 characters."},"live_stream_id":{"type":"string","description":"Unique identifier for the live stream. This is an optional parameter added when the asset is created from a live stream."},"source_asset_id":{"type":"string","description":"Asset Identifier of the video used as the source for creating the clip."},"upload_id":{"type":"string","description":"Unique identifier for the Direct Upload. This is an optional parameter added when the asset is created from a direct upload."},"status":{"type":"string","enum":["preparing","ready","errored"],"description":"The status of the asset."},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the asset. Max 255 characters."},"warning":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"string"}}}}},"attempts":{"type":"array","description":"Attempts for sending out the webhook event","items":{"type":"object","properties":{"webhook_id":{"type":"integer","description":"Unique identifier for the webhook"},"response_status_code":{"type":"integer","description":"HTTP response status code for the webhook attempt"},"response_headers":{"type":"object","description":"HTTP response headers for the webhook attempt"},"response_body":{"type":["string","null"],"description":"HTTP response body for the webhook attempt"},"max_attempts":{"description":"Max attempts number for the webhook attempt","type":"integer"},"id":{"description":"Unique identifier for the webhook attempt","type":"string"},"created_at":{"description":"Time the webhook request was attempted","type":"string","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"address":{"description":"URL address for the webhook attempt","type":"string"}}}},"request_id":{"type":["string","null"],"deprecated":true},"accessor":{"type":["string","null"],"deprecated":true},"accessor_source":{"type":["string","null"],"deprecated":true}},"required":["type","id","created_at","object","environment","data","attempts"]},"example":{"aspect_ratio":"9:16","created_at":1640303278,"duration":40.742667,"id":"SqQnqz6s5MBuXGvJaUWdXuXM93J9Q2yv","master":{"status":"preparing"},"master_access":"temporary","max_stored_frame_rate":30,"max_stored_resolution":"HD","resolution_tier":"1080p","mp4_support":"standard","non_standard_input_reasons":{"audio_edit_list":"non-standard","video_bitrate":"high"},"normalize_audio":true,"passthrough":"mux","playback_ids":[{"id":"uNbxnGLKJ00yfbijDO8COxTOyVKT01xpxW","policy":"public"}],"static_renditions":{"status":"preparing"},"status":"ready","tracks":[{"duration":40.698345,"id":"gOTREyHBwIYUeh5BHrb02mTQoed00ql00qN6yIz1tiSLhs","max_channel_layout":"stereo","max_channels":2,"type":"audio"},{"duration":40.7,"id":"H89f5TImPlNFAYQrw02OUfcyMRk74rORgX6wNS3mdPeM","max_frame_rate":30,"max_height":1920,"max_width":1080,"type":"video"}],"upload_id":"02lwELKbWGfLPJoIphk402f9btcHwBwVJ8Bo02MPrxyFi"}},"video.asset.non_standard_input_detected":{"description":"This event fires when Mux has detected that an input for an asset does not conform to our standard input specification. Non-standard assets take longer to process as they have to be transcoded before publication. The `data.non_standard_input_reasons` field contains details of why this specific input is non-standard. [See the minimize processing time guide for more details.](https://docs.mux.com/guides/minimize-processing-time)","payload":{"type":"object","properties":{"type":{"type":"string","description":"Type for the webhook event"},"id":{"type":"string","description":"Unique identifier for the event"},"created_at":{"type":"string","description":"Time the event was created","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"object":{"type":"object","properties":{"type":{"type":"string"},"id":{"type":"string"}},"required":["type","id"]},"environment":{"type":"object","properties":{"name":{"type":"string","description":"Name for the environment"},"id":{"type":"string","description":"Unique identifier for the environment"}},"required":["name","id"]},"data":{"type":"object","x-required":["id","created_at","status","max_resolution_tier","encoding_tier","mp4_support","master_access"],"properties":{"id":{"type":"string","description":"Unique identifier for the Asset. Max 255 characters."},"created_at":{"type":"integer","format":"int32"},"status":{"type":"string","enum":["preparing","ready","errored"],"description":"The status of the asset."},"duration":{"type":"number","format":"double","description":"The duration of the asset in seconds (max duration for a single asset is 12 hours)."},"max_stored_resolution":{"type":"string","enum":["Audio only","SD","HD","FHD","UHD"],"description":"This field is deprecated. Please use `resolution_tier` instead. The maximum resolution that has been stored for the asset. The asset may be delivered at lower resolutions depending on the device and bandwidth, however it cannot be delivered at a higher value than is stored.","deprecated":true},"resolution_tier":{"type":"string","enum":["audio-only","720p","1080p","1440p","2160p"],"description":"The resolution tier that the asset was ingested at, affecting billing for ingest & storage. This field also represents the highest resolution tier that the content can be delivered at, however the actual resolution may be lower depending on the device, bandwidth, and exact resolution of the uploaded asset."},"max_resolution_tier":{"type":"string","enum":["1080p","1440p","2160p"],"description":"Max resolution tier can be used to control the maximum `resolution_tier` your asset is encoded, stored, and streamed at. If not set, this defaults to `1080p`."},"encoding_tier":{"type":"string","deprecated":true,"enum":["smart","baseline","premium"],"description":"This field is deprecated. Please use `video_quality` instead. The encoding tier informs the cost, quality, and available platform features for the asset. The default encoding tier for an account can be set in the Mux Dashboard. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"video_quality":{"type":"string","enum":["basic","plus","premium"],"description":"The video quality controls the cost, quality, and available platform features for the asset. The default video quality for an account can be set in the Mux Dashboard. This field replaces the deprecated `encoding_tier` value. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"max_stored_frame_rate":{"type":"number","format":"double","description":"The maximum frame rate that has been stored for the asset. The asset may be delivered at lower frame rates depending on the device and bandwidth, however it cannot be delivered at a higher value than is stored. This field may return -1 if the frame rate of the input cannot be reliably determined."},"aspect_ratio":{"type":"string","description":"The aspect ratio of the asset in the form of `width:height`, for example `16:9`."},"playback_ids":{"type":"array","description":"An array of Playback ID objects. Use these to create HLS playback URLs. See [Play your videos](https://docs.mux.com/guides/play-your-videos) for more details.","items":{"type":"object","x-required":["id","policy"],"properties":{"id":{"type":"string","description":"Unique identifier for the PlaybackID"},"policy":{"type":"string","enum":["public","signed","drm"],"description":"* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\\n\\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](https://docs.mux.com/guides/secure-video-playback) for details about creating tokens.\\n\\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](https://docs.mux.com/guides/protect-videos-with-drm).\\n"},"drm_configuration_id":{"type":"string","description":"The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."}}}},"tracks":{"type":"array","description":"The individual media tracks that make up an asset.","items":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier for the Track"},"type":{"type":"string","description":"The type of track","enum":["video","audio","text"]},"duration":{"type":"number","format":"double","description":"The duration in seconds of the track media. This parameter is not set for `text` type tracks. This field is optional and may not be set. The top level `duration` field of an asset will always be set."},"max_width":{"type":"integer","format":"int64","description":"The maximum width in pixels available for the track. Only set for the `video` type track."},"max_height":{"type":"integer","format":"int64","description":"The maximum height in pixels available for the track. Only set for the `video` type track."},"max_frame_rate":{"type":"number","format":"double","description":"The maximum frame rate available for the track. Only set for the `video` type track. This field may return `-1` if the frame rate of the input cannot be reliably determined."},"max_channels":{"type":"integer","format":"int64","description":"The maximum number of audio channels the track supports. Only set for the `audio` type track."},"max_channel_layout":{"type":"string","description":"Only set for the `audio` type track.","deprecated":true},"text_type":{"type":"string","enum":["subtitles"],"description":"This parameter is only set for `text` type tracks."},"text_source":{"type":"string","description":"The source of the text contained in a Track of type `text`. Valid `text_source`\\nvalues are listed below.\\n* `uploaded`: Tracks uploaded to Mux as caption or subtitle files using the Create Asset Track API.\\n* `embedded`: Tracks extracted from an embedded stream of CEA-608 closed captions.\\n* `generated_vod`: Tracks generated by automatic speech recognition on an on-demand asset.\\n* `generated_live`: Tracks generated by automatic speech recognition on a live stream configured with `generated_subtitles`. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\\n* `generated_live_final`: Tracks generated by automatic speech recognition on a live stream using `generated_subtitles`. The accuracy, timing, and formatting of these subtitles is improved compared to the corresponding `generated_live` tracks. However, `generated_live_final` tracks will not be available in `ready` status until the live stream ends. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\\n","enum":["uploaded","embedded","generated_live","generated_live_final","generated_vod"]},"language_code":{"type":"string","description":"The language code value represents [BCP 47](https://tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is only set for `text` and `audio` track types."},"name":{"type":"string","description":"The name of the track containing a human-readable description. The HLS manifest will associate a subtitle `text` or `audio` track with this value. For example, the value should be \\"English\\" for a subtitle text track for the `language_code` value of `en-US`. This parameter is only set for `text` and `audio` track types."},"closed_captions":{"type":"boolean","description":"Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This parameter is only set tracks where `type` is `text` and `text_type` is `subtitles`."},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the track either when creating the asset or track. This parameter is only set for `text` type tracks. Max 255 characters."},"status":{"type":"string","enum":["preparing","ready","errored","deleted"],"description":"The status of the track. This parameter is only set for `text` type tracks."},"primary":{"type":"boolean","description":"For an audio track, indicates that this is the primary audio track, ingested from the main input for this asset. The primary audio track cannot be deleted."},"error":{"type":"object","description":"Object that describes any errors that happened when processing this asset.","properties":{"type":{"type":"string","description":"The type of error that occurred for this asset."},"messages":{"type":"array","description":"Error messages with more details.","items":{"type":"string"}}}}}}},"errors":{"type":"object","description":"Object that describes any errors that happened when processing this asset.","properties":{"type":{"type":"string","description":"The type of error that occurred for this asset."},"messages":{"type":"array","description":"Error messages with more details.","items":{"type":"string"}}}},"per_title_encode":{"type":"boolean","format":"boolean","x-mux-doc-decorators":["hidden"],"deprecated":true},"upload_id":{"type":"string","description":"Unique identifier for the Direct Upload. This is an optional parameter added when the asset is created from a direct upload."},"is_live":{"type":"boolean","format":"boolean","description":"Indicates whether the live stream that created this asset is currently `active` and not in `idle` state. This is an optional parameter added when the asset is created from a live stream."},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the asset. Max 255 characters."},"live_stream_id":{"type":"string","description":"Unique identifier for the live stream. This is an optional parameter added when the asset is created from a live stream."},"master":{"type":"object","description":"An object containing the current status of Master Access and the link to the Master MP4 file when ready. This object does not exist if `master_access` is set to `none` and when the temporary URL expires.","properties":{"status":{"enum":["ready","preparing","errored"],"type":"string"},"url":{"type":"string","description":"The temporary URL to the master version of the video, as an MP4 file. This URL will expire after 24 hours."}}},"master_access":{"type":"string","enum":["temporary","none"],"default":"none"},"mp4_support":{"type":"string","default":"none","enum":["standard","none","capped-1080p","audio-only","audio-only,capped-1080p"],"x-mux-doc-decorators-deprecated-enum-values":["standard"]},"source_asset_id":{"type":"string","description":"Asset Identifier of the video used as the source for creating the clip."},"normalize_audio":{"type":"boolean","default":false,"description":"Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets."},"static_renditions":{"type":"object","description":"An object containing the current status of any static renditions (mp4s). The object does not exist if no static renditions have been requested. See [Download your videos](https://docs.mux.com/guides/enable-static-mp4-renditions) for more information.","properties":{"status":{"type":"string","default":"disabled","description":"Indicates the status of downloadable MP4 versions of this asset.","enum":["ready","preparing","disabled","errored"]},"files":{"type":"array","description":"Array of file objects.","items":{"type":"object","properties":{"name":{"type":"string","enum":["low.mp4","medium.mp4","high.mp4","audio.m4a","capped-1080p.mp4"]},"ext":{"type":"string","description":"Extension of the static rendition file","enum":["mp4","m4a"]},"height":{"type":"integer","format":"int32","description":"The height of the static rendition\'s file in pixels"},"width":{"type":"integer","format":"int32","description":"The width of the static rendition\'s file in pixels"},"bitrate":{"type":"integer","format":"int64","description":"The bitrate in bits per second"},"filesize":{"type":"integer","format":"int64","description":"The file size in bytes"}}}}}},"recording_times":{"type":"array","description":"An array of individual live stream recording sessions. A recording session is created on each encoder connection during the live stream. Additionally any time slate media is inserted during brief interruptions in the live stream media or times when the live streaming software disconnects, a recording session representing the slate media will be added with a \\"slate\\" type.","items":{"type":"object","properties":{"started_at":{"type":"object","properties":{"nanos":{"format":"int32","type":"integer"},"seconds":{"format":"int32","type":"integer"}},"required":["seconds"]},"duration":{"type":"number","format":"double","description":"The duration of the live stream recorded. The time value is in seconds."},"type":{"type":"string","enum":["content","slate"],"description":"The type of media represented by the recording session, either `content` for normal stream content or `slate` for slate media inserted during stream interruptions."}}}},"non_standard_input_reasons":{"type":"object","description":"An object containing one or more reasons the input file is non-standard. See [the guide on minimizing processing time](https://docs.mux.com/guides/minimize-processing-time) for more information on what a standard input is defined as. This object only exists on on-demand assets that have non-standard inputs, so if missing you can assume the input qualifies as standard.","properties":{"video_codec":{"type":"string","description":"The video codec used on the input file. For example, the input file encoded with `hevc` video codec is non-standard and the value of this parameter is `hevc`."},"audio_codec":{"type":"string","description":"The audio codec used on the input file. Non-AAC audio codecs are non-standard."},"video_gop_size":{"type":"string","enum":["high"],"description":"The video key frame Interval (also called as Group of Picture or GOP) of the input file is `high`. This parameter is present when the gop is greater than 20 seconds."},"video_frame_rate":{"type":"string","description":"The video frame rate of the input file. Video with average frames per second (fps) less than 5 or greater than 120 is non-standard. A `-1` frame rate value indicates Mux could not determine the frame rate of the video track."},"video_resolution":{"type":"string","description":"The video resolution of the input file. Video resolution higher than 2048 pixels on any one dimension (height or width) is considered non-standard, The resolution value is presented as `width` x `height` in pixels."},"video_bitrate":{"type":"string","enum":["high"],"description":"The video bitrate of the input file is `high`. This parameter is present when the average bitrate of any key frame interval (also known as Group of Pictures or GOP) is higher than what\'s considered standard which typically is 16 Mbps."},"pixel_aspect_ratio":{"type":"string","description":"The video pixel aspect ratio of the input file."},"video_edit_list":{"type":"string","enum":["non-standard"],"description":"Video Edit List reason indicates that the input file\'s video track contains a complex Edit Decision List."},"audio_edit_list":{"type":"string","enum":["non-standard"],"description":"Audio Edit List reason indicates that the input file\'s audio track contains a complex Edit Decision List."},"unexpected_media_file_parameters":{"type":"string","enum":["non-standard"],"description":"A catch-all reason when the input file in created with non-standard encoding parameters."},"unsupported_pixel_format":{"type":"string","description":"The video pixel format, as a string, returned by libav. Considered non-standard if not one of yuv420p or yuvj420p."},"unexpected_video_parameters":{"type":"string"}}},"test":{"type":"boolean","format":"boolean","description":"True means this live stream is a test asset. A test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test assets are watermarked with the Mux logo, limited to 10 seconds, and deleted after 24 hrs."},"ingest_type":{"type":"string","enum":["on_demand_url","on_demand_direct_upload","on_demand_clip","live_rtmp","live_srt"],"description":"The type of ingest used to create the asset."}}},"attempts":{"type":"array","description":"Attempts for sending out the webhook event","items":{"type":"object","properties":{"webhook_id":{"type":"integer","description":"Unique identifier for the webhook"},"response_status_code":{"type":"integer","description":"HTTP response status code for the webhook attempt"},"response_headers":{"type":"object","description":"HTTP response headers for the webhook attempt"},"response_body":{"type":["string","null"],"description":"HTTP response body for the webhook attempt"},"max_attempts":{"description":"Max attempts number for the webhook attempt","type":"integer"},"id":{"description":"Unique identifier for the webhook attempt","type":"string"},"created_at":{"description":"Time the webhook request was attempted","type":"string","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"address":{"description":"URL address for the webhook attempt","type":"string"}}}},"request_id":{"type":["string","null"],"deprecated":true},"accessor":{"type":["string","null"],"deprecated":true},"accessor_source":{"type":["string","null"],"deprecated":true}},"required":["type","id","created_at","object","environment","data","attempts"]},"example":{"created_at":1642055725,"id":"SqQnqz6s5MBuXGvJaUWdXuXM93J9Q2yv","master_access":"none","mp4_support":"none","passthrough":"mux","playback_ids":[{"id":"uNbxnGLKJ00yfbijDO8COxTOyVKT01xpxW","policy":"public"}],"status":"preparing","non_standard_input_reasons":{"audio_edit_list":"non-standard","video_bitrate":"high"}}},"video.upload.asset_created":{"description":"An asset has been created from this upload. This is useful to know what a user of your application has finished uploading a file using the URL created by a Direct Upload.","payload":{"type":"object","properties":{"type":{"type":"string","description":"Type for the webhook event"},"id":{"type":"string","description":"Unique identifier for the event"},"created_at":{"type":"string","description":"Time the event was created","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"object":{"type":"object","properties":{"type":{"type":"string"},"id":{"type":"string"}},"required":["type","id"]},"environment":{"type":"object","properties":{"name":{"type":"string","description":"Name for the environment"},"id":{"type":"string","description":"Unique identifier for the environment"}},"required":["name","id"]},"data":{"type":"object","x-required":["id","url","timeout","status","cors_origin"],"properties":{"id":{"type":"string","description":"Unique identifier for the Direct Upload."},"timeout":{"type":"integer","format":"int32","default":3600,"minimum":60,"maximum":604800,"description":"Max time in seconds for the signed upload URL to be valid. If a successful upload has not occurred before the timeout limit, the direct upload is marked `timed_out`"},"status":{"type":"string","enum":["waiting","asset_created","errored","cancelled","timed_out"]},"new_asset_settings":{"type":"object","x-required":["id","created_at","status","max_resolution_tier","encoding_tier","mp4_support","master_access"],"properties":{"id":{"type":"string","description":"Unique identifier for the Asset. Max 255 characters."},"created_at":{"type":"string","format":"int64","description":"Time the Asset was created, defined as a Unix timestamp (seconds since epoch)."},"status":{"type":"string","enum":["preparing","ready","errored"],"description":"The status of the asset."},"duration":{"type":"number","format":"double","description":"The duration of the asset in seconds (max duration for a single asset is 12 hours)."},"max_stored_resolution":{"type":"string","enum":["Audio only","SD","HD","FHD","UHD"],"description":"This field is deprecated. Please use `resolution_tier` instead. The maximum resolution that has been stored for the asset. The asset may be delivered at lower resolutions depending on the device and bandwidth, however it cannot be delivered at a higher value than is stored.","deprecated":true},"resolution_tier":{"type":"string","enum":["audio-only","720p","1080p","1440p","2160p"],"description":"The resolution tier that the asset was ingested at, affecting billing for ingest & storage. This field also represents the highest resolution tier that the content can be delivered at, however the actual resolution may be lower depending on the device, bandwidth, and exact resolution of the uploaded asset."},"max_resolution_tier":{"type":"string","enum":["1080p","1440p","2160p"],"description":"Max resolution tier can be used to control the maximum `resolution_tier` your asset is encoded, stored, and streamed at. If not set, this defaults to `1080p`."},"encoding_tier":{"type":"string","deprecated":true,"enum":["smart","baseline","premium"],"description":"This field is deprecated. Please use `video_quality` instead. The encoding tier informs the cost, quality, and available platform features for the asset. The default encoding tier for an account can be set in the Mux Dashboard. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"video_quality":{"type":"string","enum":["basic","plus","premium"],"description":"The video quality controls the cost, quality, and available platform features for the asset. The default video quality for an account can be set in the Mux Dashboard. This field replaces the deprecated `encoding_tier` value. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"max_stored_frame_rate":{"type":"number","format":"double","description":"The maximum frame rate that has been stored for the asset. The asset may be delivered at lower frame rates depending on the device and bandwidth, however it cannot be delivered at a higher value than is stored. This field may return -1 if the frame rate of the input cannot be reliably determined."},"aspect_ratio":{"type":"string","description":"The aspect ratio of the asset in the form of `width:height`, for example `16:9`."},"playback_ids":{"type":"array","description":"An array of Playback ID objects. Use these to create HLS playback URLs. See [Play your videos](https://docs.mux.com/guides/play-your-videos) for more details.","items":{"type":"object","x-required":["id","policy"],"properties":{"id":{"type":"string","description":"Unique identifier for the PlaybackID"},"policy":{"type":"string","enum":["public","signed","drm"],"description":"* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\\n\\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](https://docs.mux.com/guides/secure-video-playback) for details about creating tokens.\\n\\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](https://docs.mux.com/guides/protect-videos-with-drm).\\n"},"drm_configuration_id":{"type":"string","description":"The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."}}}},"tracks":{"type":"array","description":"The individual media tracks that make up an asset.","items":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier for the Track"},"type":{"type":"string","description":"The type of track","enum":["video","audio","text"]},"duration":{"type":"number","format":"double","description":"The duration in seconds of the track media. This parameter is not set for `text` type tracks. This field is optional and may not be set. The top level `duration` field of an asset will always be set."},"max_width":{"type":"integer","format":"int64","description":"The maximum width in pixels available for the track. Only set for the `video` type track."},"max_height":{"type":"integer","format":"int64","description":"The maximum height in pixels available for the track. Only set for the `video` type track."},"max_frame_rate":{"type":"number","format":"double","description":"The maximum frame rate available for the track. Only set for the `video` type track. This field may return `-1` if the frame rate of the input cannot be reliably determined."},"max_channels":{"type":"integer","format":"int64","description":"The maximum number of audio channels the track supports. Only set for the `audio` type track."},"max_channel_layout":{"type":"string","description":"Only set for the `audio` type track.","deprecated":true},"text_type":{"type":"string","enum":["subtitles"],"description":"This parameter is only set for `text` type tracks."},"text_source":{"type":"string","description":"The source of the text contained in a Track of type `text`. Valid `text_source`\\nvalues are listed below.\\n* `uploaded`: Tracks uploaded to Mux as caption or subtitle files using the Create Asset Track API.\\n* `embedded`: Tracks extracted from an embedded stream of CEA-608 closed captions.\\n* `generated_vod`: Tracks generated by automatic speech recognition on an on-demand asset.\\n* `generated_live`: Tracks generated by automatic speech recognition on a live stream configured with `generated_subtitles`. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\\n* `generated_live_final`: Tracks generated by automatic speech recognition on a live stream using `generated_subtitles`. The accuracy, timing, and formatting of these subtitles is improved compared to the corresponding `generated_live` tracks. However, `generated_live_final` tracks will not be available in `ready` status until the live stream ends. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\\n","enum":["uploaded","embedded","generated_live","generated_live_final","generated_vod"]},"language_code":{"type":"string","description":"The language code value represents [BCP 47](https://tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is only set for `text` and `audio` track types."},"name":{"type":"string","description":"The name of the track containing a human-readable description. The HLS manifest will associate a subtitle `text` or `audio` track with this value. For example, the value should be \\"English\\" for a subtitle text track for the `language_code` value of `en-US`. This parameter is only set for `text` and `audio` track types."},"closed_captions":{"type":"boolean","description":"Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This parameter is only set tracks where `type` is `text` and `text_type` is `subtitles`."},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the track either when creating the asset or track. This parameter is only set for `text` type tracks. Max 255 characters."},"status":{"type":"string","enum":["preparing","ready","errored","deleted"],"description":"The status of the track. This parameter is only set for `text` type tracks."},"primary":{"type":"boolean","description":"For an audio track, indicates that this is the primary audio track, ingested from the main input for this asset. The primary audio track cannot be deleted."}}}},"errors":{"type":"object","description":"Object that describes any errors that happened when processing this asset.","properties":{"type":{"type":"string","description":"The type of error that occurred for this asset."},"messages":{"type":"array","description":"Error messages with more details.","items":{"type":"string"}}}},"per_title_encode":{"type":"boolean","format":"boolean","x-mux-doc-decorators":["hidden"],"deprecated":true},"upload_id":{"type":"string","description":"Unique identifier for the Direct Upload. This is an optional parameter added when the asset is created from a direct upload."},"is_live":{"type":"boolean","format":"boolean","description":"Indicates whether the live stream that created this asset is currently `active` and not in `idle` state. This is an optional parameter added when the asset is created from a live stream."},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the asset. Max 255 characters."},"live_stream_id":{"type":"string","description":"Unique identifier for the live stream. This is an optional parameter added when the asset is created from a live stream."},"master":{"type":"object","description":"An object containing the current status of Master Access and the link to the Master MP4 file when ready. This object does not exist if `master_access` is set to `none` and when the temporary URL expires.","properties":{"status":{"enum":["ready","preparing","errored"],"type":"string"},"url":{"type":"string","description":"The temporary URL to the master version of the video, as an MP4 file. This URL will expire after 24 hours."}}},"master_access":{"type":"string","enum":["temporary","none"],"default":"none"},"mp4_support":{"type":"string","default":"none","enum":["standard","none","capped-1080p","audio-only","audio-only,capped-1080p"],"x-mux-doc-decorators-deprecated-enum-values":["standard"]},"source_asset_id":{"type":"string","description":"Asset Identifier of the video used as the source for creating the clip."},"normalize_audio":{"type":"boolean","default":false,"description":"Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets."},"static_renditions":{"type":"object","description":"An object containing the current status of any static renditions (mp4s). The object does not exist if no static renditions have been requested. See [Download your videos](https://docs.mux.com/guides/enable-static-mp4-renditions) for more information.","properties":{"status":{"type":"string","default":"disabled","description":"Indicates the status of downloadable MP4 versions of this asset.","enum":["ready","preparing","disabled","errored"]},"files":{"type":"array","description":"Array of file objects.","items":{"type":"object","properties":{"name":{"type":"string","enum":["low.mp4","medium.mp4","high.mp4","audio.m4a","capped-1080p.mp4"]},"ext":{"type":"string","description":"Extension of the static rendition file","enum":["mp4","m4a"]},"height":{"type":"integer","format":"int32","description":"The height of the static rendition\'s file in pixels"},"width":{"type":"integer","format":"int32","description":"The width of the static rendition\'s file in pixels"},"bitrate":{"type":"integer","format":"int64","description":"The bitrate in bits per second"},"filesize":{"type":"string","format":"int64","description":"The file size in bytes"}}}}}},"recording_times":{"type":"array","description":"An array of individual live stream recording sessions. A recording session is created on each encoder connection during the live stream. Additionally any time slate media is inserted during brief interruptions in the live stream media or times when the live streaming software disconnects, a recording session representing the slate media will be added with a \\"slate\\" type.","items":{"type":"object","properties":{"started_at":{"type":"string","format":"date-time","description":"The time at which the recording for the live stream started. The time value is Unix epoch time represented in ISO 8601 format."},"duration":{"type":"number","format":"double","description":"The duration of the live stream recorded. The time value is in seconds."},"type":{"type":"string","enum":["content","slate"],"description":"The type of media represented by the recording session, either `content` for normal stream content or `slate` for slate media inserted during stream interruptions."}}}},"non_standard_input_reasons":{"type":"object","description":"An object containing one or more reasons the input file is non-standard. See [the guide on minimizing processing time](https://docs.mux.com/guides/minimize-processing-time) for more information on what a standard input is defined as. This object only exists on on-demand assets that have non-standard inputs, so if missing you can assume the input qualifies as standard.","properties":{"video_codec":{"type":"string","description":"The video codec used on the input file. For example, the input file encoded with `hevc` video codec is non-standard and the value of this parameter is `hevc`."},"audio_codec":{"type":"string","description":"The audio codec used on the input file. Non-AAC audio codecs are non-standard."},"video_gop_size":{"type":"string","enum":["high"],"description":"The video key frame Interval (also called as Group of Picture or GOP) of the input file is `high`. This parameter is present when the gop is greater than 20 seconds."},"video_frame_rate":{"type":"string","description":"The video frame rate of the input file. Video with average frames per second (fps) less than 5 or greater than 120 is non-standard. A `-1` frame rate value indicates Mux could not determine the frame rate of the video track."},"video_resolution":{"type":"string","description":"The video resolution of the input file. Video resolution higher than 2048 pixels on any one dimension (height or width) is considered non-standard, The resolution value is presented as `width` x `height` in pixels."},"video_bitrate":{"type":"string","enum":["high"],"description":"The video bitrate of the input file is `high`. This parameter is present when the average bitrate of any key frame interval (also known as Group of Pictures or GOP) is higher than what\'s considered standard which typically is 16 Mbps."},"pixel_aspect_ratio":{"type":"string","description":"The video pixel aspect ratio of the input file."},"video_edit_list":{"type":"string","enum":["non-standard"],"description":"Video Edit List reason indicates that the input file\'s video track contains a complex Edit Decision List."},"audio_edit_list":{"type":"string","enum":["non-standard"],"description":"Audio Edit List reason indicates that the input file\'s audio track contains a complex Edit Decision List."},"unexpected_media_file_parameters":{"type":"string","enum":["non-standard"],"description":"A catch-all reason when the input file in created with non-standard encoding parameters."},"unsupported_pixel_format":{"type":"string","description":"The video pixel format, as a string, returned by libav. Considered non-standard if not one of yuv420p or yuvj420p."}}},"test":{"type":"boolean","format":"boolean","description":"True means this live stream is a test asset. A test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test assets are watermarked with the Mux logo, limited to 10 seconds, and deleted after 24 hrs."},"ingest_type":{"type":"string","enum":["on_demand_url","on_demand_direct_upload","on_demand_clip","live_rtmp","live_srt"],"description":"The type of ingest used to create the asset."},"playback_policies":{"type":"array","items":{"type":"string","enum":["public","signed","drm"],"description":"* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\\n\\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](https://docs.mux.com/guides/secure-video-playback) for details about creating tokens.\\n\\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](https://docs.mux.com/guides/protect-videos-with-drm).\\n"},"description":"An array of playback policy names that you want applied to this asset and available through `playback_ids`. Options include: `\\"public\\"` (anyone with the playback URL can stream the asset). And `\\"signed\\"` (an additional access token is required to play the asset). If no playback_policy is set, the asset will have no playback IDs and will therefore not be playable. For simplicity, a single string name can be used in place of the array in the case of only one playback policy."},"inputs":{"type":"array","description":"An array of objects that each describe an input file to be used to create the asset. As a shortcut, input can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.","items":{"type":"object","description":"An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.","properties":{"url":{"type":"string","description":"The URL of the file that Mux should download and use.\\n* For the main input file, this should be the URL to the muxed file for Mux to download, for example an MP4, MOV, MKV, or TS file. Mux supports most audio/video file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](https://docs.mux.com/guides/minimize-processing-time).\\n* For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](https://docs.mux.com/guides/minimize-processing-time).\\n* For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](https://en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](https://www.w3.org/TR/webvtt1/) formats for ingesting Subtitles and Closed Captions.\\n* For Watermarking or Overlay, the URL is the location of the watermark image. The maximum size is 4096x4096.\\n* When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.\\nThe url property may be omitted on the first input object when providing asset settings for LiveStream and Upload objects, in order to configure settings related to the primary (live stream or direct upload) input.\\n"},"overlay_settings":{"type":"object","description":"An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.","properties":{"vertical_align":{"type":"string","enum":["top","middle","bottom"],"description":"Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\\"top\\"`"},"vertical_margin":{"type":"string","description":"The distance from the vertical_align starting point and the image\'s closest edge. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). Negative values will move the overlay offscreen. In the case of \'middle\', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top."},"horizontal_align":{"type":"string","enum":["left","center","right"],"description":"Where the horizontal positioning of the overlay/watermark should begin from."},"horizontal_margin":{"type":"string","description":"The distance from the horizontal_align starting point and the image\'s closest edge. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). Negative values will move the overlay offscreen. In the case of \'center\', a positive value will shift the image towards the right and and a negative value will shift it towards the left."},"width":{"type":"string","description":"How wide the overlay should appear. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height."},"height":{"type":"string","description":"How tall the overlay should appear. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width."},"opacity":{"type":"string","description":"How opaque the overlay should appear, expressed as a percent. (Default 100%)"}}},"generated_subtitles":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"A name for this subtitle track."},"passthrough":{"type":"string","description":"Arbitrary metadata set for the subtitle track. Max 255 characters."},"language_code":{"type":"string","description":"The language to generate subtitles in.","default":"en","enum":["en","es","it","pt","de","fr","pl","ru","nl","ca","tr","sv","uk","no","fi","sk","el","cs","hr","da","ro","bg"]}}},"description":"Generate subtitle tracks using automatic speech recognition with this configuration. This may only be provided for the first input object (the main input file). For direct uploads, this first input should omit the url parameter, as the main input file is provided via the direct upload. This will create subtitles based on the audio track ingested from that main input file. Note that subtitle generation happens after initial ingest, so the generated tracks will be in the `preparing` state when the asset transitions to `ready`."},"start_time":{"type":"number","format":"double","description":"The time offset in seconds from the beginning of the video indicating the clip\'s starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."},"end_time":{"type":"number","format":"double","description":"The time offset in seconds from the beginning of the video, indicating the clip\'s ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."},"type":{"type":"string","enum":["video","audio","text"],"description":"This parameter is required for `text` type tracks."},"text_type":{"type":"string","enum":["subtitles"],"description":"Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](https://mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags/). This parameter is required for `text` type tracks."},"language_code":{"type":"string","description":"The language code value must be a valid [BCP 47](https://tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is required for `text` and `audio` track types."},"name":{"type":"string","description":"The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate a subtitle text track with this value. For example, the value should be \\"English\\" for a subtitle text track with `language_code` set to `en`. This optional parameter should be used only for `text` and `audio` type tracks. This parameter can be optionally provided for the first video input to denote the name of the muxed audio track if present. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value."},"closed_captions":{"type":"boolean","description":"Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."},"passthrough":{"type":"string","description":"This optional parameter should be used tracks with `type` of `text` and `text_type` set to `subtitles`."}}}}}},"asset_id":{"type":"string","description":"Only set once the upload is in the `asset_created` state."},"cors_origin":{"type":"string","description":"If the upload URL will be used in a browser, you must specify the origin in order for the signed URL to have the correct CORS headers."},"url":{"type":"string","description":"The URL to upload the associated source media to."},"test":{"type":"boolean","format":"boolean","description":"Indicates if this is a test Direct Upload, in which case the Asset that gets created will be a `test` Asset."}}},"attempts":{"type":"array","description":"Attempts for sending out the webhook event","items":{"type":"object","properties":{"webhook_id":{"type":"integer","description":"Unique identifier for the webhook"},"response_status_code":{"type":"integer","description":"HTTP response status code for the webhook attempt"},"response_headers":{"type":"object","description":"HTTP response headers for the webhook attempt"},"response_body":{"type":["string","null"],"description":"HTTP response body for the webhook attempt"},"max_attempts":{"description":"Max attempts number for the webhook attempt","type":"integer"},"id":{"description":"Unique identifier for the webhook attempt","type":"string"},"created_at":{"description":"Time the webhook request was attempted","type":"string","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"address":{"description":"URL address for the webhook attempt","type":"string"}}}},"request_id":{"type":["string","null"],"deprecated":true},"accessor":{"type":["string","null"],"deprecated":true},"accessor_source":{"type":["string","null"],"deprecated":true}},"required":["type","id","created_at","object","environment","data","attempts"]},"example":{"asset_id":"4n7ggJOKHHQazVfI5TYkm9j02x3DSCRQP00DgNAfLq","cors_origin":"*","event_created_at":1655160250043,"id":"vP9e5G9g2EaSx01aZyVtX0102mfdRJzUbkGveOfpaS","new_asset_settings":{"mp4_support":"standard","passthrough":"mux","playback_policies":["public"]},"status":"asset_created","timeout":3600}},"video.upload.cancelled":{"description":"Upload has been canceled. This event fires after hitting the cancel direct upload API.","payload":{"type":"object","properties":{"type":{"type":"string","description":"Type for the webhook event"},"id":{"type":"string","description":"Unique identifier for the event"},"created_at":{"type":"string","description":"Time the event was created","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"object":{"type":"object","properties":{"type":{"type":"string"},"id":{"type":"string"}},"required":["type","id"]},"environment":{"type":"object","properties":{"name":{"type":"string","description":"Name for the environment"},"id":{"type":"string","description":"Unique identifier for the environment"}},"required":["name","id"]},"data":{"type":"object","x-required":["id","url","timeout","status","cors_origin"],"properties":{"id":{"type":"string","description":"Unique identifier for the Direct Upload."},"timeout":{"type":"integer","format":"int32","default":3600,"minimum":60,"maximum":604800,"description":"Max time in seconds for the signed upload URL to be valid. If a successful upload has not occurred before the timeout limit, the direct upload is marked `timed_out`"},"status":{"type":"string","enum":["waiting","asset_created","errored","cancelled","timed_out"]},"new_asset_settings":{"type":"object","x-required":["id","created_at","status","max_resolution_tier","encoding_tier","mp4_support","master_access"],"properties":{"id":{"type":"string","description":"Unique identifier for the Asset. Max 255 characters."},"created_at":{"type":"string","format":"int64","description":"Time the Asset was created, defined as a Unix timestamp (seconds since epoch)."},"status":{"type":"string","enum":["preparing","ready","errored"],"description":"The status of the asset."},"duration":{"type":"number","format":"double","description":"The duration of the asset in seconds (max duration for a single asset is 12 hours)."},"max_stored_resolution":{"type":"string","enum":["Audio only","SD","HD","FHD","UHD"],"description":"This field is deprecated. Please use `resolution_tier` instead. The maximum resolution that has been stored for the asset. The asset may be delivered at lower resolutions depending on the device and bandwidth, however it cannot be delivered at a higher value than is stored.","deprecated":true},"resolution_tier":{"type":"string","enum":["audio-only","720p","1080p","1440p","2160p"],"description":"The resolution tier that the asset was ingested at, affecting billing for ingest & storage. This field also represents the highest resolution tier that the content can be delivered at, however the actual resolution may be lower depending on the device, bandwidth, and exact resolution of the uploaded asset."},"max_resolution_tier":{"type":"string","enum":["1080p","1440p","2160p"],"description":"Max resolution tier can be used to control the maximum `resolution_tier` your asset is encoded, stored, and streamed at. If not set, this defaults to `1080p`."},"encoding_tier":{"type":"string","deprecated":true,"enum":["smart","baseline","premium"],"description":"This field is deprecated. Please use `video_quality` instead. The encoding tier informs the cost, quality, and available platform features for the asset. The default encoding tier for an account can be set in the Mux Dashboard. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"video_quality":{"type":"string","enum":["basic","plus","premium"],"description":"The video quality controls the cost, quality, and available platform features for the asset. The default video quality for an account can be set in the Mux Dashboard. This field replaces the deprecated `encoding_tier` value. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"max_stored_frame_rate":{"type":"number","format":"double","description":"The maximum frame rate that has been stored for the asset. The asset may be delivered at lower frame rates depending on the device and bandwidth, however it cannot be delivered at a higher value than is stored. This field may return -1 if the frame rate of the input cannot be reliably determined."},"aspect_ratio":{"type":"string","description":"The aspect ratio of the asset in the form of `width:height`, for example `16:9`."},"playback_ids":{"type":"array","description":"An array of Playback ID objects. Use these to create HLS playback URLs. See [Play your videos](https://docs.mux.com/guides/play-your-videos) for more details.","items":{"type":"object","x-required":["id","policy"],"properties":{"id":{"type":"string","description":"Unique identifier for the PlaybackID"},"policy":{"type":"string","enum":["public","signed","drm"],"description":"* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\\n\\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](https://docs.mux.com/guides/secure-video-playback) for details about creating tokens.\\n\\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](https://docs.mux.com/guides/protect-videos-with-drm).\\n"},"drm_configuration_id":{"type":"string","description":"The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."}}}},"tracks":{"type":"array","description":"The individual media tracks that make up an asset.","items":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier for the Track"},"type":{"type":"string","description":"The type of track","enum":["video","audio","text"]},"duration":{"type":"number","format":"double","description":"The duration in seconds of the track media. This parameter is not set for `text` type tracks. This field is optional and may not be set. The top level `duration` field of an asset will always be set."},"max_width":{"type":"integer","format":"int64","description":"The maximum width in pixels available for the track. Only set for the `video` type track."},"max_height":{"type":"integer","format":"int64","description":"The maximum height in pixels available for the track. Only set for the `video` type track."},"max_frame_rate":{"type":"number","format":"double","description":"The maximum frame rate available for the track. Only set for the `video` type track. This field may return `-1` if the frame rate of the input cannot be reliably determined."},"max_channels":{"type":"integer","format":"int64","description":"The maximum number of audio channels the track supports. Only set for the `audio` type track."},"max_channel_layout":{"type":"string","description":"Only set for the `audio` type track.","deprecated":true},"text_type":{"type":"string","enum":["subtitles"],"description":"This parameter is only set for `text` type tracks."},"text_source":{"type":"string","description":"The source of the text contained in a Track of type `text`. Valid `text_source`\\nvalues are listed below.\\n* `uploaded`: Tracks uploaded to Mux as caption or subtitle files using the Create Asset Track API.\\n* `embedded`: Tracks extracted from an embedded stream of CEA-608 closed captions.\\n* `generated_vod`: Tracks generated by automatic speech recognition on an on-demand asset.\\n* `generated_live`: Tracks generated by automatic speech recognition on a live stream configured with `generated_subtitles`. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\\n* `generated_live_final`: Tracks generated by automatic speech recognition on a live stream using `generated_subtitles`. The accuracy, timing, and formatting of these subtitles is improved compared to the corresponding `generated_live` tracks. However, `generated_live_final` tracks will not be available in `ready` status until the live stream ends. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\\n","enum":["uploaded","embedded","generated_live","generated_live_final","generated_vod"]},"language_code":{"type":"string","description":"The language code value represents [BCP 47](https://tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is only set for `text` and `audio` track types."},"name":{"type":"string","description":"The name of the track containing a human-readable description. The HLS manifest will associate a subtitle `text` or `audio` track with this value. For example, the value should be \\"English\\" for a subtitle text track for the `language_code` value of `en-US`. This parameter is only set for `text` and `audio` track types."},"closed_captions":{"type":"boolean","description":"Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This parameter is only set tracks where `type` is `text` and `text_type` is `subtitles`."},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the track either when creating the asset or track. This parameter is only set for `text` type tracks. Max 255 characters."},"status":{"type":"string","enum":["preparing","ready","errored","deleted"],"description":"The status of the track. This parameter is only set for `text` type tracks."},"primary":{"type":"boolean","description":"For an audio track, indicates that this is the primary audio track, ingested from the main input for this asset. The primary audio track cannot be deleted."}}}},"errors":{"type":"object","description":"Object that describes any errors that happened when processing this asset.","properties":{"type":{"type":"string","description":"The type of error that occurred for this asset."},"messages":{"type":"array","description":"Error messages with more details.","items":{"type":"string"}}}},"per_title_encode":{"type":"boolean","format":"boolean","x-mux-doc-decorators":["hidden"],"deprecated":true},"upload_id":{"type":"string","description":"Unique identifier for the Direct Upload. This is an optional parameter added when the asset is created from a direct upload."},"is_live":{"type":"boolean","format":"boolean","description":"Indicates whether the live stream that created this asset is currently `active` and not in `idle` state. This is an optional parameter added when the asset is created from a live stream."},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the asset. Max 255 characters."},"live_stream_id":{"type":"string","description":"Unique identifier for the live stream. This is an optional parameter added when the asset is created from a live stream."},"master":{"type":"object","description":"An object containing the current status of Master Access and the link to the Master MP4 file when ready. This object does not exist if `master_access` is set to `none` and when the temporary URL expires.","properties":{"status":{"enum":["ready","preparing","errored"],"type":"string"},"url":{"type":"string","description":"The temporary URL to the master version of the video, as an MP4 file. This URL will expire after 24 hours."}}},"master_access":{"type":"string","enum":["temporary","none"],"default":"none"},"mp4_support":{"type":"string","default":"none","enum":["standard","none","capped-1080p","audio-only","audio-only,capped-1080p"],"x-mux-doc-decorators-deprecated-enum-values":["standard"]},"source_asset_id":{"type":"string","description":"Asset Identifier of the video used as the source for creating the clip."},"normalize_audio":{"type":"boolean","default":false,"description":"Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets."},"static_renditions":{"type":"object","description":"An object containing the current status of any static renditions (mp4s). The object does not exist if no static renditions have been requested. See [Download your videos](https://docs.mux.com/guides/enable-static-mp4-renditions) for more information.","properties":{"status":{"type":"string","default":"disabled","description":"Indicates the status of downloadable MP4 versions of this asset.","enum":["ready","preparing","disabled","errored"]},"files":{"type":"array","description":"Array of file objects.","items":{"type":"object","properties":{"name":{"type":"string","enum":["low.mp4","medium.mp4","high.mp4","audio.m4a","capped-1080p.mp4"]},"ext":{"type":"string","description":"Extension of the static rendition file","enum":["mp4","m4a"]},"height":{"type":"integer","format":"int32","description":"The height of the static rendition\'s file in pixels"},"width":{"type":"integer","format":"int32","description":"The width of the static rendition\'s file in pixels"},"bitrate":{"type":"integer","format":"int64","description":"The bitrate in bits per second"},"filesize":{"type":"string","format":"int64","description":"The file size in bytes"}}}}}},"recording_times":{"type":"array","description":"An array of individual live stream recording sessions. A recording session is created on each encoder connection during the live stream. Additionally any time slate media is inserted during brief interruptions in the live stream media or times when the live streaming software disconnects, a recording session representing the slate media will be added with a \\"slate\\" type.","items":{"type":"object","properties":{"started_at":{"type":"string","format":"date-time","description":"The time at which the recording for the live stream started. The time value is Unix epoch time represented in ISO 8601 format."},"duration":{"type":"number","format":"double","description":"The duration of the live stream recorded. The time value is in seconds."},"type":{"type":"string","enum":["content","slate"],"description":"The type of media represented by the recording session, either `content` for normal stream content or `slate` for slate media inserted during stream interruptions."}}}},"non_standard_input_reasons":{"type":"object","description":"An object containing one or more reasons the input file is non-standard. See [the guide on minimizing processing time](https://docs.mux.com/guides/minimize-processing-time) for more information on what a standard input is defined as. This object only exists on on-demand assets that have non-standard inputs, so if missing you can assume the input qualifies as standard.","properties":{"video_codec":{"type":"string","description":"The video codec used on the input file. For example, the input file encoded with `hevc` video codec is non-standard and the value of this parameter is `hevc`."},"audio_codec":{"type":"string","description":"The audio codec used on the input file. Non-AAC audio codecs are non-standard."},"video_gop_size":{"type":"string","enum":["high"],"description":"The video key frame Interval (also called as Group of Picture or GOP) of the input file is `high`. This parameter is present when the gop is greater than 20 seconds."},"video_frame_rate":{"type":"string","description":"The video frame rate of the input file. Video with average frames per second (fps) less than 5 or greater than 120 is non-standard. A `-1` frame rate value indicates Mux could not determine the frame rate of the video track."},"video_resolution":{"type":"string","description":"The video resolution of the input file. Video resolution higher than 2048 pixels on any one dimension (height or width) is considered non-standard, The resolution value is presented as `width` x `height` in pixels."},"video_bitrate":{"type":"string","enum":["high"],"description":"The video bitrate of the input file is `high`. This parameter is present when the average bitrate of any key frame interval (also known as Group of Pictures or GOP) is higher than what\'s considered standard which typically is 16 Mbps."},"pixel_aspect_ratio":{"type":"string","description":"The video pixel aspect ratio of the input file."},"video_edit_list":{"type":"string","enum":["non-standard"],"description":"Video Edit List reason indicates that the input file\'s video track contains a complex Edit Decision List."},"audio_edit_list":{"type":"string","enum":["non-standard"],"description":"Audio Edit List reason indicates that the input file\'s audio track contains a complex Edit Decision List."},"unexpected_media_file_parameters":{"type":"string","enum":["non-standard"],"description":"A catch-all reason when the input file in created with non-standard encoding parameters."},"unsupported_pixel_format":{"type":"string","description":"The video pixel format, as a string, returned by libav. Considered non-standard if not one of yuv420p or yuvj420p."}}},"test":{"type":"boolean","format":"boolean","description":"True means this live stream is a test asset. A test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test assets are watermarked with the Mux logo, limited to 10 seconds, and deleted after 24 hrs."},"ingest_type":{"type":"string","enum":["on_demand_url","on_demand_direct_upload","on_demand_clip","live_rtmp","live_srt"],"description":"The type of ingest used to create the asset."},"playback_policies":{"type":"array","items":{"type":"string","enum":["public","signed","drm"],"description":"* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\\n\\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](https://docs.mux.com/guides/secure-video-playback) for details about creating tokens.\\n\\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](https://docs.mux.com/guides/protect-videos-with-drm).\\n"},"description":"An array of playback policy names that you want applied to this asset and available through `playback_ids`. Options include: `\\"public\\"` (anyone with the playback URL can stream the asset). And `\\"signed\\"` (an additional access token is required to play the asset). If no playback_policy is set, the asset will have no playback IDs and will therefore not be playable. For simplicity, a single string name can be used in place of the array in the case of only one playback policy."},"inputs":{"type":"array","description":"An array of objects that each describe an input file to be used to create the asset. As a shortcut, input can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.","items":{"type":"object","description":"An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.","properties":{"url":{"type":"string","description":"The URL of the file that Mux should download and use.\\n* For the main input file, this should be the URL to the muxed file for Mux to download, for example an MP4, MOV, MKV, or TS file. Mux supports most audio/video file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](https://docs.mux.com/guides/minimize-processing-time).\\n* For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](https://docs.mux.com/guides/minimize-processing-time).\\n* For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](https://en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](https://www.w3.org/TR/webvtt1/) formats for ingesting Subtitles and Closed Captions.\\n* For Watermarking or Overlay, the URL is the location of the watermark image. The maximum size is 4096x4096.\\n* When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.\\nThe url property may be omitted on the first input object when providing asset settings for LiveStream and Upload objects, in order to configure settings related to the primary (live stream or direct upload) input.\\n"},"overlay_settings":{"type":"object","description":"An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.","properties":{"vertical_align":{"type":"string","enum":["top","middle","bottom"],"description":"Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\\"top\\"`"},"vertical_margin":{"type":"string","description":"The distance from the vertical_align starting point and the image\'s closest edge. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). Negative values will move the overlay offscreen. In the case of \'middle\', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top."},"horizontal_align":{"type":"string","enum":["left","center","right"],"description":"Where the horizontal positioning of the overlay/watermark should begin from."},"horizontal_margin":{"type":"string","description":"The distance from the horizontal_align starting point and the image\'s closest edge. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). Negative values will move the overlay offscreen. In the case of \'center\', a positive value will shift the image towards the right and and a negative value will shift it towards the left."},"width":{"type":"string","description":"How wide the overlay should appear. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height."},"height":{"type":"string","description":"How tall the overlay should appear. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width."},"opacity":{"type":"string","description":"How opaque the overlay should appear, expressed as a percent. (Default 100%)"}}},"generated_subtitles":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"A name for this subtitle track."},"passthrough":{"type":"string","description":"Arbitrary metadata set for the subtitle track. Max 255 characters."},"language_code":{"type":"string","description":"The language to generate subtitles in.","default":"en","enum":["en","es","it","pt","de","fr","pl","ru","nl","ca","tr","sv","uk","no","fi","sk","el","cs","hr","da","ro","bg"]}}},"description":"Generate subtitle tracks using automatic speech recognition with this configuration. This may only be provided for the first input object (the main input file). For direct uploads, this first input should omit the url parameter, as the main input file is provided via the direct upload. This will create subtitles based on the audio track ingested from that main input file. Note that subtitle generation happens after initial ingest, so the generated tracks will be in the `preparing` state when the asset transitions to `ready`."},"start_time":{"type":"number","format":"double","description":"The time offset in seconds from the beginning of the video indicating the clip\'s starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."},"end_time":{"type":"number","format":"double","description":"The time offset in seconds from the beginning of the video, indicating the clip\'s ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."},"type":{"type":"string","enum":["video","audio","text"],"description":"This parameter is required for `text` type tracks."},"text_type":{"type":"string","enum":["subtitles"],"description":"Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](https://mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags/). This parameter is required for `text` type tracks."},"language_code":{"type":"string","description":"The language code value must be a valid [BCP 47](https://tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is required for `text` and `audio` track types."},"name":{"type":"string","description":"The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate a subtitle text track with this value. For example, the value should be \\"English\\" for a subtitle text track with `language_code` set to `en`. This optional parameter should be used only for `text` and `audio` type tracks. This parameter can be optionally provided for the first video input to denote the name of the muxed audio track if present. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value."},"closed_captions":{"type":"boolean","description":"Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."},"passthrough":{"type":"string","description":"This optional parameter should be used tracks with `type` of `text` and `text_type` set to `subtitles`."}}}}}},"asset_id":{"type":"string","description":"Only set once the upload is in the `asset_created` state."},"cors_origin":{"type":"string","description":"If the upload URL will be used in a browser, you must specify the origin in order for the signed URL to have the correct CORS headers."},"url":{"type":"string","description":"The URL to upload the associated source media to."},"test":{"type":"boolean","format":"boolean","description":"Indicates if this is a test Direct Upload, in which case the Asset that gets created will be a `test` Asset."}}},"attempts":{"type":"array","description":"Attempts for sending out the webhook event","items":{"type":"object","properties":{"webhook_id":{"type":"integer","description":"Unique identifier for the webhook"},"response_status_code":{"type":"integer","description":"HTTP response status code for the webhook attempt"},"response_headers":{"type":"object","description":"HTTP response headers for the webhook attempt"},"response_body":{"type":["string","null"],"description":"HTTP response body for the webhook attempt"},"max_attempts":{"description":"Max attempts number for the webhook attempt","type":"integer"},"id":{"description":"Unique identifier for the webhook attempt","type":"string"},"created_at":{"description":"Time the webhook request was attempted","type":"string","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"address":{"description":"URL address for the webhook attempt","type":"string"}}}},"request_id":{"type":["string","null"],"deprecated":true},"accessor":{"type":["string","null"],"deprecated":true},"accessor_source":{"type":["string","null"],"deprecated":true}},"required":["type","id","created_at","object","environment","data","attempts"]},"example":{"cors_origin":"example.com","id":"uZBU6AuqELv1tKCtPrFzYZxYePhQrgWsX2mcXyC","new_asset_settings":{"playback_policies":["public"]},"status":"cancelled","timeout":3600}},"video.upload.created":{"description":"Upload has been created. This event fires after creating a direct upload.","payload":{"type":"object","properties":{"type":{"type":"string","description":"Type for the webhook event"},"id":{"type":"string","description":"Unique identifier for the event"},"created_at":{"type":"string","description":"Time the event was created","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"object":{"type":"object","properties":{"type":{"type":"string"},"id":{"type":"string"}},"required":["type","id"]},"environment":{"type":"object","properties":{"name":{"type":"string","description":"Name for the environment"},"id":{"type":"string","description":"Unique identifier for the environment"}},"required":["name","id"]},"data":{"type":"object","x-required":["id","url","timeout","status","cors_origin"],"properties":{"id":{"type":"string","description":"Unique identifier for the Direct Upload."},"timeout":{"type":"integer","format":"int32","default":3600,"minimum":60,"maximum":604800,"description":"Max time in seconds for the signed upload URL to be valid. If a successful upload has not occurred before the timeout limit, the direct upload is marked `timed_out`"},"status":{"type":"string","enum":["waiting","asset_created","errored","cancelled","timed_out"]},"new_asset_settings":{"type":"object","x-required":["id","created_at","status","max_resolution_tier","encoding_tier","mp4_support","master_access"],"properties":{"id":{"type":"string","description":"Unique identifier for the Asset. Max 255 characters."},"created_at":{"type":"string","format":"int64","description":"Time the Asset was created, defined as a Unix timestamp (seconds since epoch)."},"status":{"type":"string","enum":["preparing","ready","errored"],"description":"The status of the asset."},"duration":{"type":"number","format":"double","description":"The duration of the asset in seconds (max duration for a single asset is 12 hours)."},"max_stored_resolution":{"type":"string","enum":["Audio only","SD","HD","FHD","UHD"],"description":"This field is deprecated. Please use `resolution_tier` instead. The maximum resolution that has been stored for the asset. The asset may be delivered at lower resolutions depending on the device and bandwidth, however it cannot be delivered at a higher value than is stored.","deprecated":true},"resolution_tier":{"type":"string","enum":["audio-only","720p","1080p","1440p","2160p"],"description":"The resolution tier that the asset was ingested at, affecting billing for ingest & storage. This field also represents the highest resolution tier that the content can be delivered at, however the actual resolution may be lower depending on the device, bandwidth, and exact resolution of the uploaded asset."},"max_resolution_tier":{"type":"string","enum":["1080p","1440p","2160p"],"description":"Max resolution tier can be used to control the maximum `resolution_tier` your asset is encoded, stored, and streamed at. If not set, this defaults to `1080p`."},"encoding_tier":{"type":"string","deprecated":true,"enum":["smart","baseline","premium"],"description":"This field is deprecated. Please use `video_quality` instead. The encoding tier informs the cost, quality, and available platform features for the asset. The default encoding tier for an account can be set in the Mux Dashboard. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"video_quality":{"type":"string","enum":["basic","plus","premium"],"description":"The video quality controls the cost, quality, and available platform features for the asset. The default video quality for an account can be set in the Mux Dashboard. This field replaces the deprecated `encoding_tier` value. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"max_stored_frame_rate":{"type":"number","format":"double","description":"The maximum frame rate that has been stored for the asset. The asset may be delivered at lower frame rates depending on the device and bandwidth, however it cannot be delivered at a higher value than is stored. This field may return -1 if the frame rate of the input cannot be reliably determined."},"aspect_ratio":{"type":"string","description":"The aspect ratio of the asset in the form of `width:height`, for example `16:9`."},"playback_ids":{"type":"array","description":"An array of Playback ID objects. Use these to create HLS playback URLs. See [Play your videos](https://docs.mux.com/guides/play-your-videos) for more details.","items":{"type":"object","x-required":["id","policy"],"properties":{"id":{"type":"string","description":"Unique identifier for the PlaybackID"},"policy":{"type":"string","enum":["public","signed","drm"],"description":"* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\\n\\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](https://docs.mux.com/guides/secure-video-playback) for details about creating tokens.\\n\\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](https://docs.mux.com/guides/protect-videos-with-drm).\\n"},"drm_configuration_id":{"type":"string","description":"The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."}}}},"tracks":{"type":"array","description":"The individual media tracks that make up an asset.","items":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier for the Track"},"type":{"type":"string","description":"The type of track","enum":["video","audio","text"]},"duration":{"type":"number","format":"double","description":"The duration in seconds of the track media. This parameter is not set for `text` type tracks. This field is optional and may not be set. The top level `duration` field of an asset will always be set."},"max_width":{"type":"integer","format":"int64","description":"The maximum width in pixels available for the track. Only set for the `video` type track."},"max_height":{"type":"integer","format":"int64","description":"The maximum height in pixels available for the track. Only set for the `video` type track."},"max_frame_rate":{"type":"number","format":"double","description":"The maximum frame rate available for the track. Only set for the `video` type track. This field may return `-1` if the frame rate of the input cannot be reliably determined."},"max_channels":{"type":"integer","format":"int64","description":"The maximum number of audio channels the track supports. Only set for the `audio` type track."},"max_channel_layout":{"type":"string","description":"Only set for the `audio` type track.","deprecated":true},"text_type":{"type":"string","enum":["subtitles"],"description":"This parameter is only set for `text` type tracks."},"text_source":{"type":"string","description":"The source of the text contained in a Track of type `text`. Valid `text_source`\\nvalues are listed below.\\n* `uploaded`: Tracks uploaded to Mux as caption or subtitle files using the Create Asset Track API.\\n* `embedded`: Tracks extracted from an embedded stream of CEA-608 closed captions.\\n* `generated_vod`: Tracks generated by automatic speech recognition on an on-demand asset.\\n* `generated_live`: Tracks generated by automatic speech recognition on a live stream configured with `generated_subtitles`. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\\n* `generated_live_final`: Tracks generated by automatic speech recognition on a live stream using `generated_subtitles`. The accuracy, timing, and formatting of these subtitles is improved compared to the corresponding `generated_live` tracks. However, `generated_live_final` tracks will not be available in `ready` status until the live stream ends. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\\n","enum":["uploaded","embedded","generated_live","generated_live_final","generated_vod"]},"language_code":{"type":"string","description":"The language code value represents [BCP 47](https://tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is only set for `text` and `audio` track types."},"name":{"type":"string","description":"The name of the track containing a human-readable description. The HLS manifest will associate a subtitle `text` or `audio` track with this value. For example, the value should be \\"English\\" for a subtitle text track for the `language_code` value of `en-US`. This parameter is only set for `text` and `audio` track types."},"closed_captions":{"type":"boolean","description":"Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This parameter is only set tracks where `type` is `text` and `text_type` is `subtitles`."},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the track either when creating the asset or track. This parameter is only set for `text` type tracks. Max 255 characters."},"status":{"type":"string","enum":["preparing","ready","errored","deleted"],"description":"The status of the track. This parameter is only set for `text` type tracks."},"primary":{"type":"boolean","description":"For an audio track, indicates that this is the primary audio track, ingested from the main input for this asset. The primary audio track cannot be deleted."}}}},"errors":{"type":"object","description":"Object that describes any errors that happened when processing this asset.","properties":{"type":{"type":"string","description":"The type of error that occurred for this asset."},"messages":{"type":"array","description":"Error messages with more details.","items":{"type":"string"}}}},"per_title_encode":{"type":"boolean","format":"boolean","x-mux-doc-decorators":["hidden"],"deprecated":true},"upload_id":{"type":"string","description":"Unique identifier for the Direct Upload. This is an optional parameter added when the asset is created from a direct upload."},"is_live":{"type":"boolean","format":"boolean","description":"Indicates whether the live stream that created this asset is currently `active` and not in `idle` state. This is an optional parameter added when the asset is created from a live stream."},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the asset. Max 255 characters."},"live_stream_id":{"type":"string","description":"Unique identifier for the live stream. This is an optional parameter added when the asset is created from a live stream."},"master":{"type":"object","description":"An object containing the current status of Master Access and the link to the Master MP4 file when ready. This object does not exist if `master_access` is set to `none` and when the temporary URL expires.","properties":{"status":{"enum":["ready","preparing","errored"],"type":"string"},"url":{"type":"string","description":"The temporary URL to the master version of the video, as an MP4 file. This URL will expire after 24 hours."}}},"master_access":{"type":"string","enum":["temporary","none"],"default":"none"},"mp4_support":{"type":"string","default":"none","enum":["standard","none","capped-1080p","audio-only","audio-only,capped-1080p"],"x-mux-doc-decorators-deprecated-enum-values":["standard"]},"source_asset_id":{"type":"string","description":"Asset Identifier of the video used as the source for creating the clip."},"normalize_audio":{"type":"boolean","default":false,"description":"Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets."},"static_renditions":{"type":"object","description":"An object containing the current status of any static renditions (mp4s). The object does not exist if no static renditions have been requested. See [Download your videos](https://docs.mux.com/guides/enable-static-mp4-renditions) for more information.","properties":{"status":{"type":"string","default":"disabled","description":"Indicates the status of downloadable MP4 versions of this asset.","enum":["ready","preparing","disabled","errored"]},"files":{"type":"array","description":"Array of file objects.","items":{"type":"object","properties":{"name":{"type":"string","enum":["low.mp4","medium.mp4","high.mp4","audio.m4a","capped-1080p.mp4"]},"ext":{"type":"string","description":"Extension of the static rendition file","enum":["mp4","m4a"]},"height":{"type":"integer","format":"int32","description":"The height of the static rendition\'s file in pixels"},"width":{"type":"integer","format":"int32","description":"The width of the static rendition\'s file in pixels"},"bitrate":{"type":"integer","format":"int64","description":"The bitrate in bits per second"},"filesize":{"type":"string","format":"int64","description":"The file size in bytes"}}}}}},"recording_times":{"type":"array","description":"An array of individual live stream recording sessions. A recording session is created on each encoder connection during the live stream. Additionally any time slate media is inserted during brief interruptions in the live stream media or times when the live streaming software disconnects, a recording session representing the slate media will be added with a \\"slate\\" type.","items":{"type":"object","properties":{"started_at":{"type":"string","format":"date-time","description":"The time at which the recording for the live stream started. The time value is Unix epoch time represented in ISO 8601 format."},"duration":{"type":"number","format":"double","description":"The duration of the live stream recorded. The time value is in seconds."},"type":{"type":"string","enum":["content","slate"],"description":"The type of media represented by the recording session, either `content` for normal stream content or `slate` for slate media inserted during stream interruptions."}}}},"non_standard_input_reasons":{"type":"object","description":"An object containing one or more reasons the input file is non-standard. See [the guide on minimizing processing time](https://docs.mux.com/guides/minimize-processing-time) for more information on what a standard input is defined as. This object only exists on on-demand assets that have non-standard inputs, so if missing you can assume the input qualifies as standard.","properties":{"video_codec":{"type":"string","description":"The video codec used on the input file. For example, the input file encoded with `hevc` video codec is non-standard and the value of this parameter is `hevc`."},"audio_codec":{"type":"string","description":"The audio codec used on the input file. Non-AAC audio codecs are non-standard."},"video_gop_size":{"type":"string","enum":["high"],"description":"The video key frame Interval (also called as Group of Picture or GOP) of the input file is `high`. This parameter is present when the gop is greater than 20 seconds."},"video_frame_rate":{"type":"string","description":"The video frame rate of the input file. Video with average frames per second (fps) less than 5 or greater than 120 is non-standard. A `-1` frame rate value indicates Mux could not determine the frame rate of the video track."},"video_resolution":{"type":"string","description":"The video resolution of the input file. Video resolution higher than 2048 pixels on any one dimension (height or width) is considered non-standard, The resolution value is presented as `width` x `height` in pixels."},"video_bitrate":{"type":"string","enum":["high"],"description":"The video bitrate of the input file is `high`. This parameter is present when the average bitrate of any key frame interval (also known as Group of Pictures or GOP) is higher than what\'s considered standard which typically is 16 Mbps."},"pixel_aspect_ratio":{"type":"string","description":"The video pixel aspect ratio of the input file."},"video_edit_list":{"type":"string","enum":["non-standard"],"description":"Video Edit List reason indicates that the input file\'s video track contains a complex Edit Decision List."},"audio_edit_list":{"type":"string","enum":["non-standard"],"description":"Audio Edit List reason indicates that the input file\'s audio track contains a complex Edit Decision List."},"unexpected_media_file_parameters":{"type":"string","enum":["non-standard"],"description":"A catch-all reason when the input file in created with non-standard encoding parameters."},"unsupported_pixel_format":{"type":"string","description":"The video pixel format, as a string, returned by libav. Considered non-standard if not one of yuv420p or yuvj420p."}}},"test":{"type":"boolean","format":"boolean","description":"True means this live stream is a test asset. A test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test assets are watermarked with the Mux logo, limited to 10 seconds, and deleted after 24 hrs."},"ingest_type":{"type":"string","enum":["on_demand_url","on_demand_direct_upload","on_demand_clip","live_rtmp","live_srt"],"description":"The type of ingest used to create the asset."},"playback_policies":{"type":"array","items":{"type":"string","enum":["public","signed","drm"],"description":"* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\\n\\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](https://docs.mux.com/guides/secure-video-playback) for details about creating tokens.\\n\\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](https://docs.mux.com/guides/protect-videos-with-drm).\\n"},"description":"An array of playback policy names that you want applied to this asset and available through `playback_ids`. Options include: `\\"public\\"` (anyone with the playback URL can stream the asset). And `\\"signed\\"` (an additional access token is required to play the asset). If no playback_policy is set, the asset will have no playback IDs and will therefore not be playable. For simplicity, a single string name can be used in place of the array in the case of only one playback policy."},"inputs":{"type":"array","description":"An array of objects that each describe an input file to be used to create the asset. As a shortcut, input can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.","items":{"type":"object","description":"An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.","properties":{"url":{"type":"string","description":"The URL of the file that Mux should download and use.\\n* For the main input file, this should be the URL to the muxed file for Mux to download, for example an MP4, MOV, MKV, or TS file. Mux supports most audio/video file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](https://docs.mux.com/guides/minimize-processing-time).\\n* For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](https://docs.mux.com/guides/minimize-processing-time).\\n* For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](https://en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](https://www.w3.org/TR/webvtt1/) formats for ingesting Subtitles and Closed Captions.\\n* For Watermarking or Overlay, the URL is the location of the watermark image. The maximum size is 4096x4096.\\n* When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.\\nThe url property may be omitted on the first input object when providing asset settings for LiveStream and Upload objects, in order to configure settings related to the primary (live stream or direct upload) input.\\n"},"overlay_settings":{"type":"object","description":"An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.","properties":{"vertical_align":{"type":"string","enum":["top","middle","bottom"],"description":"Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\\"top\\"`"},"vertical_margin":{"type":"string","description":"The distance from the vertical_align starting point and the image\'s closest edge. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). Negative values will move the overlay offscreen. In the case of \'middle\', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top."},"horizontal_align":{"type":"string","enum":["left","center","right"],"description":"Where the horizontal positioning of the overlay/watermark should begin from."},"horizontal_margin":{"type":"string","description":"The distance from the horizontal_align starting point and the image\'s closest edge. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). Negative values will move the overlay offscreen. In the case of \'center\', a positive value will shift the image towards the right and and a negative value will shift it towards the left."},"width":{"type":"string","description":"How wide the overlay should appear. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height."},"height":{"type":"string","description":"How tall the overlay should appear. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width."},"opacity":{"type":"string","description":"How opaque the overlay should appear, expressed as a percent. (Default 100%)"}}},"generated_subtitles":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"A name for this subtitle track."},"passthrough":{"type":"string","description":"Arbitrary metadata set for the subtitle track. Max 255 characters."},"language_code":{"type":"string","description":"The language to generate subtitles in.","default":"en","enum":["en","es","it","pt","de","fr","pl","ru","nl","ca","tr","sv","uk","no","fi","sk","el","cs","hr","da","ro","bg"]}}},"description":"Generate subtitle tracks using automatic speech recognition with this configuration. This may only be provided for the first input object (the main input file). For direct uploads, this first input should omit the url parameter, as the main input file is provided via the direct upload. This will create subtitles based on the audio track ingested from that main input file. Note that subtitle generation happens after initial ingest, so the generated tracks will be in the `preparing` state when the asset transitions to `ready`."},"start_time":{"type":"number","format":"double","description":"The time offset in seconds from the beginning of the video indicating the clip\'s starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."},"end_time":{"type":"number","format":"double","description":"The time offset in seconds from the beginning of the video, indicating the clip\'s ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."},"type":{"type":"string","enum":["video","audio","text"],"description":"This parameter is required for `text` type tracks."},"text_type":{"type":"string","enum":["subtitles"],"description":"Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](https://mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags/). This parameter is required for `text` type tracks."},"language_code":{"type":"string","description":"The language code value must be a valid [BCP 47](https://tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is required for `text` and `audio` track types."},"name":{"type":"string","description":"The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate a subtitle text track with this value. For example, the value should be \\"English\\" for a subtitle text track with `language_code` set to `en`. This optional parameter should be used only for `text` and `audio` type tracks. This parameter can be optionally provided for the first video input to denote the name of the muxed audio track if present. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value."},"closed_captions":{"type":"boolean","description":"Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."},"passthrough":{"type":"string","description":"This optional parameter should be used tracks with `type` of `text` and `text_type` set to `subtitles`."}}}}}},"asset_id":{"type":"string","description":"Only set once the upload is in the `asset_created` state."},"cors_origin":{"type":"string","description":"If the upload URL will be used in a browser, you must specify the origin in order for the signed URL to have the correct CORS headers."},"url":{"type":"string","description":"The URL to upload the associated source media to."},"test":{"type":"boolean","format":"boolean","description":"Indicates if this is a test Direct Upload, in which case the Asset that gets created will be a `test` Asset."}}},"attempts":{"type":"array","description":"Attempts for sending out the webhook event","items":{"type":"object","properties":{"webhook_id":{"type":"integer","description":"Unique identifier for the webhook"},"response_status_code":{"type":"integer","description":"HTTP response status code for the webhook attempt"},"response_headers":{"type":"object","description":"HTTP response headers for the webhook attempt"},"response_body":{"type":["string","null"],"description":"HTTP response body for the webhook attempt"},"max_attempts":{"description":"Max attempts number for the webhook attempt","type":"integer"},"id":{"description":"Unique identifier for the webhook attempt","type":"string"},"created_at":{"description":"Time the webhook request was attempted","type":"string","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"address":{"description":"URL address for the webhook attempt","type":"string"}}}},"request_id":{"type":["string","null"],"deprecated":true},"accessor":{"type":["string","null"],"deprecated":true},"accessor_source":{"type":["string","null"],"deprecated":true}},"required":["type","id","created_at","object","environment","data","attempts"]},"example":{"cors_origin":"example.com","event_created_at":1655162900401,"id":"GI1soFkLFQS1PoFxeNpKG6AQfeRW6VDj2hhDPn","new_asset_settings":{"passthrough":"mux","playback_policies":["public"]},"status":"waiting","timeout":3600,"url":"https://example.com/upload-url"}},"video.upload.errored":{"description":"Upload has encountered an error. This event fires when the asset created by the direct upload fails. Most commonly this happens when an end-user uploads a non-video file.","payload":{"type":"object","properties":{"type":{"type":"string","description":"Type for the webhook event"},"id":{"type":"string","description":"Unique identifier for the event"},"created_at":{"type":"string","description":"Time the event was created","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"object":{"type":"object","properties":{"type":{"type":"string"},"id":{"type":"string"}},"required":["type","id"]},"environment":{"type":"object","properties":{"name":{"type":"string","description":"Name for the environment"},"id":{"type":"string","description":"Unique identifier for the environment"}},"required":["name","id"]},"data":{"type":"object","x-required":["id","url","timeout","status","cors_origin"],"properties":{"id":{"type":"string","description":"Unique identifier for the Direct Upload."},"timeout":{"type":"integer","format":"int32","default":3600,"minimum":60,"maximum":604800,"description":"Max time in seconds for the signed upload URL to be valid. If a successful upload has not occurred before the timeout limit, the direct upload is marked `timed_out`"},"status":{"type":"string","enum":["waiting","asset_created","errored","cancelled","timed_out"]},"new_asset_settings":{"type":"object","x-required":["id","created_at","status","max_resolution_tier","encoding_tier","mp4_support","master_access"],"properties":{"id":{"type":"string","description":"Unique identifier for the Asset. Max 255 characters."},"created_at":{"type":"string","format":"int64","description":"Time the Asset was created, defined as a Unix timestamp (seconds since epoch)."},"status":{"type":"string","enum":["preparing","ready","errored"],"description":"The status of the asset."},"duration":{"type":"number","format":"double","description":"The duration of the asset in seconds (max duration for a single asset is 12 hours)."},"max_stored_resolution":{"type":"string","enum":["Audio only","SD","HD","FHD","UHD"],"description":"This field is deprecated. Please use `resolution_tier` instead. The maximum resolution that has been stored for the asset. The asset may be delivered at lower resolutions depending on the device and bandwidth, however it cannot be delivered at a higher value than is stored.","deprecated":true},"resolution_tier":{"type":"string","enum":["audio-only","720p","1080p","1440p","2160p"],"description":"The resolution tier that the asset was ingested at, affecting billing for ingest & storage. This field also represents the highest resolution tier that the content can be delivered at, however the actual resolution may be lower depending on the device, bandwidth, and exact resolution of the uploaded asset."},"max_resolution_tier":{"type":"string","enum":["1080p","1440p","2160p"],"description":"Max resolution tier can be used to control the maximum `resolution_tier` your asset is encoded, stored, and streamed at. If not set, this defaults to `1080p`."},"encoding_tier":{"type":"string","deprecated":true,"enum":["smart","baseline","premium"],"description":"This field is deprecated. Please use `video_quality` instead. The encoding tier informs the cost, quality, and available platform features for the asset. The default encoding tier for an account can be set in the Mux Dashboard. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"video_quality":{"type":"string","enum":["basic","plus","premium"],"description":"The video quality controls the cost, quality, and available platform features for the asset. The default video quality for an account can be set in the Mux Dashboard. This field replaces the deprecated `encoding_tier` value. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"max_stored_frame_rate":{"type":"number","format":"double","description":"The maximum frame rate that has been stored for the asset. The asset may be delivered at lower frame rates depending on the device and bandwidth, however it cannot be delivered at a higher value than is stored. This field may return -1 if the frame rate of the input cannot be reliably determined."},"aspect_ratio":{"type":"string","description":"The aspect ratio of the asset in the form of `width:height`, for example `16:9`."},"playback_ids":{"type":"array","description":"An array of Playback ID objects. Use these to create HLS playback URLs. See [Play your videos](https://docs.mux.com/guides/play-your-videos) for more details.","items":{"type":"object","x-required":["id","policy"],"properties":{"id":{"type":"string","description":"Unique identifier for the PlaybackID"},"policy":{"type":"string","enum":["public","signed","drm"],"description":"* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\\n\\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](https://docs.mux.com/guides/secure-video-playback) for details about creating tokens.\\n\\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](https://docs.mux.com/guides/protect-videos-with-drm).\\n"},"drm_configuration_id":{"type":"string","description":"The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."}}}},"tracks":{"type":"array","description":"The individual media tracks that make up an asset.","items":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier for the Track"},"type":{"type":"string","description":"The type of track","enum":["video","audio","text"]},"duration":{"type":"number","format":"double","description":"The duration in seconds of the track media. This parameter is not set for `text` type tracks. This field is optional and may not be set. The top level `duration` field of an asset will always be set."},"max_width":{"type":"integer","format":"int64","description":"The maximum width in pixels available for the track. Only set for the `video` type track."},"max_height":{"type":"integer","format":"int64","description":"The maximum height in pixels available for the track. Only set for the `video` type track."},"max_frame_rate":{"type":"number","format":"double","description":"The maximum frame rate available for the track. Only set for the `video` type track. This field may return `-1` if the frame rate of the input cannot be reliably determined."},"max_channels":{"type":"integer","format":"int64","description":"The maximum number of audio channels the track supports. Only set for the `audio` type track."},"max_channel_layout":{"type":"string","description":"Only set for the `audio` type track.","deprecated":true},"text_type":{"type":"string","enum":["subtitles"],"description":"This parameter is only set for `text` type tracks."},"text_source":{"type":"string","description":"The source of the text contained in a Track of type `text`. Valid `text_source`\\nvalues are listed below.\\n* `uploaded`: Tracks uploaded to Mux as caption or subtitle files using the Create Asset Track API.\\n* `embedded`: Tracks extracted from an embedded stream of CEA-608 closed captions.\\n* `generated_vod`: Tracks generated by automatic speech recognition on an on-demand asset.\\n* `generated_live`: Tracks generated by automatic speech recognition on a live stream configured with `generated_subtitles`. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\\n* `generated_live_final`: Tracks generated by automatic speech recognition on a live stream using `generated_subtitles`. The accuracy, timing, and formatting of these subtitles is improved compared to the corresponding `generated_live` tracks. However, `generated_live_final` tracks will not be available in `ready` status until the live stream ends. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback.\\n","enum":["uploaded","embedded","generated_live","generated_live_final","generated_vod"]},"language_code":{"type":"string","description":"The language code value represents [BCP 47](https://tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is only set for `text` and `audio` track types."},"name":{"type":"string","description":"The name of the track containing a human-readable description. The HLS manifest will associate a subtitle `text` or `audio` track with this value. For example, the value should be \\"English\\" for a subtitle text track for the `language_code` value of `en-US`. This parameter is only set for `text` and `audio` track types."},"closed_captions":{"type":"boolean","description":"Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This parameter is only set tracks where `type` is `text` and `text_type` is `subtitles`."},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the track either when creating the asset or track. This parameter is only set for `text` type tracks. Max 255 characters."},"status":{"type":"string","enum":["preparing","ready","errored","deleted"],"description":"The status of the track. This parameter is only set for `text` type tracks."},"primary":{"type":"boolean","description":"For an audio track, indicates that this is the primary audio track, ingested from the main input for this asset. The primary audio track cannot be deleted."}}}},"errors":{"type":"object","description":"Object that describes any errors that happened when processing this asset.","properties":{"type":{"type":"string","description":"The type of error that occurred for this asset."},"messages":{"type":"array","description":"Error messages with more details.","items":{"type":"string"}}}},"per_title_encode":{"type":"boolean","format":"boolean","x-mux-doc-decorators":["hidden"],"deprecated":true},"upload_id":{"type":"string","description":"Unique identifier for the Direct Upload. This is an optional parameter added when the asset is created from a direct upload."},"is_live":{"type":"boolean","format":"boolean","description":"Indicates whether the live stream that created this asset is currently `active` and not in `idle` state. This is an optional parameter added when the asset is created from a live stream."},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the asset. Max 255 characters."},"live_stream_id":{"type":"string","description":"Unique identifier for the live stream. This is an optional parameter added when the asset is created from a live stream."},"master":{"type":"object","description":"An object containing the current status of Master Access and the link to the Master MP4 file when ready. This object does not exist if `master_access` is set to `none` and when the temporary URL expires.","properties":{"status":{"enum":["ready","preparing","errored"],"type":"string"},"url":{"type":"string","description":"The temporary URL to the master version of the video, as an MP4 file. This URL will expire after 24 hours."}}},"master_access":{"type":"string","enum":["temporary","none"],"default":"none"},"mp4_support":{"type":"string","default":"none","enum":["standard","none","capped-1080p","audio-only","audio-only,capped-1080p"],"x-mux-doc-decorators-deprecated-enum-values":["standard"]},"source_asset_id":{"type":"string","description":"Asset Identifier of the video used as the source for creating the clip."},"normalize_audio":{"type":"boolean","default":false,"description":"Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets."},"static_renditions":{"type":"object","description":"An object containing the current status of any static renditions (mp4s). The object does not exist if no static renditions have been requested. See [Download your videos](https://docs.mux.com/guides/enable-static-mp4-renditions) for more information.","properties":{"status":{"type":"string","default":"disabled","description":"Indicates the status of downloadable MP4 versions of this asset.","enum":["ready","preparing","disabled","errored"]},"files":{"type":"array","description":"Array of file objects.","items":{"type":"object","properties":{"name":{"type":"string","enum":["low.mp4","medium.mp4","high.mp4","audio.m4a","capped-1080p.mp4"]},"ext":{"type":"string","description":"Extension of the static rendition file","enum":["mp4","m4a"]},"height":{"type":"integer","format":"int32","description":"The height of the static rendition\'s file in pixels"},"width":{"type":"integer","format":"int32","description":"The width of the static rendition\'s file in pixels"},"bitrate":{"type":"integer","format":"int64","description":"The bitrate in bits per second"},"filesize":{"type":"string","format":"int64","description":"The file size in bytes"}}}}}},"recording_times":{"type":"array","description":"An array of individual live stream recording sessions. A recording session is created on each encoder connection during the live stream. Additionally any time slate media is inserted during brief interruptions in the live stream media or times when the live streaming software disconnects, a recording session representing the slate media will be added with a \\"slate\\" type.","items":{"type":"object","properties":{"started_at":{"type":"string","format":"date-time","description":"The time at which the recording for the live stream started. The time value is Unix epoch time represented in ISO 8601 format."},"duration":{"type":"number","format":"double","description":"The duration of the live stream recorded. The time value is in seconds."},"type":{"type":"string","enum":["content","slate"],"description":"The type of media represented by the recording session, either `content` for normal stream content or `slate` for slate media inserted during stream interruptions."}}}},"non_standard_input_reasons":{"type":"object","description":"An object containing one or more reasons the input file is non-standard. See [the guide on minimizing processing time](https://docs.mux.com/guides/minimize-processing-time) for more information on what a standard input is defined as. This object only exists on on-demand assets that have non-standard inputs, so if missing you can assume the input qualifies as standard.","properties":{"video_codec":{"type":"string","description":"The video codec used on the input file. For example, the input file encoded with `hevc` video codec is non-standard and the value of this parameter is `hevc`."},"audio_codec":{"type":"string","description":"The audio codec used on the input file. Non-AAC audio codecs are non-standard."},"video_gop_size":{"type":"string","enum":["high"],"description":"The video key frame Interval (also called as Group of Picture or GOP) of the input file is `high`. This parameter is present when the gop is greater than 20 seconds."},"video_frame_rate":{"type":"string","description":"The video frame rate of the input file. Video with average frames per second (fps) less than 5 or greater than 120 is non-standard. A `-1` frame rate value indicates Mux could not determine the frame rate of the video track."},"video_resolution":{"type":"string","description":"The video resolution of the input file. Video resolution higher than 2048 pixels on any one dimension (height or width) is considered non-standard, The resolution value is presented as `width` x `height` in pixels."},"video_bitrate":{"type":"string","enum":["high"],"description":"The video bitrate of the input file is `high`. This parameter is present when the average bitrate of any key frame interval (also known as Group of Pictures or GOP) is higher than what\'s considered standard which typically is 16 Mbps."},"pixel_aspect_ratio":{"type":"string","description":"The video pixel aspect ratio of the input file."},"video_edit_list":{"type":"string","enum":["non-standard"],"description":"Video Edit List reason indicates that the input file\'s video track contains a complex Edit Decision List."},"audio_edit_list":{"type":"string","enum":["non-standard"],"description":"Audio Edit List reason indicates that the input file\'s audio track contains a complex Edit Decision List."},"unexpected_media_file_parameters":{"type":"string","enum":["non-standard"],"description":"A catch-all reason when the input file in created with non-standard encoding parameters."},"unsupported_pixel_format":{"type":"string","description":"The video pixel format, as a string, returned by libav. Considered non-standard if not one of yuv420p or yuvj420p."}}},"test":{"type":"boolean","format":"boolean","description":"True means this live stream is a test asset. A test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test assets are watermarked with the Mux logo, limited to 10 seconds, and deleted after 24 hrs."},"ingest_type":{"type":"string","enum":["on_demand_url","on_demand_direct_upload","on_demand_clip","live_rtmp","live_srt"],"description":"The type of ingest used to create the asset."},"playback_policies":{"type":"array","items":{"type":"string","enum":["public","signed","drm"],"description":"* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\\n\\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](https://docs.mux.com/guides/secure-video-playback) for details about creating tokens.\\n\\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](https://docs.mux.com/guides/protect-videos-with-drm).\\n"},"description":"An array of playback policy names that you want applied to this asset and available through `playback_ids`. Options include: `\\"public\\"` (anyone with the playback URL can stream the asset). And `\\"signed\\"` (an additional access token is required to play the asset). If no playback_policy is set, the asset will have no playback IDs and will therefore not be playable. For simplicity, a single string name can be used in place of the array in the case of only one playback policy."},"inputs":{"type":"array","description":"An array of objects that each describe an input file to be used to create the asset. As a shortcut, input can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.","items":{"type":"object","description":"An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.","properties":{"url":{"type":"string","description":"The URL of the file that Mux should download and use.\\n* For the main input file, this should be the URL to the muxed file for Mux to download, for example an MP4, MOV, MKV, or TS file. Mux supports most audio/video file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](https://docs.mux.com/guides/minimize-processing-time).\\n* For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](https://docs.mux.com/guides/minimize-processing-time).\\n* For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](https://en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](https://www.w3.org/TR/webvtt1/) formats for ingesting Subtitles and Closed Captions.\\n* For Watermarking or Overlay, the URL is the location of the watermark image. The maximum size is 4096x4096.\\n* When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.\\nThe url property may be omitted on the first input object when providing asset settings for LiveStream and Upload objects, in order to configure settings related to the primary (live stream or direct upload) input.\\n"},"overlay_settings":{"type":"object","description":"An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.","properties":{"vertical_align":{"type":"string","enum":["top","middle","bottom"],"description":"Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\\"top\\"`"},"vertical_margin":{"type":"string","description":"The distance from the vertical_align starting point and the image\'s closest edge. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). Negative values will move the overlay offscreen. In the case of \'middle\', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top."},"horizontal_align":{"type":"string","enum":["left","center","right"],"description":"Where the horizontal positioning of the overlay/watermark should begin from."},"horizontal_margin":{"type":"string","description":"The distance from the horizontal_align starting point and the image\'s closest edge. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). Negative values will move the overlay offscreen. In the case of \'center\', a positive value will shift the image towards the right and and a negative value will shift it towards the left."},"width":{"type":"string","description":"How wide the overlay should appear. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height."},"height":{"type":"string","description":"How tall the overlay should appear. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width."},"opacity":{"type":"string","description":"How opaque the overlay should appear, expressed as a percent. (Default 100%)"}}},"generated_subtitles":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"A name for this subtitle track."},"passthrough":{"type":"string","description":"Arbitrary metadata set for the subtitle track. Max 255 characters."},"language_code":{"type":"string","description":"The language to generate subtitles in.","default":"en","enum":["en","es","it","pt","de","fr","pl","ru","nl","ca","tr","sv","uk","no","fi","sk","el","cs","hr","da","ro","bg"]}}},"description":"Generate subtitle tracks using automatic speech recognition with this configuration. This may only be provided for the first input object (the main input file). For direct uploads, this first input should omit the url parameter, as the main input file is provided via the direct upload. This will create subtitles based on the audio track ingested from that main input file. Note that subtitle generation happens after initial ingest, so the generated tracks will be in the `preparing` state when the asset transitions to `ready`."},"start_time":{"type":"number","format":"double","description":"The time offset in seconds from the beginning of the video indicating the clip\'s starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."},"end_time":{"type":"number","format":"double","description":"The time offset in seconds from the beginning of the video, indicating the clip\'s ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."},"type":{"type":"string","enum":["video","audio","text"],"description":"This parameter is required for `text` type tracks."},"text_type":{"type":"string","enum":["subtitles"],"description":"Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](https://mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags/). This parameter is required for `text` type tracks."},"language_code":{"type":"string","description":"The language code value must be a valid [BCP 47](https://tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is required for `text` and `audio` track types."},"name":{"type":"string","description":"The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate a subtitle text track with this value. For example, the value should be \\"English\\" for a subtitle text track with `language_code` set to `en`. This optional parameter should be used only for `text` and `audio` type tracks. This parameter can be optionally provided for the first video input to denote the name of the muxed audio track if present. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value."},"closed_captions":{"type":"boolean","description":"Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."},"passthrough":{"type":"string","description":"This optional parameter should be used tracks with `type` of `text` and `text_type` set to `subtitles`."}}}}}},"asset_id":{"type":"string","description":"Only set once the upload is in the `asset_created` state."},"cors_origin":{"type":"string","description":"If the upload URL will be used in a browser, you must specify the origin in order for the signed URL to have the correct CORS headers."},"url":{"type":"string","description":"The URL to upload the associated source media to."},"test":{"type":"boolean","format":"boolean","description":"Indicates if this is a test Direct Upload, in which case the Asset that gets created will be a `test` Asset."}}},"attempts":{"type":"array","description":"Attempts for sending out the webhook event","items":{"type":"object","properties":{"webhook_id":{"type":"integer","description":"Unique identifier for the webhook"},"response_status_code":{"type":"integer","description":"HTTP response status code for the webhook attempt"},"response_headers":{"type":"object","description":"HTTP response headers for the webhook attempt"},"response_body":{"type":["string","null"],"description":"HTTP response body for the webhook attempt"},"max_attempts":{"description":"Max attempts number for the webhook attempt","type":"integer"},"id":{"description":"Unique identifier for the webhook attempt","type":"string"},"created_at":{"description":"Time the webhook request was attempted","type":"string","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"address":{"description":"URL address for the webhook attempt","type":"string"}}}},"request_id":{"type":["string","null"],"deprecated":true},"accessor":{"type":["string","null"],"deprecated":true},"accessor_source":{"type":["string","null"],"deprecated":true}},"required":["type","id","created_at","object","environment","data","attempts"]},"example":{"cors_origin":"*","id":"ED5NsNEOvAW9kgyL02gMyOygsT00RhgCiCT8r","new_asset_settings":{"mp4_support":"standard","playback_policies":["public"]},"status":"errored","timeout":3600}},"video.live_stream.created":{"description":"A new live stream has been created. Broadcasters with a `stream_key` can start sending encoder feed to this live stream.","payload":{"type":"object","properties":{"type":{"type":"string","description":"Type for the webhook event"},"id":{"type":"string","description":"Unique identifier for the event"},"created_at":{"type":"string","description":"Time the event was created","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"object":{"type":"object","properties":{"type":{"type":"string"},"id":{"type":"string"}},"required":["type","id"]},"environment":{"type":"object","properties":{"name":{"type":"string","description":"Name for the environment"},"id":{"type":"string","description":"Unique identifier for the environment"}},"required":["name","id"]},"data":{"type":"object","x-required":["id","created_at","latency_mode","max_continuous_duration","status","stream_key"],"properties":{"id":{"type":"string","description":"Unique identifier for the Live Stream. Max 255 characters."},"created_at":{"type":"integer","format":"int32"},"stream_key":{"type":"string","description":"Unique key used for streaming to a Mux RTMP endpoint. This should be considered as sensitive as credentials, anyone with this stream key can begin streaming."},"active_asset_id":{"type":"string","description":"The Asset that is currently being created if there is an active broadcast."},"recent_asset_ids":{"type":"array","description":"An array of strings with the most recent Asset IDs that were created from this Live Stream. The most recently generated Asset ID is the last entry in the list.","items":{"type":"string"}},"status":{"type":"string","enum":["active","idle","disabled"],"description":"`idle` indicates that there is no active broadcast. `active` indicates that there is an active broadcast and `disabled` status indicates that no future RTMP streams can be published."},"playback_ids":{"type":"array","description":"An array of Playback ID objects. Use these to create HLS playback URLs. See [Play your videos](https://docs.mux.com/guides/play-your-videos) for more details.","items":{"type":"object","x-required":["id","policy"],"properties":{"id":{"type":"string","description":"Unique identifier for the PlaybackID"},"policy":{"type":"string","enum":["public","signed","drm"],"description":"* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\\n\\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](https://docs.mux.com/guides/secure-video-playback) for details about creating tokens.\\n\\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](https://docs.mux.com/guides/protect-videos-with-drm).\\n"},"drm_configuration_id":{"type":"string","description":"The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."}}}},"new_asset_settings":{"type":"object","properties":{"input":{"type":"array","description":"An array of objects that each describe an input file to be used to create the asset. As a shortcut, input can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.","items":{"type":"object","description":"An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.","properties":{"url":{"type":"string","description":"The URL of the file that Mux should download and use.\\n* For the main input file, this should be the URL to the muxed file for Mux to download, for example an MP4, MOV, MKV, or TS file. Mux supports most audio/video file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](https://docs.mux.com/guides/minimize-processing-time).\\n* For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](https://docs.mux.com/guides/minimize-processing-time).\\n* For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](https://en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](https://www.w3.org/TR/webvtt1/) formats for ingesting Subtitles and Closed Captions.\\n* For Watermarking or Overlay, the URL is the location of the watermark image. The maximum size is 4096x4096.\\n* When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.\\nThe url property may be omitted on the first input object when providing asset settings for LiveStream and Upload objects, in order to configure settings related to the primary (live stream or direct upload) input.\\n"},"overlay_settings":{"type":"object","description":"An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.","properties":{"vertical_align":{"type":"string","enum":["top","middle","bottom"],"description":"Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\\"top\\"`"},"vertical_margin":{"type":"string","description":"The distance from the vertical_align starting point and the image\'s closest edge. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). Negative values will move the overlay offscreen. In the case of \'middle\', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top."},"horizontal_align":{"type":"string","enum":["left","center","right"],"description":"Where the horizontal positioning of the overlay/watermark should begin from."},"horizontal_margin":{"type":"string","description":"The distance from the horizontal_align starting point and the image\'s closest edge. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). Negative values will move the overlay offscreen. In the case of \'center\', a positive value will shift the image towards the right and and a negative value will shift it towards the left."},"width":{"type":"string","description":"How wide the overlay should appear. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height."},"height":{"type":"string","description":"How tall the overlay should appear. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width."},"opacity":{"type":"string","description":"How opaque the overlay should appear, expressed as a percent. (Default 100%)"}}},"generated_subtitles":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"A name for this subtitle track."},"passthrough":{"type":"string","description":"Arbitrary metadata set for the subtitle track. Max 255 characters."},"language_code":{"type":"string","description":"The language to generate subtitles in.","default":"en","enum":["en","es","it","pt","de","fr","pl","ru","nl","ca","tr","sv","uk","no","fi","sk","el","cs","hr","da","ro","bg"]}}},"description":"Generate subtitle tracks using automatic speech recognition with this configuration. This may only be provided for the first input object (the main input file). For direct uploads, this first input should omit the url parameter, as the main input file is provided via the direct upload. This will create subtitles based on the audio track ingested from that main input file. Note that subtitle generation happens after initial ingest, so the generated tracks will be in the `preparing` state when the asset transitions to `ready`."},"start_time":{"type":"number","format":"double","description":"The time offset in seconds from the beginning of the video indicating the clip\'s starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."},"end_time":{"type":"number","format":"double","description":"The time offset in seconds from the beginning of the video, indicating the clip\'s ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."},"type":{"type":"string","enum":["video","audio","text"],"description":"This parameter is required for `text` type tracks."},"text_type":{"type":"string","enum":["subtitles"],"description":"Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](https://mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags/). This parameter is required for `text` type tracks."},"language_code":{"type":"string","description":"The language code value must be a valid [BCP 47](https://tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is required for `text` and `audio` track types."},"name":{"type":"string","description":"The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate a subtitle text track with this value. For example, the value should be \\"English\\" for a subtitle text track with `language_code` set to `en`. This optional parameter should be used only for `text` and `audio` type tracks. This parameter can be optionally provided for the first video input to denote the name of the muxed audio track if present. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value."},"closed_captions":{"type":"boolean","description":"Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."},"passthrough":{"type":"string","description":"This optional parameter should be used tracks with `type` of `text` and `text_type` set to `subtitles`."}}}},"advanced_playback_policies":{"type":"array","items":{"type":"object","properties":{"policy":{"type":"string","enum":["public","signed","drm"],"description":"* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\\n\\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](https://docs.mux.com/guides/secure-video-playback) for details about creating tokens.\\n\\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](https://docs.mux.com/guides/protect-videos-with-drm).\\n"},"drm_configuration_id":{"type":"string","description":"The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."}}},"description":"An array of playback policy objects that you want applied to this asset and available through `playback_ids`. `advanced_playback_policies` must be used instead of `playback_policy` when creating a DRM playback ID.\\n"},"per_title_encode":{"type":"boolean","format":"boolean","x-mux-doc-decorators":["hidden"],"deprecated":true},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata that will be included in the asset details and related webhooks. Can be used to store your own ID for a video along with the asset. **Max: 255 characters**."},"mp4_support":{"type":"string","enum":["none","standard","capped-1080p","audio-only","audio-only,capped-1080p"],"description":"Specify what level of support for mp4 playback.\\n\\n* The `capped-1080p` option produces a single MP4 file, called `capped-1080p.mp4`, with the video resolution capped at 1080p. This option produces an `audio.m4a` file for an audio-only asset.\\n* The `audio-only` option produces a single M4A file, called `audio.m4a` for a video or an audio-only asset. MP4 generation will error when this option is specified for a video-only asset.\\n* The `audio-only,capped-1080p` option produces both the `audio.m4a` and `capped-1080p.mp4` files. Only the `capped-1080p.mp4` file is produced for a video-only asset, while only the `audio.m4a` file is produced for an audio-only asset.\\n\\nThe `standard`(deprecated) option produces up to three MP4 files with different levels of resolution (`high.mp4`, `medium.mp4`, `low.mp4`, or `audio.m4a` for an audio-only asset).\\n\\nMP4 files are not produced for `none` (default).\\n\\nIn most cases you should use our default HLS-based streaming playback (`{playback_id}.m3u8`) which can automatically adjust to viewers\' connection speeds, but an mp4 can be useful for some legacy devices or downloading for offline playback. See the [Download your videos guide](https://docs.mux.com/guides/enable-static-mp4-renditions) for more information.\\n","x-mux-doc-decorators-deprecated-enum-values":["standard"]},"normalize_audio":{"type":"boolean","format":"boolean","description":"Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets.","default":false},"master_access":{"type":"string","enum":["none","temporary"],"description":"Specify what level (if any) of support for master access. Master access can be enabled temporarily for your asset to be downloaded. See the [Download your videos guide](https://docs.mux.com/guides/enable-static-mp4-renditions) for more information."},"test":{"type":"boolean","format":"boolean","description":"Marks the asset as a test asset when the value is set to true. A Test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test asset are watermarked with the Mux logo, limited to 10 seconds, deleted after 24 hrs."},"max_resolution_tier":{"type":"string","enum":["1080p","1440p","2160p"],"description":"Max resolution tier can be used to control the maximum `resolution_tier` your asset is encoded, stored, and streamed at. If not set, this defaults to `1080p`."},"encoding_tier":{"type":"string","deprecated":true,"enum":["smart","baseline","premium"],"description":"This field is deprecated. Please use `video_quality` instead. The encoding tier informs the cost, quality, and available platform features for the asset. The default encoding tier for an account can be set in the Mux Dashboard. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"video_quality":{"type":"string","enum":["basic","plus","premium"],"description":"The video quality controls the cost, quality, and available platform features for the asset. The default video quality for an account can be set in the Mux Dashboard. This field replaces the deprecated `encoding_tier` value. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"playback_policies":{"type":"array","items":{"type":"string","enum":["public","signed","drm"],"description":"* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\\n\\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](https://docs.mux.com/guides/secure-video-playback) for details about creating tokens.\\n\\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](https://docs.mux.com/guides/protect-videos-with-drm).\\n"},"description":"An array of playback policy names that you want applied to this asset and available through `playback_ids`. Options include: `\\"public\\"` (anyone with the playback URL can stream the asset). And `\\"signed\\"` (an additional access token is required to play the asset). If no playback_policy is set, the asset will have no playback IDs and will therefore not be playable. For simplicity, a single string name can be used in place of the array in the case of only one playback policy."},"inputs":{"type":"array","description":"An array of objects that each describe an input file to be used to create the asset. As a shortcut, input can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.","items":{"type":"object","description":"An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.","properties":{"url":{"type":"string","description":"The URL of the file that Mux should download and use.\\n* For the main input file, this should be the URL to the muxed file for Mux to download, for example an MP4, MOV, MKV, or TS file. Mux supports most audio/video file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](https://docs.mux.com/guides/minimize-processing-time).\\n* For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](https://docs.mux.com/guides/minimize-processing-time).\\n* For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](https://en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](https://www.w3.org/TR/webvtt1/) formats for ingesting Subtitles and Closed Captions.\\n* For Watermarking or Overlay, the URL is the location of the watermark image. The maximum size is 4096x4096.\\n* When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.\\nThe url property may be omitted on the first input object when providing asset settings for LiveStream and Upload objects, in order to configure settings related to the primary (live stream or direct upload) input.\\n"},"overlay_settings":{"type":"object","description":"An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.","properties":{"vertical_align":{"type":"string","enum":["top","middle","bottom"],"description":"Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\\"top\\"`"},"vertical_margin":{"type":"string","description":"The distance from the vertical_align starting point and the image\'s closest edge. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). Negative values will move the overlay offscreen. In the case of \'middle\', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top."},"horizontal_align":{"type":"string","enum":["left","center","right"],"description":"Where the horizontal positioning of the overlay/watermark should begin from."},"horizontal_margin":{"type":"string","description":"The distance from the horizontal_align starting point and the image\'s closest edge. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). Negative values will move the overlay offscreen. In the case of \'center\', a positive value will shift the image towards the right and and a negative value will shift it towards the left."},"width":{"type":"string","description":"How wide the overlay should appear. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height."},"height":{"type":"string","description":"How tall the overlay should appear. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width."},"opacity":{"type":"string","description":"How opaque the overlay should appear, expressed as a percent. (Default 100%)"}}},"generated_subtitles":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"A name for this subtitle track."},"passthrough":{"type":"string","description":"Arbitrary metadata set for the subtitle track. Max 255 characters."},"language_code":{"type":"string","description":"The language to generate subtitles in.","default":"en","enum":["en","es","it","pt","de","fr","pl","ru","nl","ca","tr","sv","uk","no","fi","sk","el","cs","hr","da","ro","bg"]}}},"description":"Generate subtitle tracks using automatic speech recognition with this configuration. This may only be provided for the first input object (the main input file). For direct uploads, this first input should omit the url parameter, as the main input file is provided via the direct upload. This will create subtitles based on the audio track ingested from that main input file. Note that subtitle generation happens after initial ingest, so the generated tracks will be in the `preparing` state when the asset transitions to `ready`."},"start_time":{"type":"number","format":"double","description":"The time offset in seconds from the beginning of the video indicating the clip\'s starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."},"end_time":{"type":"number","format":"double","description":"The time offset in seconds from the beginning of the video, indicating the clip\'s ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."},"type":{"type":"string","enum":["video","audio","text"],"description":"This parameter is required for `text` type tracks."},"text_type":{"type":"string","enum":["subtitles"],"description":"Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](https://mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags/). This parameter is required for `text` type tracks."},"language_code":{"type":"string","description":"The language code value must be a valid [BCP 47](https://tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is required for `text` and `audio` track types."},"name":{"type":"string","description":"The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate a subtitle text track with this value. For example, the value should be \\"English\\" for a subtitle text track with `language_code` set to `en`. This optional parameter should be used only for `text` and `audio` type tracks. This parameter can be optionally provided for the first video input to denote the name of the muxed audio track if present. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value."},"closed_captions":{"type":"boolean","description":"Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."},"passthrough":{"type":"string","description":"This optional parameter should be used tracks with `type` of `text` and `text_type` set to `subtitles`."}}}}}},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the asset. Max 255 characters."},"audio_only":{"type":"boolean","description":"The live stream only processes the audio track if the value is set to true. Mux drops the video track if broadcasted."},"embedded_subtitles":{"type":"array","items":{"type":"object","x-required":["name","language_code","language_channel"],"properties":{"name":{"type":"string","description":"A name for this live stream closed caption track."},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the live stream closed caption track. Max 255 characters."},"language_code":{"type":"string","description":"The language of the closed caption stream. Value must be BCP 47 compliant.","default":"en"},"language_channel":{"type":"string","description":"CEA-608 caption channel to read data from.","default":"cc1","enum":["cc1","cc2","cc3","cc4"]}}},"description":"Describes the embedded closed caption configuration of the incoming live stream."},"generated_subtitles":{"type":"array","items":{"type":"object","x-required":["name","language_code"],"properties":{"name":{"type":"string","description":"A name for this live stream subtitle track."},"passthrough":{"type":"string","description":"Arbitrary metadata set for the live stream subtitle track. Max 255 characters."},"language_code":{"type":"string","description":"The language to generate subtitles in.","default":"en","enum":["en","en-US"]},"transcription_vocabulary_ids":{"type":"array","items":{"type":"string"},"description":"Unique identifiers for existing Transcription Vocabularies to use while generating subtitles for the live stream. If the Transcription Vocabularies provided collectively have more than 1000 phrases, only the first 1000 phrases will be included."}}},"description":"Configure the incoming live stream to include subtitles created with automatic speech recognition. Each Asset created from a live stream with `generated_subtitles` configured will automatically receive two text tracks. The first of these will have a `text_source` value of `generated_live`, and will be available with `ready` status as soon as the stream is live. The second text track will have a `text_source` value of `generated_live_final` and will contain subtitles with improved accuracy, timing, and formatting. However, `generated_live_final` tracks will not be available in `ready` status until the live stream ends. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback."},"reconnect_window":{"type":"number","format":"float","default":60,"minimum":0,"maximum":1800,"description":"When live streaming software disconnects from Mux, either intentionally or due to a drop in the network, the Reconnect Window is the time in seconds that Mux should wait for the streaming software to reconnect before considering the live stream finished and completing the recorded asset. **Max**: 1800s (30 minutes).\\n\\nIf not specified directly, Standard Latency streams have a Reconnect Window of 60 seconds; Reduced and Low Latency streams have a default of 0 seconds, or no Reconnect Window. For that reason, we suggest specifying a value other than zero for Reduced and Low Latency streams.\\n\\nReduced and Low Latency streams with a Reconnect Window greater than zero will insert slate media into the recorded asset while waiting for the streaming software to reconnect or when there are brief interruptions in the live stream media. When using a Reconnect Window setting higher than 60 seconds with a Standard Latency stream, we highly recommend enabling slate with the `use_slate_for_standard_latency` option.\\n"},"use_slate_for_standard_latency":{"type":"boolean","format":"boolean","default":false,"description":"By default, Standard Latency live streams do not have slate media inserted while waiting for live streaming software to reconnect to Mux. Setting this to true enables slate insertion on a Standard Latency stream."},"reconnect_slate_url":{"type":"string","description":"The URL of the image file that Mux should download and use as slate media during interruptions of the live stream media. This file will be downloaded each time a new recorded asset is created from the live stream. If this is not set, the default slate media will be used."},"reduced_latency":{"type":"boolean","format":"boolean","deprecated":true,"x-mux-doc-decorators":["hidden"],"description":"This field is deprecated. Please use `latency_mode` instead. Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Set this if you want lower latency for your live stream. See the [Reduce live stream latency guide](https://docs.mux.com/guides/reduce-live-stream-latency) to understand the tradeoffs."},"low_latency":{"type":"boolean","format":"boolean","deprecated":true,"x-mux-doc-decorators":["hidden"],"description":"This field is deprecated. Please use `latency_mode` instead. Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Setting this option will enable compatibility with the LL-HLS specification for low-latency streaming. This typically has lower latency than Reduced Latency streams, and cannot be combined with Reduced Latency."},"simulcast_targets":{"type":"array","description":"Each Simulcast Target contains configuration details to broadcast (or \\"restream\\") a live stream to a third-party streaming service. [See the Stream live to 3rd party platforms guide](https://docs.mux.com/guides/stream-live-to-3rd-party-platforms).","items":{"type":"object","x-required":["id","url","status"],"properties":{"id":{"type":"string","description":"ID of the Simulcast Target"},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set when creating a simulcast target."},"status":{"type":"string","enum":["idle","starting","broadcasting","errored"],"description":"The current status of the simulcast target. See Statuses below for detailed description.\\n  * `idle`: Default status. When the parent live stream is in disconnected status, simulcast targets will be idle state.\\n  * `starting`: The simulcast target transitions into this state when the parent live stream transition into connected state.\\n  * `broadcasting`: The simulcast target has successfully connected to the third party live streaming service and is pushing video to that service.\\n  * `errored`: The simulcast target encountered an error either while attempting to connect to the third party live streaming service, or mid-broadcasting. When a simulcast target has this status it will have an `error_severity` field with more details about the error.\\n"},"stream_key":{"type":"string","description":"Stream Key represents a stream identifier on the third party live streaming service to send the parent live stream to. Only used for RTMP(s) simulcast destinations."},"url":{"type":"string","description":"The RTMP(s) or SRT endpoint for a simulcast destination.\\n* For RTMP(s) destinations, this should include the application name for the third party live streaming service, for example: `rtmp://live.example.com/app`.\\n* For SRT destinations, this should be a fully formed SRT connection string, for example: `srt://srt-live.example.com:1234?streamid={stream_key}&passphrase={srt_passphrase}`.\\n\\nNote: SRT simulcast targets can only be used when an source is connected over SRT.\\n"},"error_severity":{"type":"string","enum":["normal","fatal"],"description":"The severity of the error encountered by the simulcast target.\\nThis field is only set when the simulcast target is in the `errored` status.\\nSee the values of severities below and their descriptions.\\n  * `normal`: The simulcast target encountered an error either while attempting to connect to the third party live streaming service, or mid-broadcasting. A simulcast may transition back into the broadcasting state if a connection with the service can be re-established.\\n  * `fatal`: The simulcast target is incompatible with the current input to the parent live stream. No further attempts to this simulcast target will be made for the current live stream asset.\\n"}}}},"latency_mode":{"type":"string","enum":["low","reduced","standard"],"description":"Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Set this as an alternative to setting low latency or reduced latency flags."},"test":{"type":"boolean","format":"boolean","description":"True means this live stream is a test live stream. Test live streams can be used to help evaluate the Mux Video APIs for free. There is no limit on the number of test live streams, but they are watermarked with the Mux logo, and limited to 5 minutes. The test live stream is disabled after the stream is active for 5 mins and the recorded asset also deleted after 24 hours."},"max_continuous_duration":{"type":"integer","format":"int32","default":43200,"minimum":60,"maximum":43200,"description":"The time in seconds a live stream may be continuously active before being disconnected. Defaults to 12 hours."},"srt_passphrase":{"type":"string","description":"Unique key used for encrypting a stream to a Mux SRT endpoint."},"active_ingest_protocol":{"type":"string","enum":["rtmp","srt"],"description":"The protocol used for the active ingest stream. This is only set when the live stream is active."},"connected":{"type":"boolean"},"recording":{"type":"boolean"}}},"attempts":{"type":"array","description":"Attempts for sending out the webhook event","items":{"type":"object","properties":{"webhook_id":{"type":"integer","description":"Unique identifier for the webhook"},"response_status_code":{"type":"integer","description":"HTTP response status code for the webhook attempt"},"response_headers":{"type":"object","description":"HTTP response headers for the webhook attempt"},"response_body":{"type":["string","null"],"description":"HTTP response body for the webhook attempt"},"max_attempts":{"description":"Max attempts number for the webhook attempt","type":"integer"},"id":{"description":"Unique identifier for the webhook attempt","type":"string"},"created_at":{"description":"Time the webhook request was attempted","type":"string","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"address":{"description":"URL address for the webhook attempt","type":"string"}}}},"request_id":{"type":["string","null"],"deprecated":true},"accessor":{"type":["string","null"],"deprecated":true},"accessor_source":{"type":["string","null"],"deprecated":true}},"required":["type","id","created_at","object","environment","data","attempts"]},"example":{"active_asset_id":"SqQnqz6s5MBuXGvJaUWdXuXM93J9Q2yv","connected":true,"created_at":1606259944,"id":"sY7b7fW01LImWpoOv2oiVROwHv5Y","latency_mode":"reduced","max_continuous_duration":43200,"new_asset_settings":{"master_access":"temporary","playback_policies":["signed"]},"passthrough":"mux","playback_ids":[{"id":"BdTpnH6KkY01U004fGsErAPvVaRP6sIxkR","policy":"signed"}],"recent_asset_ids":["kaYHEoG9HMtnEGXlVGNqk2UheY02","B01x902mrEJ006aBOnF7j01HVf3I"],"reconnect_window":60,"recording":true,"reduced_latency":true,"status":"idle","stream_key":"5d42bb65-91b5-bb65-4ebf-5d42bb65"}},"video.live_stream.connected":{"description":"An encoder has successfully connected to this live stream.","payload":{"type":"object","properties":{"type":{"type":"string","description":"Type for the webhook event"},"id":{"type":"string","description":"Unique identifier for the event"},"created_at":{"type":"string","description":"Time the event was created","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"object":{"type":"object","properties":{"type":{"type":"string"},"id":{"type":"string"}},"required":["type","id"]},"environment":{"type":"object","properties":{"name":{"type":"string","description":"Name for the environment"},"id":{"type":"string","description":"Unique identifier for the environment"}},"required":["name","id"]},"data":{"type":"object","x-required":["id","created_at","latency_mode","max_continuous_duration","status","stream_key"],"properties":{"id":{"type":"string","description":"Unique identifier for the Live Stream. Max 255 characters."},"created_at":{"type":"integer","format":"int32"},"stream_key":{"type":"string","description":"Unique key used for streaming to a Mux RTMP endpoint. This should be considered as sensitive as credentials, anyone with this stream key can begin streaming."},"active_asset_id":{"type":"string","description":"The Asset that is currently being created if there is an active broadcast."},"recent_asset_ids":{"type":"array","description":"An array of strings with the most recent Asset IDs that were created from this Live Stream. The most recently generated Asset ID is the last entry in the list.","items":{"type":"string"}},"status":{"type":"string","enum":["active","idle","disabled"],"description":"`idle` indicates that there is no active broadcast. `active` indicates that there is an active broadcast and `disabled` status indicates that no future RTMP streams can be published."},"playback_ids":{"type":"array","description":"An array of Playback ID objects. Use these to create HLS playback URLs. See [Play your videos](https://docs.mux.com/guides/play-your-videos) for more details.","items":{"type":"object","x-required":["id","policy"],"properties":{"id":{"type":"string","description":"Unique identifier for the PlaybackID"},"policy":{"type":"string","enum":["public","signed","drm"],"description":"* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\\n\\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](https://docs.mux.com/guides/secure-video-playback) for details about creating tokens.\\n\\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](https://docs.mux.com/guides/protect-videos-with-drm).\\n"},"drm_configuration_id":{"type":"string","description":"The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."}}}},"new_asset_settings":{"type":"object","properties":{"input":{"type":"array","description":"An array of objects that each describe an input file to be used to create the asset. As a shortcut, input can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.","items":{"type":"object","description":"An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.","properties":{"url":{"type":"string","description":"The URL of the file that Mux should download and use.\\n* For the main input file, this should be the URL to the muxed file for Mux to download, for example an MP4, MOV, MKV, or TS file. Mux supports most audio/video file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](https://docs.mux.com/guides/minimize-processing-time).\\n* For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](https://docs.mux.com/guides/minimize-processing-time).\\n* For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](https://en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](https://www.w3.org/TR/webvtt1/) formats for ingesting Subtitles and Closed Captions.\\n* For Watermarking or Overlay, the URL is the location of the watermark image. The maximum size is 4096x4096.\\n* When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.\\nThe url property may be omitted on the first input object when providing asset settings for LiveStream and Upload objects, in order to configure settings related to the primary (live stream or direct upload) input.\\n"},"overlay_settings":{"type":"object","description":"An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.","properties":{"vertical_align":{"type":"string","enum":["top","middle","bottom"],"description":"Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\\"top\\"`"},"vertical_margin":{"type":"string","description":"The distance from the vertical_align starting point and the image\'s closest edge. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). Negative values will move the overlay offscreen. In the case of \'middle\', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top."},"horizontal_align":{"type":"string","enum":["left","center","right"],"description":"Where the horizontal positioning of the overlay/watermark should begin from."},"horizontal_margin":{"type":"string","description":"The distance from the horizontal_align starting point and the image\'s closest edge. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). Negative values will move the overlay offscreen. In the case of \'center\', a positive value will shift the image towards the right and and a negative value will shift it towards the left."},"width":{"type":"string","description":"How wide the overlay should appear. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height."},"height":{"type":"string","description":"How tall the overlay should appear. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width."},"opacity":{"type":"string","description":"How opaque the overlay should appear, expressed as a percent. (Default 100%)"}}},"generated_subtitles":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"A name for this subtitle track."},"passthrough":{"type":"string","description":"Arbitrary metadata set for the subtitle track. Max 255 characters."},"language_code":{"type":"string","description":"The language to generate subtitles in.","default":"en","enum":["en","es","it","pt","de","fr","pl","ru","nl","ca","tr","sv","uk","no","fi","sk","el","cs","hr","da","ro","bg"]}}},"description":"Generate subtitle tracks using automatic speech recognition with this configuration. This may only be provided for the first input object (the main input file). For direct uploads, this first input should omit the url parameter, as the main input file is provided via the direct upload. This will create subtitles based on the audio track ingested from that main input file. Note that subtitle generation happens after initial ingest, so the generated tracks will be in the `preparing` state when the asset transitions to `ready`."},"start_time":{"type":"number","format":"double","description":"The time offset in seconds from the beginning of the video indicating the clip\'s starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."},"end_time":{"type":"number","format":"double","description":"The time offset in seconds from the beginning of the video, indicating the clip\'s ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."},"type":{"type":"string","enum":["video","audio","text"],"description":"This parameter is required for `text` type tracks."},"text_type":{"type":"string","enum":["subtitles"],"description":"Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](https://mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags/). This parameter is required for `text` type tracks."},"language_code":{"type":"string","description":"The language code value must be a valid [BCP 47](https://tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is required for `text` and `audio` track types."},"name":{"type":"string","description":"The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate a subtitle text track with this value. For example, the value should be \\"English\\" for a subtitle text track with `language_code` set to `en`. This optional parameter should be used only for `text` and `audio` type tracks. This parameter can be optionally provided for the first video input to denote the name of the muxed audio track if present. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value."},"closed_captions":{"type":"boolean","description":"Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."},"passthrough":{"type":"string","description":"This optional parameter should be used tracks with `type` of `text` and `text_type` set to `subtitles`."}}}},"advanced_playback_policies":{"type":"array","items":{"type":"object","properties":{"policy":{"type":"string","enum":["public","signed","drm"],"description":"* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\\n\\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](https://docs.mux.com/guides/secure-video-playback) for details about creating tokens.\\n\\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](https://docs.mux.com/guides/protect-videos-with-drm).\\n"},"drm_configuration_id":{"type":"string","description":"The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."}}},"description":"An array of playback policy objects that you want applied to this asset and available through `playback_ids`. `advanced_playback_policies` must be used instead of `playback_policy` when creating a DRM playback ID.\\n"},"per_title_encode":{"type":"boolean","format":"boolean","x-mux-doc-decorators":["hidden"],"deprecated":true},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata that will be included in the asset details and related webhooks. Can be used to store your own ID for a video along with the asset. **Max: 255 characters**."},"mp4_support":{"type":"string","enum":["none","standard","capped-1080p","audio-only","audio-only,capped-1080p"],"description":"Specify what level of support for mp4 playback.\\n\\n* The `capped-1080p` option produces a single MP4 file, called `capped-1080p.mp4`, with the video resolution capped at 1080p. This option produces an `audio.m4a` file for an audio-only asset.\\n* The `audio-only` option produces a single M4A file, called `audio.m4a` for a video or an audio-only asset. MP4 generation will error when this option is specified for a video-only asset.\\n* The `audio-only,capped-1080p` option produces both the `audio.m4a` and `capped-1080p.mp4` files. Only the `capped-1080p.mp4` file is produced for a video-only asset, while only the `audio.m4a` file is produced for an audio-only asset.\\n\\nThe `standard`(deprecated) option produces up to three MP4 files with different levels of resolution (`high.mp4`, `medium.mp4`, `low.mp4`, or `audio.m4a` for an audio-only asset).\\n\\nMP4 files are not produced for `none` (default).\\n\\nIn most cases you should use our default HLS-based streaming playback (`{playback_id}.m3u8`) which can automatically adjust to viewers\' connection speeds, but an mp4 can be useful for some legacy devices or downloading for offline playback. See the [Download your videos guide](https://docs.mux.com/guides/enable-static-mp4-renditions) for more information.\\n","x-mux-doc-decorators-deprecated-enum-values":["standard"]},"normalize_audio":{"type":"boolean","format":"boolean","description":"Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets.","default":false},"master_access":{"type":"string","enum":["none","temporary"],"description":"Specify what level (if any) of support for master access. Master access can be enabled temporarily for your asset to be downloaded. See the [Download your videos guide](https://docs.mux.com/guides/enable-static-mp4-renditions) for more information."},"test":{"type":"boolean","format":"boolean","description":"Marks the asset as a test asset when the value is set to true. A Test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test asset are watermarked with the Mux logo, limited to 10 seconds, deleted after 24 hrs."},"max_resolution_tier":{"type":"string","enum":["1080p","1440p","2160p"],"description":"Max resolution tier can be used to control the maximum `resolution_tier` your asset is encoded, stored, and streamed at. If not set, this defaults to `1080p`."},"encoding_tier":{"type":"string","deprecated":true,"enum":["smart","baseline","premium"],"description":"This field is deprecated. Please use `video_quality` instead. The encoding tier informs the cost, quality, and available platform features for the asset. The default encoding tier for an account can be set in the Mux Dashboard. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"video_quality":{"type":"string","enum":["basic","plus","premium"],"description":"The video quality controls the cost, quality, and available platform features for the asset. The default video quality for an account can be set in the Mux Dashboard. This field replaces the deprecated `encoding_tier` value. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"playback_policies":{"type":"array","items":{"type":"string","enum":["public","signed","drm"],"description":"* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\\n\\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](https://docs.mux.com/guides/secure-video-playback) for details about creating tokens.\\n\\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](https://docs.mux.com/guides/protect-videos-with-drm).\\n"},"description":"An array of playback policy names that you want applied to this asset and available through `playback_ids`. Options include: `\\"public\\"` (anyone with the playback URL can stream the asset). And `\\"signed\\"` (an additional access token is required to play the asset). If no playback_policy is set, the asset will have no playback IDs and will therefore not be playable. For simplicity, a single string name can be used in place of the array in the case of only one playback policy."},"inputs":{"type":"array","description":"An array of objects that each describe an input file to be used to create the asset. As a shortcut, input can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.","items":{"type":"object","description":"An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.","properties":{"url":{"type":"string","description":"The URL of the file that Mux should download and use.\\n* For the main input file, this should be the URL to the muxed file for Mux to download, for example an MP4, MOV, MKV, or TS file. Mux supports most audio/video file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](https://docs.mux.com/guides/minimize-processing-time).\\n* For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](https://docs.mux.com/guides/minimize-processing-time).\\n* For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](https://en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](https://www.w3.org/TR/webvtt1/) formats for ingesting Subtitles and Closed Captions.\\n* For Watermarking or Overlay, the URL is the location of the watermark image. The maximum size is 4096x4096.\\n* When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.\\nThe url property may be omitted on the first input object when providing asset settings for LiveStream and Upload objects, in order to configure settings related to the primary (live stream or direct upload) input.\\n"},"overlay_settings":{"type":"object","description":"An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.","properties":{"vertical_align":{"type":"string","enum":["top","middle","bottom"],"description":"Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\\"top\\"`"},"vertical_margin":{"type":"string","description":"The distance from the vertical_align starting point and the image\'s closest edge. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). Negative values will move the overlay offscreen. In the case of \'middle\', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top."},"horizontal_align":{"type":"string","enum":["left","center","right"],"description":"Where the horizontal positioning of the overlay/watermark should begin from."},"horizontal_margin":{"type":"string","description":"The distance from the horizontal_align starting point and the image\'s closest edge. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). Negative values will move the overlay offscreen. In the case of \'center\', a positive value will shift the image towards the right and and a negative value will shift it towards the left."},"width":{"type":"string","description":"How wide the overlay should appear. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height."},"height":{"type":"string","description":"How tall the overlay should appear. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width."},"opacity":{"type":"string","description":"How opaque the overlay should appear, expressed as a percent. (Default 100%)"}}},"generated_subtitles":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"A name for this subtitle track."},"passthrough":{"type":"string","description":"Arbitrary metadata set for the subtitle track. Max 255 characters."},"language_code":{"type":"string","description":"The language to generate subtitles in.","default":"en","enum":["en","es","it","pt","de","fr","pl","ru","nl","ca","tr","sv","uk","no","fi","sk","el","cs","hr","da","ro","bg"]}}},"description":"Generate subtitle tracks using automatic speech recognition with this configuration. This may only be provided for the first input object (the main input file). For direct uploads, this first input should omit the url parameter, as the main input file is provided via the direct upload. This will create subtitles based on the audio track ingested from that main input file. Note that subtitle generation happens after initial ingest, so the generated tracks will be in the `preparing` state when the asset transitions to `ready`."},"start_time":{"type":"number","format":"double","description":"The time offset in seconds from the beginning of the video indicating the clip\'s starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."},"end_time":{"type":"number","format":"double","description":"The time offset in seconds from the beginning of the video, indicating the clip\'s ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."},"type":{"type":"string","enum":["video","audio","text"],"description":"This parameter is required for `text` type tracks."},"text_type":{"type":"string","enum":["subtitles"],"description":"Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](https://mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags/). This parameter is required for `text` type tracks."},"language_code":{"type":"string","description":"The language code value must be a valid [BCP 47](https://tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is required for `text` and `audio` track types."},"name":{"type":"string","description":"The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate a subtitle text track with this value. For example, the value should be \\"English\\" for a subtitle text track with `language_code` set to `en`. This optional parameter should be used only for `text` and `audio` type tracks. This parameter can be optionally provided for the first video input to denote the name of the muxed audio track if present. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value."},"closed_captions":{"type":"boolean","description":"Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."},"passthrough":{"type":"string","description":"This optional parameter should be used tracks with `type` of `text` and `text_type` set to `subtitles`."}}}}}},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the asset. Max 255 characters."},"audio_only":{"type":"boolean","description":"The live stream only processes the audio track if the value is set to true. Mux drops the video track if broadcasted."},"embedded_subtitles":{"type":"array","items":{"type":"object","x-required":["name","language_code","language_channel"],"properties":{"name":{"type":"string","description":"A name for this live stream closed caption track."},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the live stream closed caption track. Max 255 characters."},"language_code":{"type":"string","description":"The language of the closed caption stream. Value must be BCP 47 compliant.","default":"en"},"language_channel":{"type":"string","description":"CEA-608 caption channel to read data from.","default":"cc1","enum":["cc1","cc2","cc3","cc4"]}}},"description":"Describes the embedded closed caption configuration of the incoming live stream."},"generated_subtitles":{"type":"array","items":{"type":"object","x-required":["name","language_code"],"properties":{"name":{"type":"string","description":"A name for this live stream subtitle track."},"passthrough":{"type":"string","description":"Arbitrary metadata set for the live stream subtitle track. Max 255 characters."},"language_code":{"type":"string","description":"The language to generate subtitles in.","default":"en","enum":["en","en-US"]},"transcription_vocabulary_ids":{"type":"array","items":{"type":"string"},"description":"Unique identifiers for existing Transcription Vocabularies to use while generating subtitles for the live stream. If the Transcription Vocabularies provided collectively have more than 1000 phrases, only the first 1000 phrases will be included."}}},"description":"Configure the incoming live stream to include subtitles created with automatic speech recognition. Each Asset created from a live stream with `generated_subtitles` configured will automatically receive two text tracks. The first of these will have a `text_source` value of `generated_live`, and will be available with `ready` status as soon as the stream is live. The second text track will have a `text_source` value of `generated_live_final` and will contain subtitles with improved accuracy, timing, and formatting. However, `generated_live_final` tracks will not be available in `ready` status until the live stream ends. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback."},"reconnect_window":{"type":"number","format":"float","default":60,"minimum":0,"maximum":1800,"description":"When live streaming software disconnects from Mux, either intentionally or due to a drop in the network, the Reconnect Window is the time in seconds that Mux should wait for the streaming software to reconnect before considering the live stream finished and completing the recorded asset. **Max**: 1800s (30 minutes).\\n\\nIf not specified directly, Standard Latency streams have a Reconnect Window of 60 seconds; Reduced and Low Latency streams have a default of 0 seconds, or no Reconnect Window. For that reason, we suggest specifying a value other than zero for Reduced and Low Latency streams.\\n\\nReduced and Low Latency streams with a Reconnect Window greater than zero will insert slate media into the recorded asset while waiting for the streaming software to reconnect or when there are brief interruptions in the live stream media. When using a Reconnect Window setting higher than 60 seconds with a Standard Latency stream, we highly recommend enabling slate with the `use_slate_for_standard_latency` option.\\n"},"use_slate_for_standard_latency":{"type":"boolean","format":"boolean","default":false,"description":"By default, Standard Latency live streams do not have slate media inserted while waiting for live streaming software to reconnect to Mux. Setting this to true enables slate insertion on a Standard Latency stream."},"reconnect_slate_url":{"type":"string","description":"The URL of the image file that Mux should download and use as slate media during interruptions of the live stream media. This file will be downloaded each time a new recorded asset is created from the live stream. If this is not set, the default slate media will be used."},"reduced_latency":{"type":"boolean","format":"boolean","deprecated":true,"x-mux-doc-decorators":["hidden"],"description":"This field is deprecated. Please use `latency_mode` instead. Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Set this if you want lower latency for your live stream. See the [Reduce live stream latency guide](https://docs.mux.com/guides/reduce-live-stream-latency) to understand the tradeoffs."},"low_latency":{"type":"boolean","format":"boolean","deprecated":true,"x-mux-doc-decorators":["hidden"],"description":"This field is deprecated. Please use `latency_mode` instead. Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Setting this option will enable compatibility with the LL-HLS specification for low-latency streaming. This typically has lower latency than Reduced Latency streams, and cannot be combined with Reduced Latency."},"simulcast_targets":{"type":"array","description":"Each Simulcast Target contains configuration details to broadcast (or \\"restream\\") a live stream to a third-party streaming service. [See the Stream live to 3rd party platforms guide](https://docs.mux.com/guides/stream-live-to-3rd-party-platforms).","items":{"type":"object","x-required":["id","url","status"],"properties":{"id":{"type":"string","description":"ID of the Simulcast Target"},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set when creating a simulcast target."},"status":{"type":"string","enum":["idle","starting","broadcasting","errored"],"description":"The current status of the simulcast target. See Statuses below for detailed description.\\n  * `idle`: Default status. When the parent live stream is in disconnected status, simulcast targets will be idle state.\\n  * `starting`: The simulcast target transitions into this state when the parent live stream transition into connected state.\\n  * `broadcasting`: The simulcast target has successfully connected to the third party live streaming service and is pushing video to that service.\\n  * `errored`: The simulcast target encountered an error either while attempting to connect to the third party live streaming service, or mid-broadcasting. When a simulcast target has this status it will have an `error_severity` field with more details about the error.\\n"},"stream_key":{"type":"string","description":"Stream Key represents a stream identifier on the third party live streaming service to send the parent live stream to. Only used for RTMP(s) simulcast destinations."},"url":{"type":"string","description":"The RTMP(s) or SRT endpoint for a simulcast destination.\\n* For RTMP(s) destinations, this should include the application name for the third party live streaming service, for example: `rtmp://live.example.com/app`.\\n* For SRT destinations, this should be a fully formed SRT connection string, for example: `srt://srt-live.example.com:1234?streamid={stream_key}&passphrase={srt_passphrase}`.\\n\\nNote: SRT simulcast targets can only be used when an source is connected over SRT.\\n"},"error_severity":{"type":"string","enum":["normal","fatal"],"description":"The severity of the error encountered by the simulcast target.\\nThis field is only set when the simulcast target is in the `errored` status.\\nSee the values of severities below and their descriptions.\\n  * `normal`: The simulcast target encountered an error either while attempting to connect to the third party live streaming service, or mid-broadcasting. A simulcast may transition back into the broadcasting state if a connection with the service can be re-established.\\n  * `fatal`: The simulcast target is incompatible with the current input to the parent live stream. No further attempts to this simulcast target will be made for the current live stream asset.\\n"}}}},"latency_mode":{"type":"string","enum":["low","reduced","standard"],"description":"Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Set this as an alternative to setting low latency or reduced latency flags."},"test":{"type":"boolean","format":"boolean","description":"True means this live stream is a test live stream. Test live streams can be used to help evaluate the Mux Video APIs for free. There is no limit on the number of test live streams, but they are watermarked with the Mux logo, and limited to 5 minutes. The test live stream is disabled after the stream is active for 5 mins and the recorded asset also deleted after 24 hours."},"max_continuous_duration":{"type":"integer","format":"int32","default":43200,"minimum":60,"maximum":43200,"description":"The time in seconds a live stream may be continuously active before being disconnected. Defaults to 12 hours."},"srt_passphrase":{"type":"string","description":"Unique key used for encrypting a stream to a Mux SRT endpoint."},"active_ingest_protocol":{"type":"string","enum":["rtmp","srt"],"description":"The protocol used for the active ingest stream. This is only set when the live stream is active."},"connected":{"type":"boolean"},"recording":{"type":"boolean"}}},"attempts":{"type":"array","description":"Attempts for sending out the webhook event","items":{"type":"object","properties":{"webhook_id":{"type":"integer","description":"Unique identifier for the webhook"},"response_status_code":{"type":"integer","description":"HTTP response status code for the webhook attempt"},"response_headers":{"type":"object","description":"HTTP response headers for the webhook attempt"},"response_body":{"type":["string","null"],"description":"HTTP response body for the webhook attempt"},"max_attempts":{"description":"Max attempts number for the webhook attempt","type":"integer"},"id":{"description":"Unique identifier for the webhook attempt","type":"string"},"created_at":{"description":"Time the webhook request was attempted","type":"string","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"address":{"description":"URL address for the webhook attempt","type":"string"}}}},"request_id":{"type":["string","null"],"deprecated":true},"accessor":{"type":["string","null"],"deprecated":true},"accessor_source":{"type":["string","null"],"deprecated":true}},"required":["type","id","created_at","object","environment","data","attempts"]},"example":{"active_asset_id":"SqQnqz6s5MBuXGvJaUWdXuXM93J9Q2yv","connected":true,"created_at":1606259944,"id":"sY7b7fW01LImWpoOv2oiVROwHv5Y","latency_mode":"reduced","max_continuous_duration":43200,"new_asset_settings":{"master_access":"temporary","playback_policies":["signed"]},"passthrough":"mux","playback_ids":[{"id":"BdTpnH6KkY01U004fGsErAPvVaRP6sIxkR","policy":"signed"}],"recent_asset_ids":["kaYHEoG9HMtnEGXlVGNqk2UheY02","B01x902mrEJ006aBOnF7j01HVf3I"],"reconnect_window":60,"recording":true,"reduced_latency":true,"status":"idle","stream_key":"5d42bb65-91b5-bb65-4ebf-5d42bb65","active_ingest_protocol":"rtmp"}},"video.live_stream.recording":{"description":"Recording on this live stream has started. Mux has successfully processed the first frames from the encoder. If you show a _red dot_ icon in your UI, this would be a good time to show it.","payload":{"type":"object","properties":{"type":{"type":"string","description":"Type for the webhook event"},"id":{"type":"string","description":"Unique identifier for the event"},"created_at":{"type":"string","description":"Time the event was created","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"object":{"type":"object","properties":{"type":{"type":"string"},"id":{"type":"string"}},"required":["type","id"]},"environment":{"type":"object","properties":{"name":{"type":"string","description":"Name for the environment"},"id":{"type":"string","description":"Unique identifier for the environment"}},"required":["name","id"]},"data":{"type":"object","x-required":["id","created_at","latency_mode","max_continuous_duration","status","stream_key"],"properties":{"id":{"type":"string","description":"Unique identifier for the Live Stream. Max 255 characters."},"created_at":{"type":"integer","format":"int32"},"stream_key":{"type":"string","description":"Unique key used for streaming to a Mux RTMP endpoint. This should be considered as sensitive as credentials, anyone with this stream key can begin streaming."},"active_asset_id":{"type":"string","description":"The Asset that is currently being created if there is an active broadcast."},"recent_asset_ids":{"type":"array","description":"An array of strings with the most recent Asset IDs that were created from this Live Stream. The most recently generated Asset ID is the last entry in the list.","items":{"type":"string"}},"status":{"type":"string","enum":["active","idle","disabled"],"description":"`idle` indicates that there is no active broadcast. `active` indicates that there is an active broadcast and `disabled` status indicates that no future RTMP streams can be published."},"playback_ids":{"type":"array","description":"An array of Playback ID objects. Use these to create HLS playback URLs. See [Play your videos](https://docs.mux.com/guides/play-your-videos) for more details.","items":{"type":"object","x-required":["id","policy"],"properties":{"id":{"type":"string","description":"Unique identifier for the PlaybackID"},"policy":{"type":"string","enum":["public","signed","drm"],"description":"* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\\n\\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](https://docs.mux.com/guides/secure-video-playback) for details about creating tokens.\\n\\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](https://docs.mux.com/guides/protect-videos-with-drm).\\n"},"drm_configuration_id":{"type":"string","description":"The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."}}}},"new_asset_settings":{"type":"object","properties":{"input":{"type":"array","description":"An array of objects that each describe an input file to be used to create the asset. As a shortcut, input can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.","items":{"type":"object","description":"An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.","properties":{"url":{"type":"string","description":"The URL of the file that Mux should download and use.\\n* For the main input file, this should be the URL to the muxed file for Mux to download, for example an MP4, MOV, MKV, or TS file. Mux supports most audio/video file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](https://docs.mux.com/guides/minimize-processing-time).\\n* For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](https://docs.mux.com/guides/minimize-processing-time).\\n* For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](https://en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](https://www.w3.org/TR/webvtt1/) formats for ingesting Subtitles and Closed Captions.\\n* For Watermarking or Overlay, the URL is the location of the watermark image. The maximum size is 4096x4096.\\n* When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.\\nThe url property may be omitted on the first input object when providing asset settings for LiveStream and Upload objects, in order to configure settings related to the primary (live stream or direct upload) input.\\n"},"overlay_settings":{"type":"object","description":"An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.","properties":{"vertical_align":{"type":"string","enum":["top","middle","bottom"],"description":"Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\\"top\\"`"},"vertical_margin":{"type":"string","description":"The distance from the vertical_align starting point and the image\'s closest edge. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). Negative values will move the overlay offscreen. In the case of \'middle\', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top."},"horizontal_align":{"type":"string","enum":["left","center","right"],"description":"Where the horizontal positioning of the overlay/watermark should begin from."},"horizontal_margin":{"type":"string","description":"The distance from the horizontal_align starting point and the image\'s closest edge. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). Negative values will move the overlay offscreen. In the case of \'center\', a positive value will shift the image towards the right and and a negative value will shift it towards the left."},"width":{"type":"string","description":"How wide the overlay should appear. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height."},"height":{"type":"string","description":"How tall the overlay should appear. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width."},"opacity":{"type":"string","description":"How opaque the overlay should appear, expressed as a percent. (Default 100%)"}}},"generated_subtitles":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"A name for this subtitle track."},"passthrough":{"type":"string","description":"Arbitrary metadata set for the subtitle track. Max 255 characters."},"language_code":{"type":"string","description":"The language to generate subtitles in.","default":"en","enum":["en","es","it","pt","de","fr","pl","ru","nl","ca","tr","sv","uk","no","fi","sk","el","cs","hr","da","ro","bg"]}}},"description":"Generate subtitle tracks using automatic speech recognition with this configuration. This may only be provided for the first input object (the main input file). For direct uploads, this first input should omit the url parameter, as the main input file is provided via the direct upload. This will create subtitles based on the audio track ingested from that main input file. Note that subtitle generation happens after initial ingest, so the generated tracks will be in the `preparing` state when the asset transitions to `ready`."},"start_time":{"type":"number","format":"double","description":"The time offset in seconds from the beginning of the video indicating the clip\'s starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."},"end_time":{"type":"number","format":"double","description":"The time offset in seconds from the beginning of the video, indicating the clip\'s ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."},"type":{"type":"string","enum":["video","audio","text"],"description":"This parameter is required for `text` type tracks."},"text_type":{"type":"string","enum":["subtitles"],"description":"Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](https://mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags/). This parameter is required for `text` type tracks."},"language_code":{"type":"string","description":"The language code value must be a valid [BCP 47](https://tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is required for `text` and `audio` track types."},"name":{"type":"string","description":"The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate a subtitle text track with this value. For example, the value should be \\"English\\" for a subtitle text track with `language_code` set to `en`. This optional parameter should be used only for `text` and `audio` type tracks. This parameter can be optionally provided for the first video input to denote the name of the muxed audio track if present. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value."},"closed_captions":{"type":"boolean","description":"Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."},"passthrough":{"type":"string","description":"This optional parameter should be used tracks with `type` of `text` and `text_type` set to `subtitles`."}}}},"advanced_playback_policies":{"type":"array","items":{"type":"object","properties":{"policy":{"type":"string","enum":["public","signed","drm"],"description":"* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\\n\\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](https://docs.mux.com/guides/secure-video-playback) for details about creating tokens.\\n\\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](https://docs.mux.com/guides/protect-videos-with-drm).\\n"},"drm_configuration_id":{"type":"string","description":"The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."}}},"description":"An array of playback policy objects that you want applied to this asset and available through `playback_ids`. `advanced_playback_policies` must be used instead of `playback_policy` when creating a DRM playback ID.\\n"},"per_title_encode":{"type":"boolean","format":"boolean","x-mux-doc-decorators":["hidden"],"deprecated":true},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata that will be included in the asset details and related webhooks. Can be used to store your own ID for a video along with the asset. **Max: 255 characters**."},"mp4_support":{"type":"string","enum":["none","standard","capped-1080p","audio-only","audio-only,capped-1080p"],"description":"Specify what level of support for mp4 playback.\\n\\n* The `capped-1080p` option produces a single MP4 file, called `capped-1080p.mp4`, with the video resolution capped at 1080p. This option produces an `audio.m4a` file for an audio-only asset.\\n* The `audio-only` option produces a single M4A file, called `audio.m4a` for a video or an audio-only asset. MP4 generation will error when this option is specified for a video-only asset.\\n* The `audio-only,capped-1080p` option produces both the `audio.m4a` and `capped-1080p.mp4` files. Only the `capped-1080p.mp4` file is produced for a video-only asset, while only the `audio.m4a` file is produced for an audio-only asset.\\n\\nThe `standard`(deprecated) option produces up to three MP4 files with different levels of resolution (`high.mp4`, `medium.mp4`, `low.mp4`, or `audio.m4a` for an audio-only asset).\\n\\nMP4 files are not produced for `none` (default).\\n\\nIn most cases you should use our default HLS-based streaming playback (`{playback_id}.m3u8`) which can automatically adjust to viewers\' connection speeds, but an mp4 can be useful for some legacy devices or downloading for offline playback. See the [Download your videos guide](https://docs.mux.com/guides/enable-static-mp4-renditions) for more information.\\n","x-mux-doc-decorators-deprecated-enum-values":["standard"]},"normalize_audio":{"type":"boolean","format":"boolean","description":"Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets.","default":false},"master_access":{"type":"string","enum":["none","temporary"],"description":"Specify what level (if any) of support for master access. Master access can be enabled temporarily for your asset to be downloaded. See the [Download your videos guide](https://docs.mux.com/guides/enable-static-mp4-renditions) for more information."},"test":{"type":"boolean","format":"boolean","description":"Marks the asset as a test asset when the value is set to true. A Test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test asset are watermarked with the Mux logo, limited to 10 seconds, deleted after 24 hrs."},"max_resolution_tier":{"type":"string","enum":["1080p","1440p","2160p"],"description":"Max resolution tier can be used to control the maximum `resolution_tier` your asset is encoded, stored, and streamed at. If not set, this defaults to `1080p`."},"encoding_tier":{"type":"string","deprecated":true,"enum":["smart","baseline","premium"],"description":"This field is deprecated. Please use `video_quality` instead. The encoding tier informs the cost, quality, and available platform features for the asset. The default encoding tier for an account can be set in the Mux Dashboard. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"video_quality":{"type":"string","enum":["basic","plus","premium"],"description":"The video quality controls the cost, quality, and available platform features for the asset. The default video quality for an account can be set in the Mux Dashboard. This field replaces the deprecated `encoding_tier` value. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"playback_policies":{"type":"array","items":{"type":"string","enum":["public","signed","drm"],"description":"* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\\n\\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](https://docs.mux.com/guides/secure-video-playback) for details about creating tokens.\\n\\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](https://docs.mux.com/guides/protect-videos-with-drm).\\n"},"description":"An array of playback policy names that you want applied to this asset and available through `playback_ids`. Options include: `\\"public\\"` (anyone with the playback URL can stream the asset). And `\\"signed\\"` (an additional access token is required to play the asset). If no playback_policy is set, the asset will have no playback IDs and will therefore not be playable. For simplicity, a single string name can be used in place of the array in the case of only one playback policy."},"inputs":{"type":"array","description":"An array of objects that each describe an input file to be used to create the asset. As a shortcut, input can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.","items":{"type":"object","description":"An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.","properties":{"url":{"type":"string","description":"The URL of the file that Mux should download and use.\\n* For the main input file, this should be the URL to the muxed file for Mux to download, for example an MP4, MOV, MKV, or TS file. Mux supports most audio/video file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](https://docs.mux.com/guides/minimize-processing-time).\\n* For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](https://docs.mux.com/guides/minimize-processing-time).\\n* For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](https://en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](https://www.w3.org/TR/webvtt1/) formats for ingesting Subtitles and Closed Captions.\\n* For Watermarking or Overlay, the URL is the location of the watermark image. The maximum size is 4096x4096.\\n* When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.\\nThe url property may be omitted on the first input object when providing asset settings for LiveStream and Upload objects, in order to configure settings related to the primary (live stream or direct upload) input.\\n"},"overlay_settings":{"type":"object","description":"An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.","properties":{"vertical_align":{"type":"string","enum":["top","middle","bottom"],"description":"Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\\"top\\"`"},"vertical_margin":{"type":"string","description":"The distance from the vertical_align starting point and the image\'s closest edge. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). Negative values will move the overlay offscreen. In the case of \'middle\', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top."},"horizontal_align":{"type":"string","enum":["left","center","right"],"description":"Where the horizontal positioning of the overlay/watermark should begin from."},"horizontal_margin":{"type":"string","description":"The distance from the horizontal_align starting point and the image\'s closest edge. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). Negative values will move the overlay offscreen. In the case of \'center\', a positive value will shift the image towards the right and and a negative value will shift it towards the left."},"width":{"type":"string","description":"How wide the overlay should appear. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height."},"height":{"type":"string","description":"How tall the overlay should appear. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width."},"opacity":{"type":"string","description":"How opaque the overlay should appear, expressed as a percent. (Default 100%)"}}},"generated_subtitles":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"A name for this subtitle track."},"passthrough":{"type":"string","description":"Arbitrary metadata set for the subtitle track. Max 255 characters."},"language_code":{"type":"string","description":"The language to generate subtitles in.","default":"en","enum":["en","es","it","pt","de","fr","pl","ru","nl","ca","tr","sv","uk","no","fi","sk","el","cs","hr","da","ro","bg"]}}},"description":"Generate subtitle tracks using automatic speech recognition with this configuration. This may only be provided for the first input object (the main input file). For direct uploads, this first input should omit the url parameter, as the main input file is provided via the direct upload. This will create subtitles based on the audio track ingested from that main input file. Note that subtitle generation happens after initial ingest, so the generated tracks will be in the `preparing` state when the asset transitions to `ready`."},"start_time":{"type":"number","format":"double","description":"The time offset in seconds from the beginning of the video indicating the clip\'s starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."},"end_time":{"type":"number","format":"double","description":"The time offset in seconds from the beginning of the video, indicating the clip\'s ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."},"type":{"type":"string","enum":["video","audio","text"],"description":"This parameter is required for `text` type tracks."},"text_type":{"type":"string","enum":["subtitles"],"description":"Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](https://mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags/). This parameter is required for `text` type tracks."},"language_code":{"type":"string","description":"The language code value must be a valid [BCP 47](https://tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is required for `text` and `audio` track types."},"name":{"type":"string","description":"The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate a subtitle text track with this value. For example, the value should be \\"English\\" for a subtitle text track with `language_code` set to `en`. This optional parameter should be used only for `text` and `audio` type tracks. This parameter can be optionally provided for the first video input to denote the name of the muxed audio track if present. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value."},"closed_captions":{"type":"boolean","description":"Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."},"passthrough":{"type":"string","description":"This optional parameter should be used tracks with `type` of `text` and `text_type` set to `subtitles`."}}}}}},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the asset. Max 255 characters."},"audio_only":{"type":"boolean","description":"The live stream only processes the audio track if the value is set to true. Mux drops the video track if broadcasted."},"embedded_subtitles":{"type":"array","items":{"type":"object","x-required":["name","language_code","language_channel"],"properties":{"name":{"type":"string","description":"A name for this live stream closed caption track."},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the live stream closed caption track. Max 255 characters."},"language_code":{"type":"string","description":"The language of the closed caption stream. Value must be BCP 47 compliant.","default":"en"},"language_channel":{"type":"string","description":"CEA-608 caption channel to read data from.","default":"cc1","enum":["cc1","cc2","cc3","cc4"]}}},"description":"Describes the embedded closed caption configuration of the incoming live stream."},"generated_subtitles":{"type":"array","items":{"type":"object","x-required":["name","language_code"],"properties":{"name":{"type":"string","description":"A name for this live stream subtitle track."},"passthrough":{"type":"string","description":"Arbitrary metadata set for the live stream subtitle track. Max 255 characters."},"language_code":{"type":"string","description":"The language to generate subtitles in.","default":"en","enum":["en","en-US"]},"transcription_vocabulary_ids":{"type":"array","items":{"type":"string"},"description":"Unique identifiers for existing Transcription Vocabularies to use while generating subtitles for the live stream. If the Transcription Vocabularies provided collectively have more than 1000 phrases, only the first 1000 phrases will be included."}}},"description":"Configure the incoming live stream to include subtitles created with automatic speech recognition. Each Asset created from a live stream with `generated_subtitles` configured will automatically receive two text tracks. The first of these will have a `text_source` value of `generated_live`, and will be available with `ready` status as soon as the stream is live. The second text track will have a `text_source` value of `generated_live_final` and will contain subtitles with improved accuracy, timing, and formatting. However, `generated_live_final` tracks will not be available in `ready` status until the live stream ends. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback."},"reconnect_window":{"type":"number","format":"float","default":60,"minimum":0,"maximum":1800,"description":"When live streaming software disconnects from Mux, either intentionally or due to a drop in the network, the Reconnect Window is the time in seconds that Mux should wait for the streaming software to reconnect before considering the live stream finished and completing the recorded asset. **Max**: 1800s (30 minutes).\\n\\nIf not specified directly, Standard Latency streams have a Reconnect Window of 60 seconds; Reduced and Low Latency streams have a default of 0 seconds, or no Reconnect Window. For that reason, we suggest specifying a value other than zero for Reduced and Low Latency streams.\\n\\nReduced and Low Latency streams with a Reconnect Window greater than zero will insert slate media into the recorded asset while waiting for the streaming software to reconnect or when there are brief interruptions in the live stream media. When using a Reconnect Window setting higher than 60 seconds with a Standard Latency stream, we highly recommend enabling slate with the `use_slate_for_standard_latency` option.\\n"},"use_slate_for_standard_latency":{"type":"boolean","format":"boolean","default":false,"description":"By default, Standard Latency live streams do not have slate media inserted while waiting for live streaming software to reconnect to Mux. Setting this to true enables slate insertion on a Standard Latency stream."},"reconnect_slate_url":{"type":"string","description":"The URL of the image file that Mux should download and use as slate media during interruptions of the live stream media. This file will be downloaded each time a new recorded asset is created from the live stream. If this is not set, the default slate media will be used."},"reduced_latency":{"type":"boolean","format":"boolean","deprecated":true,"x-mux-doc-decorators":["hidden"],"description":"This field is deprecated. Please use `latency_mode` instead. Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Set this if you want lower latency for your live stream. See the [Reduce live stream latency guide](https://docs.mux.com/guides/reduce-live-stream-latency) to understand the tradeoffs."},"low_latency":{"type":"boolean","format":"boolean","deprecated":true,"x-mux-doc-decorators":["hidden"],"description":"This field is deprecated. Please use `latency_mode` instead. Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Setting this option will enable compatibility with the LL-HLS specification for low-latency streaming. This typically has lower latency than Reduced Latency streams, and cannot be combined with Reduced Latency."},"simulcast_targets":{"type":"array","description":"Each Simulcast Target contains configuration details to broadcast (or \\"restream\\") a live stream to a third-party streaming service. [See the Stream live to 3rd party platforms guide](https://docs.mux.com/guides/stream-live-to-3rd-party-platforms).","items":{"type":"object","x-required":["id","url","status"],"properties":{"id":{"type":"string","description":"ID of the Simulcast Target"},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set when creating a simulcast target."},"status":{"type":"string","enum":["idle","starting","broadcasting","errored"],"description":"The current status of the simulcast target. See Statuses below for detailed description.\\n  * `idle`: Default status. When the parent live stream is in disconnected status, simulcast targets will be idle state.\\n  * `starting`: The simulcast target transitions into this state when the parent live stream transition into connected state.\\n  * `broadcasting`: The simulcast target has successfully connected to the third party live streaming service and is pushing video to that service.\\n  * `errored`: The simulcast target encountered an error either while attempting to connect to the third party live streaming service, or mid-broadcasting. When a simulcast target has this status it will have an `error_severity` field with more details about the error.\\n"},"stream_key":{"type":"string","description":"Stream Key represents a stream identifier on the third party live streaming service to send the parent live stream to. Only used for RTMP(s) simulcast destinations."},"url":{"type":"string","description":"The RTMP(s) or SRT endpoint for a simulcast destination.\\n* For RTMP(s) destinations, this should include the application name for the third party live streaming service, for example: `rtmp://live.example.com/app`.\\n* For SRT destinations, this should be a fully formed SRT connection string, for example: `srt://srt-live.example.com:1234?streamid={stream_key}&passphrase={srt_passphrase}`.\\n\\nNote: SRT simulcast targets can only be used when an source is connected over SRT.\\n"},"error_severity":{"type":"string","enum":["normal","fatal"],"description":"The severity of the error encountered by the simulcast target.\\nThis field is only set when the simulcast target is in the `errored` status.\\nSee the values of severities below and their descriptions.\\n  * `normal`: The simulcast target encountered an error either while attempting to connect to the third party live streaming service, or mid-broadcasting. A simulcast may transition back into the broadcasting state if a connection with the service can be re-established.\\n  * `fatal`: The simulcast target is incompatible with the current input to the parent live stream. No further attempts to this simulcast target will be made for the current live stream asset.\\n"}}}},"latency_mode":{"type":"string","enum":["low","reduced","standard"],"description":"Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Set this as an alternative to setting low latency or reduced latency flags."},"test":{"type":"boolean","format":"boolean","description":"True means this live stream is a test live stream. Test live streams can be used to help evaluate the Mux Video APIs for free. There is no limit on the number of test live streams, but they are watermarked with the Mux logo, and limited to 5 minutes. The test live stream is disabled after the stream is active for 5 mins and the recorded asset also deleted after 24 hours."},"max_continuous_duration":{"type":"integer","format":"int32","default":43200,"minimum":60,"maximum":43200,"description":"The time in seconds a live stream may be continuously active before being disconnected. Defaults to 12 hours."},"srt_passphrase":{"type":"string","description":"Unique key used for encrypting a stream to a Mux SRT endpoint."},"active_ingest_protocol":{"type":"string","enum":["rtmp","srt"],"description":"The protocol used for the active ingest stream. This is only set when the live stream is active."},"connected":{"type":"boolean"},"recording":{"type":"boolean"}}},"attempts":{"type":"array","description":"Attempts for sending out the webhook event","items":{"type":"object","properties":{"webhook_id":{"type":"integer","description":"Unique identifier for the webhook"},"response_status_code":{"type":"integer","description":"HTTP response status code for the webhook attempt"},"response_headers":{"type":"object","description":"HTTP response headers for the webhook attempt"},"response_body":{"type":["string","null"],"description":"HTTP response body for the webhook attempt"},"max_attempts":{"description":"Max attempts number for the webhook attempt","type":"integer"},"id":{"description":"Unique identifier for the webhook attempt","type":"string"},"created_at":{"description":"Time the webhook request was attempted","type":"string","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"address":{"description":"URL address for the webhook attempt","type":"string"}}}},"request_id":{"type":["string","null"],"deprecated":true},"accessor":{"type":["string","null"],"deprecated":true},"accessor_source":{"type":["string","null"],"deprecated":true}},"required":["type","id","created_at","object","environment","data","attempts"]},"example":{"active_asset_id":"SqQnqz6s5MBuXGvJaUWdXuXM93J9Q2yv","connected":true,"created_at":1606259944,"id":"sY7b7fW01LImWpoOv2oiVROwHv5Y","latency_mode":"reduced","max_continuous_duration":43200,"new_asset_settings":{"master_access":"temporary","playback_policies":["signed"]},"passthrough":"mux","playback_ids":[{"id":"BdTpnH6KkY01U004fGsErAPvVaRP6sIxkR","policy":"signed"}],"recent_asset_ids":["kaYHEoG9HMtnEGXlVGNqk2UheY02","B01x902mrEJ006aBOnF7j01HVf3I"],"reconnect_window":60,"recording":true,"reduced_latency":true,"status":"idle","stream_key":"5d42bb65-91b5-bb65-4ebf-5d42bb65","active_ingest_protocol":"rtmp"}},"video.live_stream.active":{"description":"This live stream is now \'active\'. The live streams `playback_id` OR the `playback_id` associated with this live stream\'s asset can be used right now to created HLS URLs (`https://stream.mux.com/{PLAYBACK_ID}.m3u8` and start streaming in your player. Note that before the live stream is `\'active\'`, trying to stream the HLS URL will result in HTTP `412` errors.","payload":{"type":"object","properties":{"type":{"type":"string","description":"Type for the webhook event"},"id":{"type":"string","description":"Unique identifier for the event"},"created_at":{"type":"string","description":"Time the event was created","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"object":{"type":"object","properties":{"type":{"type":"string"},"id":{"type":"string"}},"required":["type","id"]},"environment":{"type":"object","properties":{"name":{"type":"string","description":"Name for the environment"},"id":{"type":"string","description":"Unique identifier for the environment"}},"required":["name","id"]},"data":{"type":"object","x-required":["id","created_at","latency_mode","max_continuous_duration","status","stream_key"],"properties":{"id":{"type":"string","description":"Unique identifier for the Live Stream. Max 255 characters."},"created_at":{"type":"integer","format":"int32"},"stream_key":{"type":"string","description":"Unique key used for streaming to a Mux RTMP endpoint. This should be considered as sensitive as credentials, anyone with this stream key can begin streaming."},"active_asset_id":{"type":"string","description":"The Asset that is currently being created if there is an active broadcast."},"recent_asset_ids":{"type":"array","description":"An array of strings with the most recent Asset IDs that were created from this Live Stream. The most recently generated Asset ID is the last entry in the list.","items":{"type":"string"}},"status":{"type":"string","enum":["active","idle","disabled"],"description":"`idle` indicates that there is no active broadcast. `active` indicates that there is an active broadcast and `disabled` status indicates that no future RTMP streams can be published."},"playback_ids":{"type":"array","description":"An array of Playback ID objects. Use these to create HLS playback URLs. See [Play your videos](https://docs.mux.com/guides/play-your-videos) for more details.","items":{"type":"object","x-required":["id","policy"],"properties":{"id":{"type":"string","description":"Unique identifier for the PlaybackID"},"policy":{"type":"string","enum":["public","signed","drm"],"description":"* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\\n\\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](https://docs.mux.com/guides/secure-video-playback) for details about creating tokens.\\n\\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](https://docs.mux.com/guides/protect-videos-with-drm).\\n"},"drm_configuration_id":{"type":"string","description":"The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."}}}},"new_asset_settings":{"type":"object","properties":{"input":{"type":"array","description":"An array of objects that each describe an input file to be used to create the asset. As a shortcut, input can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.","items":{"type":"object","description":"An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.","properties":{"url":{"type":"string","description":"The URL of the file that Mux should download and use.\\n* For the main input file, this should be the URL to the muxed file for Mux to download, for example an MP4, MOV, MKV, or TS file. Mux supports most audio/video file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](https://docs.mux.com/guides/minimize-processing-time).\\n* For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](https://docs.mux.com/guides/minimize-processing-time).\\n* For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](https://en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](https://www.w3.org/TR/webvtt1/) formats for ingesting Subtitles and Closed Captions.\\n* For Watermarking or Overlay, the URL is the location of the watermark image. The maximum size is 4096x4096.\\n* When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.\\nThe url property may be omitted on the first input object when providing asset settings for LiveStream and Upload objects, in order to configure settings related to the primary (live stream or direct upload) input.\\n"},"overlay_settings":{"type":"object","description":"An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.","properties":{"vertical_align":{"type":"string","enum":["top","middle","bottom"],"description":"Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\\"top\\"`"},"vertical_margin":{"type":"string","description":"The distance from the vertical_align starting point and the image\'s closest edge. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). Negative values will move the overlay offscreen. In the case of \'middle\', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top."},"horizontal_align":{"type":"string","enum":["left","center","right"],"description":"Where the horizontal positioning of the overlay/watermark should begin from."},"horizontal_margin":{"type":"string","description":"The distance from the horizontal_align starting point and the image\'s closest edge. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). Negative values will move the overlay offscreen. In the case of \'center\', a positive value will shift the image towards the right and and a negative value will shift it towards the left."},"width":{"type":"string","description":"How wide the overlay should appear. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height."},"height":{"type":"string","description":"How tall the overlay should appear. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width."},"opacity":{"type":"string","description":"How opaque the overlay should appear, expressed as a percent. (Default 100%)"}}},"generated_subtitles":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"A name for this subtitle track."},"passthrough":{"type":"string","description":"Arbitrary metadata set for the subtitle track. Max 255 characters."},"language_code":{"type":"string","description":"The language to generate subtitles in.","default":"en","enum":["en","es","it","pt","de","fr","pl","ru","nl","ca","tr","sv","uk","no","fi","sk","el","cs","hr","da","ro","bg"]}}},"description":"Generate subtitle tracks using automatic speech recognition with this configuration. This may only be provided for the first input object (the main input file). For direct uploads, this first input should omit the url parameter, as the main input file is provided via the direct upload. This will create subtitles based on the audio track ingested from that main input file. Note that subtitle generation happens after initial ingest, so the generated tracks will be in the `preparing` state when the asset transitions to `ready`."},"start_time":{"type":"number","format":"double","description":"The time offset in seconds from the beginning of the video indicating the clip\'s starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."},"end_time":{"type":"number","format":"double","description":"The time offset in seconds from the beginning of the video, indicating the clip\'s ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."},"type":{"type":"string","enum":["video","audio","text"],"description":"This parameter is required for `text` type tracks."},"text_type":{"type":"string","enum":["subtitles"],"description":"Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](https://mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags/). This parameter is required for `text` type tracks."},"language_code":{"type":"string","description":"The language code value must be a valid [BCP 47](https://tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is required for `text` and `audio` track types."},"name":{"type":"string","description":"The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate a subtitle text track with this value. For example, the value should be \\"English\\" for a subtitle text track with `language_code` set to `en`. This optional parameter should be used only for `text` and `audio` type tracks. This parameter can be optionally provided for the first video input to denote the name of the muxed audio track if present. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value."},"closed_captions":{"type":"boolean","description":"Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."},"passthrough":{"type":"string","description":"This optional parameter should be used tracks with `type` of `text` and `text_type` set to `subtitles`."}}}},"advanced_playback_policies":{"type":"array","items":{"type":"object","properties":{"policy":{"type":"string","enum":["public","signed","drm"],"description":"* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\\n\\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](https://docs.mux.com/guides/secure-video-playback) for details about creating tokens.\\n\\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](https://docs.mux.com/guides/protect-videos-with-drm).\\n"},"drm_configuration_id":{"type":"string","description":"The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."}}},"description":"An array of playback policy objects that you want applied to this asset and available through `playback_ids`. `advanced_playback_policies` must be used instead of `playback_policy` when creating a DRM playback ID.\\n"},"per_title_encode":{"type":"boolean","format":"boolean","x-mux-doc-decorators":["hidden"],"deprecated":true},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata that will be included in the asset details and related webhooks. Can be used to store your own ID for a video along with the asset. **Max: 255 characters**."},"mp4_support":{"type":"string","enum":["none","standard","capped-1080p","audio-only","audio-only,capped-1080p"],"description":"Specify what level of support for mp4 playback.\\n\\n* The `capped-1080p` option produces a single MP4 file, called `capped-1080p.mp4`, with the video resolution capped at 1080p. This option produces an `audio.m4a` file for an audio-only asset.\\n* The `audio-only` option produces a single M4A file, called `audio.m4a` for a video or an audio-only asset. MP4 generation will error when this option is specified for a video-only asset.\\n* The `audio-only,capped-1080p` option produces both the `audio.m4a` and `capped-1080p.mp4` files. Only the `capped-1080p.mp4` file is produced for a video-only asset, while only the `audio.m4a` file is produced for an audio-only asset.\\n\\nThe `standard`(deprecated) option produces up to three MP4 files with different levels of resolution (`high.mp4`, `medium.mp4`, `low.mp4`, or `audio.m4a` for an audio-only asset).\\n\\nMP4 files are not produced for `none` (default).\\n\\nIn most cases you should use our default HLS-based streaming playback (`{playback_id}.m3u8`) which can automatically adjust to viewers\' connection speeds, but an mp4 can be useful for some legacy devices or downloading for offline playback. See the [Download your videos guide](https://docs.mux.com/guides/enable-static-mp4-renditions) for more information.\\n","x-mux-doc-decorators-deprecated-enum-values":["standard"]},"normalize_audio":{"type":"boolean","format":"boolean","description":"Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets.","default":false},"master_access":{"type":"string","enum":["none","temporary"],"description":"Specify what level (if any) of support for master access. Master access can be enabled temporarily for your asset to be downloaded. See the [Download your videos guide](https://docs.mux.com/guides/enable-static-mp4-renditions) for more information."},"test":{"type":"boolean","format":"boolean","description":"Marks the asset as a test asset when the value is set to true. A Test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test asset are watermarked with the Mux logo, limited to 10 seconds, deleted after 24 hrs."},"max_resolution_tier":{"type":"string","enum":["1080p","1440p","2160p"],"description":"Max resolution tier can be used to control the maximum `resolution_tier` your asset is encoded, stored, and streamed at. If not set, this defaults to `1080p`."},"encoding_tier":{"type":"string","deprecated":true,"enum":["smart","baseline","premium"],"description":"This field is deprecated. Please use `video_quality` instead. The encoding tier informs the cost, quality, and available platform features for the asset. The default encoding tier for an account can be set in the Mux Dashboard. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"video_quality":{"type":"string","enum":["basic","plus","premium"],"description":"The video quality controls the cost, quality, and available platform features for the asset. The default video quality for an account can be set in the Mux Dashboard. This field replaces the deprecated `encoding_tier` value. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"playback_policies":{"type":"array","items":{"type":"string","enum":["public","signed","drm"],"description":"* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\\n\\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](https://docs.mux.com/guides/secure-video-playback) for details about creating tokens.\\n\\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](https://docs.mux.com/guides/protect-videos-with-drm).\\n"},"description":"An array of playback policy names that you want applied to this asset and available through `playback_ids`. Options include: `\\"public\\"` (anyone with the playback URL can stream the asset). And `\\"signed\\"` (an additional access token is required to play the asset). If no playback_policy is set, the asset will have no playback IDs and will therefore not be playable. For simplicity, a single string name can be used in place of the array in the case of only one playback policy."},"inputs":{"type":"array","description":"An array of objects that each describe an input file to be used to create the asset. As a shortcut, input can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.","items":{"type":"object","description":"An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.","properties":{"url":{"type":"string","description":"The URL of the file that Mux should download and use.\\n* For the main input file, this should be the URL to the muxed file for Mux to download, for example an MP4, MOV, MKV, or TS file. Mux supports most audio/video file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](https://docs.mux.com/guides/minimize-processing-time).\\n* For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](https://docs.mux.com/guides/minimize-processing-time).\\n* For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](https://en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](https://www.w3.org/TR/webvtt1/) formats for ingesting Subtitles and Closed Captions.\\n* For Watermarking or Overlay, the URL is the location of the watermark image. The maximum size is 4096x4096.\\n* When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.\\nThe url property may be omitted on the first input object when providing asset settings for LiveStream and Upload objects, in order to configure settings related to the primary (live stream or direct upload) input.\\n"},"overlay_settings":{"type":"object","description":"An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.","properties":{"vertical_align":{"type":"string","enum":["top","middle","bottom"],"description":"Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\\"top\\"`"},"vertical_margin":{"type":"string","description":"The distance from the vertical_align starting point and the image\'s closest edge. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). Negative values will move the overlay offscreen. In the case of \'middle\', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top."},"horizontal_align":{"type":"string","enum":["left","center","right"],"description":"Where the horizontal positioning of the overlay/watermark should begin from."},"horizontal_margin":{"type":"string","description":"The distance from the horizontal_align starting point and the image\'s closest edge. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). Negative values will move the overlay offscreen. In the case of \'center\', a positive value will shift the image towards the right and and a negative value will shift it towards the left."},"width":{"type":"string","description":"How wide the overlay should appear. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height."},"height":{"type":"string","description":"How tall the overlay should appear. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width."},"opacity":{"type":"string","description":"How opaque the overlay should appear, expressed as a percent. (Default 100%)"}}},"generated_subtitles":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"A name for this subtitle track."},"passthrough":{"type":"string","description":"Arbitrary metadata set for the subtitle track. Max 255 characters."},"language_code":{"type":"string","description":"The language to generate subtitles in.","default":"en","enum":["en","es","it","pt","de","fr","pl","ru","nl","ca","tr","sv","uk","no","fi","sk","el","cs","hr","da","ro","bg"]}}},"description":"Generate subtitle tracks using automatic speech recognition with this configuration. This may only be provided for the first input object (the main input file). For direct uploads, this first input should omit the url parameter, as the main input file is provided via the direct upload. This will create subtitles based on the audio track ingested from that main input file. Note that subtitle generation happens after initial ingest, so the generated tracks will be in the `preparing` state when the asset transitions to `ready`."},"start_time":{"type":"number","format":"double","description":"The time offset in seconds from the beginning of the video indicating the clip\'s starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."},"end_time":{"type":"number","format":"double","description":"The time offset in seconds from the beginning of the video, indicating the clip\'s ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."},"type":{"type":"string","enum":["video","audio","text"],"description":"This parameter is required for `text` type tracks."},"text_type":{"type":"string","enum":["subtitles"],"description":"Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](https://mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags/). This parameter is required for `text` type tracks."},"language_code":{"type":"string","description":"The language code value must be a valid [BCP 47](https://tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is required for `text` and `audio` track types."},"name":{"type":"string","description":"The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate a subtitle text track with this value. For example, the value should be \\"English\\" for a subtitle text track with `language_code` set to `en`. This optional parameter should be used only for `text` and `audio` type tracks. This parameter can be optionally provided for the first video input to denote the name of the muxed audio track if present. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value."},"closed_captions":{"type":"boolean","description":"Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."},"passthrough":{"type":"string","description":"This optional parameter should be used tracks with `type` of `text` and `text_type` set to `subtitles`."}}}}}},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the asset. Max 255 characters."},"audio_only":{"type":"boolean","description":"The live stream only processes the audio track if the value is set to true. Mux drops the video track if broadcasted."},"embedded_subtitles":{"type":"array","items":{"type":"object","x-required":["name","language_code","language_channel"],"properties":{"name":{"type":"string","description":"A name for this live stream closed caption track."},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the live stream closed caption track. Max 255 characters."},"language_code":{"type":"string","description":"The language of the closed caption stream. Value must be BCP 47 compliant.","default":"en"},"language_channel":{"type":"string","description":"CEA-608 caption channel to read data from.","default":"cc1","enum":["cc1","cc2","cc3","cc4"]}}},"description":"Describes the embedded closed caption configuration of the incoming live stream."},"generated_subtitles":{"type":"array","items":{"type":"object","x-required":["name","language_code"],"properties":{"name":{"type":"string","description":"A name for this live stream subtitle track."},"passthrough":{"type":"string","description":"Arbitrary metadata set for the live stream subtitle track. Max 255 characters."},"language_code":{"type":"string","description":"The language to generate subtitles in.","default":"en","enum":["en","en-US"]},"transcription_vocabulary_ids":{"type":"array","items":{"type":"string"},"description":"Unique identifiers for existing Transcription Vocabularies to use while generating subtitles for the live stream. If the Transcription Vocabularies provided collectively have more than 1000 phrases, only the first 1000 phrases will be included."}}},"description":"Configure the incoming live stream to include subtitles created with automatic speech recognition. Each Asset created from a live stream with `generated_subtitles` configured will automatically receive two text tracks. The first of these will have a `text_source` value of `generated_live`, and will be available with `ready` status as soon as the stream is live. The second text track will have a `text_source` value of `generated_live_final` and will contain subtitles with improved accuracy, timing, and formatting. However, `generated_live_final` tracks will not be available in `ready` status until the live stream ends. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback."},"reconnect_window":{"type":"number","format":"float","default":60,"minimum":0,"maximum":1800,"description":"When live streaming software disconnects from Mux, either intentionally or due to a drop in the network, the Reconnect Window is the time in seconds that Mux should wait for the streaming software to reconnect before considering the live stream finished and completing the recorded asset. **Max**: 1800s (30 minutes).\\n\\nIf not specified directly, Standard Latency streams have a Reconnect Window of 60 seconds; Reduced and Low Latency streams have a default of 0 seconds, or no Reconnect Window. For that reason, we suggest specifying a value other than zero for Reduced and Low Latency streams.\\n\\nReduced and Low Latency streams with a Reconnect Window greater than zero will insert slate media into the recorded asset while waiting for the streaming software to reconnect or when there are brief interruptions in the live stream media. When using a Reconnect Window setting higher than 60 seconds with a Standard Latency stream, we highly recommend enabling slate with the `use_slate_for_standard_latency` option.\\n"},"use_slate_for_standard_latency":{"type":"boolean","format":"boolean","default":false,"description":"By default, Standard Latency live streams do not have slate media inserted while waiting for live streaming software to reconnect to Mux. Setting this to true enables slate insertion on a Standard Latency stream."},"reconnect_slate_url":{"type":"string","description":"The URL of the image file that Mux should download and use as slate media during interruptions of the live stream media. This file will be downloaded each time a new recorded asset is created from the live stream. If this is not set, the default slate media will be used."},"reduced_latency":{"type":"boolean","format":"boolean","deprecated":true,"x-mux-doc-decorators":["hidden"],"description":"This field is deprecated. Please use `latency_mode` instead. Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Set this if you want lower latency for your live stream. See the [Reduce live stream latency guide](https://docs.mux.com/guides/reduce-live-stream-latency) to understand the tradeoffs."},"low_latency":{"type":"boolean","format":"boolean","deprecated":true,"x-mux-doc-decorators":["hidden"],"description":"This field is deprecated. Please use `latency_mode` instead. Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Setting this option will enable compatibility with the LL-HLS specification for low-latency streaming. This typically has lower latency than Reduced Latency streams, and cannot be combined with Reduced Latency."},"simulcast_targets":{"type":"array","description":"Each Simulcast Target contains configuration details to broadcast (or \\"restream\\") a live stream to a third-party streaming service. [See the Stream live to 3rd party platforms guide](https://docs.mux.com/guides/stream-live-to-3rd-party-platforms).","items":{"type":"object","x-required":["id","url","status"],"properties":{"id":{"type":"string","description":"ID of the Simulcast Target"},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set when creating a simulcast target."},"status":{"type":"string","enum":["idle","starting","broadcasting","errored"],"description":"The current status of the simulcast target. See Statuses below for detailed description.\\n  * `idle`: Default status. When the parent live stream is in disconnected status, simulcast targets will be idle state.\\n  * `starting`: The simulcast target transitions into this state when the parent live stream transition into connected state.\\n  * `broadcasting`: The simulcast target has successfully connected to the third party live streaming service and is pushing video to that service.\\n  * `errored`: The simulcast target encountered an error either while attempting to connect to the third party live streaming service, or mid-broadcasting. When a simulcast target has this status it will have an `error_severity` field with more details about the error.\\n"},"stream_key":{"type":"string","description":"Stream Key represents a stream identifier on the third party live streaming service to send the parent live stream to. Only used for RTMP(s) simulcast destinations."},"url":{"type":"string","description":"The RTMP(s) or SRT endpoint for a simulcast destination.\\n* For RTMP(s) destinations, this should include the application name for the third party live streaming service, for example: `rtmp://live.example.com/app`.\\n* For SRT destinations, this should be a fully formed SRT connection string, for example: `srt://srt-live.example.com:1234?streamid={stream_key}&passphrase={srt_passphrase}`.\\n\\nNote: SRT simulcast targets can only be used when an source is connected over SRT.\\n"},"error_severity":{"type":"string","enum":["normal","fatal"],"description":"The severity of the error encountered by the simulcast target.\\nThis field is only set when the simulcast target is in the `errored` status.\\nSee the values of severities below and their descriptions.\\n  * `normal`: The simulcast target encountered an error either while attempting to connect to the third party live streaming service, or mid-broadcasting. A simulcast may transition back into the broadcasting state if a connection with the service can be re-established.\\n  * `fatal`: The simulcast target is incompatible with the current input to the parent live stream. No further attempts to this simulcast target will be made for the current live stream asset.\\n"}}}},"latency_mode":{"type":"string","enum":["low","reduced","standard"],"description":"Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Set this as an alternative to setting low latency or reduced latency flags."},"test":{"type":"boolean","format":"boolean","description":"True means this live stream is a test live stream. Test live streams can be used to help evaluate the Mux Video APIs for free. There is no limit on the number of test live streams, but they are watermarked with the Mux logo, and limited to 5 minutes. The test live stream is disabled after the stream is active for 5 mins and the recorded asset also deleted after 24 hours."},"max_continuous_duration":{"type":"integer","format":"int32","default":43200,"minimum":60,"maximum":43200,"description":"The time in seconds a live stream may be continuously active before being disconnected. Defaults to 12 hours."},"srt_passphrase":{"type":"string","description":"Unique key used for encrypting a stream to a Mux SRT endpoint."},"active_ingest_protocol":{"type":"string","enum":["rtmp","srt"],"description":"The protocol used for the active ingest stream. This is only set when the live stream is active."},"connected":{"type":"boolean"},"recording":{"type":"boolean"}}},"attempts":{"type":"array","description":"Attempts for sending out the webhook event","items":{"type":"object","properties":{"webhook_id":{"type":"integer","description":"Unique identifier for the webhook"},"response_status_code":{"type":"integer","description":"HTTP response status code for the webhook attempt"},"response_headers":{"type":"object","description":"HTTP response headers for the webhook attempt"},"response_body":{"type":["string","null"],"description":"HTTP response body for the webhook attempt"},"max_attempts":{"description":"Max attempts number for the webhook attempt","type":"integer"},"id":{"description":"Unique identifier for the webhook attempt","type":"string"},"created_at":{"description":"Time the webhook request was attempted","type":"string","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"address":{"description":"URL address for the webhook attempt","type":"string"}}}},"request_id":{"type":["string","null"],"deprecated":true},"accessor":{"type":["string","null"],"deprecated":true},"accessor_source":{"type":["string","null"],"deprecated":true}},"required":["type","id","created_at","object","environment","data","attempts"]},"example":{"active_asset_id":"SqQnqz6s5MBuXGvJaUWdXuXM93J9Q2yv","connected":true,"created_at":1606259944,"id":"sY7b7fW01LImWpoOv2oiVROwHv5Y","latency_mode":"reduced","max_continuous_duration":43200,"new_asset_settings":{"master_access":"temporary","playback_policies":["signed"]},"passthrough":"mux","playback_ids":[{"id":"BdTpnH6KkY01U004fGsErAPvVaRP6sIxkR","policy":"signed"}],"recent_asset_ids":["kaYHEoG9HMtnEGXlVGNqk2UheY02","B01x902mrEJ006aBOnF7j01HVf3I"],"reconnect_window":60,"recording":true,"reduced_latency":true,"status":"active","stream_key":"5d42bb65-91b5-bb65-4ebf-5d42bb65","active_ingest_protocol":"rtmp"}},"video.live_stream.disconnected":{"description":"An encoder has disconnected from this live stream. Note that while disconnected the live stream is still `status: \'active\'`.","payload":{"type":"object","properties":{"type":{"type":"string","description":"Type for the webhook event"},"id":{"type":"string","description":"Unique identifier for the event"},"created_at":{"type":"string","description":"Time the event was created","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"object":{"type":"object","properties":{"type":{"type":"string"},"id":{"type":"string"}},"required":["type","id"]},"environment":{"type":"object","properties":{"name":{"type":"string","description":"Name for the environment"},"id":{"type":"string","description":"Unique identifier for the environment"}},"required":["name","id"]},"data":{"type":"object","x-required":["id","created_at","latency_mode","max_continuous_duration","status","stream_key"],"properties":{"id":{"type":"string","description":"Unique identifier for the Live Stream. Max 255 characters."},"created_at":{"type":"integer","format":"int32"},"stream_key":{"type":"string","description":"Unique key used for streaming to a Mux RTMP endpoint. This should be considered as sensitive as credentials, anyone with this stream key can begin streaming."},"active_asset_id":{"type":"string","description":"The Asset that is currently being created if there is an active broadcast."},"recent_asset_ids":{"type":"array","description":"An array of strings with the most recent Asset IDs that were created from this Live Stream. The most recently generated Asset ID is the last entry in the list.","items":{"type":"string"}},"status":{"type":"string","enum":["active","idle","disabled"],"description":"`idle` indicates that there is no active broadcast. `active` indicates that there is an active broadcast and `disabled` status indicates that no future RTMP streams can be published."},"playback_ids":{"type":"array","description":"An array of Playback ID objects. Use these to create HLS playback URLs. See [Play your videos](https://docs.mux.com/guides/play-your-videos) for more details.","items":{"type":"object","x-required":["id","policy"],"properties":{"id":{"type":"string","description":"Unique identifier for the PlaybackID"},"policy":{"type":"string","enum":["public","signed","drm"],"description":"* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\\n\\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](https://docs.mux.com/guides/secure-video-playback) for details about creating tokens.\\n\\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](https://docs.mux.com/guides/protect-videos-with-drm).\\n"},"drm_configuration_id":{"type":"string","description":"The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."}}}},"new_asset_settings":{"type":"object","properties":{"input":{"type":"array","description":"An array of objects that each describe an input file to be used to create the asset. As a shortcut, input can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.","items":{"type":"object","description":"An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.","properties":{"url":{"type":"string","description":"The URL of the file that Mux should download and use.\\n* For the main input file, this should be the URL to the muxed file for Mux to download, for example an MP4, MOV, MKV, or TS file. Mux supports most audio/video file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](https://docs.mux.com/guides/minimize-processing-time).\\n* For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](https://docs.mux.com/guides/minimize-processing-time).\\n* For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](https://en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](https://www.w3.org/TR/webvtt1/) formats for ingesting Subtitles and Closed Captions.\\n* For Watermarking or Overlay, the URL is the location of the watermark image. The maximum size is 4096x4096.\\n* When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.\\nThe url property may be omitted on the first input object when providing asset settings for LiveStream and Upload objects, in order to configure settings related to the primary (live stream or direct upload) input.\\n"},"overlay_settings":{"type":"object","description":"An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.","properties":{"vertical_align":{"type":"string","enum":["top","middle","bottom"],"description":"Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\\"top\\"`"},"vertical_margin":{"type":"string","description":"The distance from the vertical_align starting point and the image\'s closest edge. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). Negative values will move the overlay offscreen. In the case of \'middle\', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top."},"horizontal_align":{"type":"string","enum":["left","center","right"],"description":"Where the horizontal positioning of the overlay/watermark should begin from."},"horizontal_margin":{"type":"string","description":"The distance from the horizontal_align starting point and the image\'s closest edge. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). Negative values will move the overlay offscreen. In the case of \'center\', a positive value will shift the image towards the right and and a negative value will shift it towards the left."},"width":{"type":"string","description":"How wide the overlay should appear. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height."},"height":{"type":"string","description":"How tall the overlay should appear. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width."},"opacity":{"type":"string","description":"How opaque the overlay should appear, expressed as a percent. (Default 100%)"}}},"generated_subtitles":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"A name for this subtitle track."},"passthrough":{"type":"string","description":"Arbitrary metadata set for the subtitle track. Max 255 characters."},"language_code":{"type":"string","description":"The language to generate subtitles in.","default":"en","enum":["en","es","it","pt","de","fr","pl","ru","nl","ca","tr","sv","uk","no","fi","sk","el","cs","hr","da","ro","bg"]}}},"description":"Generate subtitle tracks using automatic speech recognition with this configuration. This may only be provided for the first input object (the main input file). For direct uploads, this first input should omit the url parameter, as the main input file is provided via the direct upload. This will create subtitles based on the audio track ingested from that main input file. Note that subtitle generation happens after initial ingest, so the generated tracks will be in the `preparing` state when the asset transitions to `ready`."},"start_time":{"type":"number","format":"double","description":"The time offset in seconds from the beginning of the video indicating the clip\'s starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."},"end_time":{"type":"number","format":"double","description":"The time offset in seconds from the beginning of the video, indicating the clip\'s ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."},"type":{"type":"string","enum":["video","audio","text"],"description":"This parameter is required for `text` type tracks."},"text_type":{"type":"string","enum":["subtitles"],"description":"Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](https://mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags/). This parameter is required for `text` type tracks."},"language_code":{"type":"string","description":"The language code value must be a valid [BCP 47](https://tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is required for `text` and `audio` track types."},"name":{"type":"string","description":"The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate a subtitle text track with this value. For example, the value should be \\"English\\" for a subtitle text track with `language_code` set to `en`. This optional parameter should be used only for `text` and `audio` type tracks. This parameter can be optionally provided for the first video input to denote the name of the muxed audio track if present. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value."},"closed_captions":{"type":"boolean","description":"Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."},"passthrough":{"type":"string","description":"This optional parameter should be used tracks with `type` of `text` and `text_type` set to `subtitles`."}}}},"advanced_playback_policies":{"type":"array","items":{"type":"object","properties":{"policy":{"type":"string","enum":["public","signed","drm"],"description":"* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\\n\\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](https://docs.mux.com/guides/secure-video-playback) for details about creating tokens.\\n\\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](https://docs.mux.com/guides/protect-videos-with-drm).\\n"},"drm_configuration_id":{"type":"string","description":"The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."}}},"description":"An array of playback policy objects that you want applied to this asset and available through `playback_ids`. `advanced_playback_policies` must be used instead of `playback_policy` when creating a DRM playback ID.\\n"},"per_title_encode":{"type":"boolean","format":"boolean","x-mux-doc-decorators":["hidden"],"deprecated":true},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata that will be included in the asset details and related webhooks. Can be used to store your own ID for a video along with the asset. **Max: 255 characters**."},"mp4_support":{"type":"string","enum":["none","standard","capped-1080p","audio-only","audio-only,capped-1080p"],"description":"Specify what level of support for mp4 playback.\\n\\n* The `capped-1080p` option produces a single MP4 file, called `capped-1080p.mp4`, with the video resolution capped at 1080p. This option produces an `audio.m4a` file for an audio-only asset.\\n* The `audio-only` option produces a single M4A file, called `audio.m4a` for a video or an audio-only asset. MP4 generation will error when this option is specified for a video-only asset.\\n* The `audio-only,capped-1080p` option produces both the `audio.m4a` and `capped-1080p.mp4` files. Only the `capped-1080p.mp4` file is produced for a video-only asset, while only the `audio.m4a` file is produced for an audio-only asset.\\n\\nThe `standard`(deprecated) option produces up to three MP4 files with different levels of resolution (`high.mp4`, `medium.mp4`, `low.mp4`, or `audio.m4a` for an audio-only asset).\\n\\nMP4 files are not produced for `none` (default).\\n\\nIn most cases you should use our default HLS-based streaming playback (`{playback_id}.m3u8`) which can automatically adjust to viewers\' connection speeds, but an mp4 can be useful for some legacy devices or downloading for offline playback. See the [Download your videos guide](https://docs.mux.com/guides/enable-static-mp4-renditions) for more information.\\n","x-mux-doc-decorators-deprecated-enum-values":["standard"]},"normalize_audio":{"type":"boolean","format":"boolean","description":"Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets.","default":false},"master_access":{"type":"string","enum":["none","temporary"],"description":"Specify what level (if any) of support for master access. Master access can be enabled temporarily for your asset to be downloaded. See the [Download your videos guide](https://docs.mux.com/guides/enable-static-mp4-renditions) for more information."},"test":{"type":"boolean","format":"boolean","description":"Marks the asset as a test asset when the value is set to true. A Test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test asset are watermarked with the Mux logo, limited to 10 seconds, deleted after 24 hrs."},"max_resolution_tier":{"type":"string","enum":["1080p","1440p","2160p"],"description":"Max resolution tier can be used to control the maximum `resolution_tier` your asset is encoded, stored, and streamed at. If not set, this defaults to `1080p`."},"encoding_tier":{"type":"string","deprecated":true,"enum":["smart","baseline","premium"],"description":"This field is deprecated. Please use `video_quality` instead. The encoding tier informs the cost, quality, and available platform features for the asset. The default encoding tier for an account can be set in the Mux Dashboard. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"video_quality":{"type":"string","enum":["basic","plus","premium"],"description":"The video quality controls the cost, quality, and available platform features for the asset. The default video quality for an account can be set in the Mux Dashboard. This field replaces the deprecated `encoding_tier` value. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"playback_policies":{"type":"array","items":{"type":"string","enum":["public","signed","drm"],"description":"* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\\n\\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](https://docs.mux.com/guides/secure-video-playback) for details about creating tokens.\\n\\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](https://docs.mux.com/guides/protect-videos-with-drm).\\n"},"description":"An array of playback policy names that you want applied to this asset and available through `playback_ids`. Options include: `\\"public\\"` (anyone with the playback URL can stream the asset). And `\\"signed\\"` (an additional access token is required to play the asset). If no playback_policy is set, the asset will have no playback IDs and will therefore not be playable. For simplicity, a single string name can be used in place of the array in the case of only one playback policy."},"inputs":{"type":"array","description":"An array of objects that each describe an input file to be used to create the asset. As a shortcut, input can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.","items":{"type":"object","description":"An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.","properties":{"url":{"type":"string","description":"The URL of the file that Mux should download and use.\\n* For the main input file, this should be the URL to the muxed file for Mux to download, for example an MP4, MOV, MKV, or TS file. Mux supports most audio/video file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](https://docs.mux.com/guides/minimize-processing-time).\\n* For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](https://docs.mux.com/guides/minimize-processing-time).\\n* For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](https://en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](https://www.w3.org/TR/webvtt1/) formats for ingesting Subtitles and Closed Captions.\\n* For Watermarking or Overlay, the URL is the location of the watermark image. The maximum size is 4096x4096.\\n* When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.\\nThe url property may be omitted on the first input object when providing asset settings for LiveStream and Upload objects, in order to configure settings related to the primary (live stream or direct upload) input.\\n"},"overlay_settings":{"type":"object","description":"An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.","properties":{"vertical_align":{"type":"string","enum":["top","middle","bottom"],"description":"Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\\"top\\"`"},"vertical_margin":{"type":"string","description":"The distance from the vertical_align starting point and the image\'s closest edge. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). Negative values will move the overlay offscreen. In the case of \'middle\', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top."},"horizontal_align":{"type":"string","enum":["left","center","right"],"description":"Where the horizontal positioning of the overlay/watermark should begin from."},"horizontal_margin":{"type":"string","description":"The distance from the horizontal_align starting point and the image\'s closest edge. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). Negative values will move the overlay offscreen. In the case of \'center\', a positive value will shift the image towards the right and and a negative value will shift it towards the left."},"width":{"type":"string","description":"How wide the overlay should appear. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height."},"height":{"type":"string","description":"How tall the overlay should appear. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width."},"opacity":{"type":"string","description":"How opaque the overlay should appear, expressed as a percent. (Default 100%)"}}},"generated_subtitles":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"A name for this subtitle track."},"passthrough":{"type":"string","description":"Arbitrary metadata set for the subtitle track. Max 255 characters."},"language_code":{"type":"string","description":"The language to generate subtitles in.","default":"en","enum":["en","es","it","pt","de","fr","pl","ru","nl","ca","tr","sv","uk","no","fi","sk","el","cs","hr","da","ro","bg"]}}},"description":"Generate subtitle tracks using automatic speech recognition with this configuration. This may only be provided for the first input object (the main input file). For direct uploads, this first input should omit the url parameter, as the main input file is provided via the direct upload. This will create subtitles based on the audio track ingested from that main input file. Note that subtitle generation happens after initial ingest, so the generated tracks will be in the `preparing` state when the asset transitions to `ready`."},"start_time":{"type":"number","format":"double","description":"The time offset in seconds from the beginning of the video indicating the clip\'s starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."},"end_time":{"type":"number","format":"double","description":"The time offset in seconds from the beginning of the video, indicating the clip\'s ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."},"type":{"type":"string","enum":["video","audio","text"],"description":"This parameter is required for `text` type tracks."},"text_type":{"type":"string","enum":["subtitles"],"description":"Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](https://mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags/). This parameter is required for `text` type tracks."},"language_code":{"type":"string","description":"The language code value must be a valid [BCP 47](https://tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is required for `text` and `audio` track types."},"name":{"type":"string","description":"The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate a subtitle text track with this value. For example, the value should be \\"English\\" for a subtitle text track with `language_code` set to `en`. This optional parameter should be used only for `text` and `audio` type tracks. This parameter can be optionally provided for the first video input to denote the name of the muxed audio track if present. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value."},"closed_captions":{"type":"boolean","description":"Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."},"passthrough":{"type":"string","description":"This optional parameter should be used tracks with `type` of `text` and `text_type` set to `subtitles`."}}}}}},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the asset. Max 255 characters."},"audio_only":{"type":"boolean","description":"The live stream only processes the audio track if the value is set to true. Mux drops the video track if broadcasted."},"embedded_subtitles":{"type":"array","items":{"type":"object","x-required":["name","language_code","language_channel"],"properties":{"name":{"type":"string","description":"A name for this live stream closed caption track."},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the live stream closed caption track. Max 255 characters."},"language_code":{"type":"string","description":"The language of the closed caption stream. Value must be BCP 47 compliant.","default":"en"},"language_channel":{"type":"string","description":"CEA-608 caption channel to read data from.","default":"cc1","enum":["cc1","cc2","cc3","cc4"]}}},"description":"Describes the embedded closed caption configuration of the incoming live stream."},"generated_subtitles":{"type":"array","items":{"type":"object","x-required":["name","language_code"],"properties":{"name":{"type":"string","description":"A name for this live stream subtitle track."},"passthrough":{"type":"string","description":"Arbitrary metadata set for the live stream subtitle track. Max 255 characters."},"language_code":{"type":"string","description":"The language to generate subtitles in.","default":"en","enum":["en","en-US"]},"transcription_vocabulary_ids":{"type":"array","items":{"type":"string"},"description":"Unique identifiers for existing Transcription Vocabularies to use while generating subtitles for the live stream. If the Transcription Vocabularies provided collectively have more than 1000 phrases, only the first 1000 phrases will be included."}}},"description":"Configure the incoming live stream to include subtitles created with automatic speech recognition. Each Asset created from a live stream with `generated_subtitles` configured will automatically receive two text tracks. The first of these will have a `text_source` value of `generated_live`, and will be available with `ready` status as soon as the stream is live. The second text track will have a `text_source` value of `generated_live_final` and will contain subtitles with improved accuracy, timing, and formatting. However, `generated_live_final` tracks will not be available in `ready` status until the live stream ends. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback."},"reconnect_window":{"type":"number","format":"float","default":60,"minimum":0,"maximum":1800,"description":"When live streaming software disconnects from Mux, either intentionally or due to a drop in the network, the Reconnect Window is the time in seconds that Mux should wait for the streaming software to reconnect before considering the live stream finished and completing the recorded asset. **Max**: 1800s (30 minutes).\\n\\nIf not specified directly, Standard Latency streams have a Reconnect Window of 60 seconds; Reduced and Low Latency streams have a default of 0 seconds, or no Reconnect Window. For that reason, we suggest specifying a value other than zero for Reduced and Low Latency streams.\\n\\nReduced and Low Latency streams with a Reconnect Window greater than zero will insert slate media into the recorded asset while waiting for the streaming software to reconnect or when there are brief interruptions in the live stream media. When using a Reconnect Window setting higher than 60 seconds with a Standard Latency stream, we highly recommend enabling slate with the `use_slate_for_standard_latency` option.\\n"},"use_slate_for_standard_latency":{"type":"boolean","format":"boolean","default":false,"description":"By default, Standard Latency live streams do not have slate media inserted while waiting for live streaming software to reconnect to Mux. Setting this to true enables slate insertion on a Standard Latency stream."},"reconnect_slate_url":{"type":"string","description":"The URL of the image file that Mux should download and use as slate media during interruptions of the live stream media. This file will be downloaded each time a new recorded asset is created from the live stream. If this is not set, the default slate media will be used."},"reduced_latency":{"type":"boolean","format":"boolean","deprecated":true,"x-mux-doc-decorators":["hidden"],"description":"This field is deprecated. Please use `latency_mode` instead. Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Set this if you want lower latency for your live stream. See the [Reduce live stream latency guide](https://docs.mux.com/guides/reduce-live-stream-latency) to understand the tradeoffs."},"low_latency":{"type":"boolean","format":"boolean","deprecated":true,"x-mux-doc-decorators":["hidden"],"description":"This field is deprecated. Please use `latency_mode` instead. Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Setting this option will enable compatibility with the LL-HLS specification for low-latency streaming. This typically has lower latency than Reduced Latency streams, and cannot be combined with Reduced Latency."},"simulcast_targets":{"type":"array","description":"Each Simulcast Target contains configuration details to broadcast (or \\"restream\\") a live stream to a third-party streaming service. [See the Stream live to 3rd party platforms guide](https://docs.mux.com/guides/stream-live-to-3rd-party-platforms).","items":{"type":"object","x-required":["id","url","status"],"properties":{"id":{"type":"string","description":"ID of the Simulcast Target"},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set when creating a simulcast target."},"status":{"type":"string","enum":["idle","starting","broadcasting","errored"],"description":"The current status of the simulcast target. See Statuses below for detailed description.\\n  * `idle`: Default status. When the parent live stream is in disconnected status, simulcast targets will be idle state.\\n  * `starting`: The simulcast target transitions into this state when the parent live stream transition into connected state.\\n  * `broadcasting`: The simulcast target has successfully connected to the third party live streaming service and is pushing video to that service.\\n  * `errored`: The simulcast target encountered an error either while attempting to connect to the third party live streaming service, or mid-broadcasting. When a simulcast target has this status it will have an `error_severity` field with more details about the error.\\n"},"stream_key":{"type":"string","description":"Stream Key represents a stream identifier on the third party live streaming service to send the parent live stream to. Only used for RTMP(s) simulcast destinations."},"url":{"type":"string","description":"The RTMP(s) or SRT endpoint for a simulcast destination.\\n* For RTMP(s) destinations, this should include the application name for the third party live streaming service, for example: `rtmp://live.example.com/app`.\\n* For SRT destinations, this should be a fully formed SRT connection string, for example: `srt://srt-live.example.com:1234?streamid={stream_key}&passphrase={srt_passphrase}`.\\n\\nNote: SRT simulcast targets can only be used when an source is connected over SRT.\\n"},"error_severity":{"type":"string","enum":["normal","fatal"],"description":"The severity of the error encountered by the simulcast target.\\nThis field is only set when the simulcast target is in the `errored` status.\\nSee the values of severities below and their descriptions.\\n  * `normal`: The simulcast target encountered an error either while attempting to connect to the third party live streaming service, or mid-broadcasting. A simulcast may transition back into the broadcasting state if a connection with the service can be re-established.\\n  * `fatal`: The simulcast target is incompatible with the current input to the parent live stream. No further attempts to this simulcast target will be made for the current live stream asset.\\n"}}}},"latency_mode":{"type":"string","enum":["low","reduced","standard"],"description":"Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Set this as an alternative to setting low latency or reduced latency flags."},"test":{"type":"boolean","format":"boolean","description":"True means this live stream is a test live stream. Test live streams can be used to help evaluate the Mux Video APIs for free. There is no limit on the number of test live streams, but they are watermarked with the Mux logo, and limited to 5 minutes. The test live stream is disabled after the stream is active for 5 mins and the recorded asset also deleted after 24 hours."},"max_continuous_duration":{"type":"integer","format":"int32","default":43200,"minimum":60,"maximum":43200,"description":"The time in seconds a live stream may be continuously active before being disconnected. Defaults to 12 hours."},"srt_passphrase":{"type":"string","description":"Unique key used for encrypting a stream to a Mux SRT endpoint."},"active_ingest_protocol":{"type":"string","enum":["rtmp","srt"],"description":"The protocol used for the active ingest stream. This is only set when the live stream is active."},"connected":{"type":"boolean"},"recording":{"type":"boolean"}}},"attempts":{"type":"array","description":"Attempts for sending out the webhook event","items":{"type":"object","properties":{"webhook_id":{"type":"integer","description":"Unique identifier for the webhook"},"response_status_code":{"type":"integer","description":"HTTP response status code for the webhook attempt"},"response_headers":{"type":"object","description":"HTTP response headers for the webhook attempt"},"response_body":{"type":["string","null"],"description":"HTTP response body for the webhook attempt"},"max_attempts":{"description":"Max attempts number for the webhook attempt","type":"integer"},"id":{"description":"Unique identifier for the webhook attempt","type":"string"},"created_at":{"description":"Time the webhook request was attempted","type":"string","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"address":{"description":"URL address for the webhook attempt","type":"string"}}}},"request_id":{"type":["string","null"],"deprecated":true},"accessor":{"type":["string","null"],"deprecated":true},"accessor_source":{"type":["string","null"],"deprecated":true}},"required":["type","id","created_at","object","environment","data","attempts"]},"example":{"active_asset_id":"SqQnqz6s5MBuXGvJaUWdXuXM93J9Q2yv","connected":true,"created_at":1606259944,"id":"sY7b7fW01LImWpoOv2oiVROwHv5Y","latency_mode":"reduced","max_continuous_duration":43200,"new_asset_settings":{"master_access":"temporary","playback_policies":["signed"]},"passthrough":"mux","playback_ids":[{"id":"BdTpnH6KkY01U004fGsErAPvVaRP6sIxkR","policy":"signed"}],"recent_asset_ids":["kaYHEoG9HMtnEGXlVGNqk2UheY02","B01x902mrEJ006aBOnF7j01HVf3I"],"reconnect_window":60,"recording":true,"reduced_latency":true,"status":"active","stream_key":"5d42bb65-91b5-bb65-4ebf-5d42bb65","active_ingest_protocol":"rtmp"}},"video.live_stream.idle":{"description":"The `reconnect_window` for this live stream has elapsed. The live stream `status` will now transition to `\'idle\'`.","payload":{"type":"object","properties":{"type":{"type":"string","description":"Type for the webhook event"},"id":{"type":"string","description":"Unique identifier for the event"},"created_at":{"type":"string","description":"Time the event was created","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"object":{"type":"object","properties":{"type":{"type":"string"},"id":{"type":"string"}},"required":["type","id"]},"environment":{"type":"object","properties":{"name":{"type":"string","description":"Name for the environment"},"id":{"type":"string","description":"Unique identifier for the environment"}},"required":["name","id"]},"data":{"type":"object","x-required":["id","created_at","latency_mode","max_continuous_duration","status","stream_key"],"properties":{"id":{"type":"string","description":"Unique identifier for the Live Stream. Max 255 characters."},"created_at":{"type":"integer","format":"int32"},"stream_key":{"type":"string","description":"Unique key used for streaming to a Mux RTMP endpoint. This should be considered as sensitive as credentials, anyone with this stream key can begin streaming."},"active_asset_id":{"type":"string","description":"The Asset that is currently being created if there is an active broadcast."},"recent_asset_ids":{"type":"array","description":"An array of strings with the most recent Asset IDs that were created from this Live Stream. The most recently generated Asset ID is the last entry in the list.","items":{"type":"string"}},"status":{"type":"string","enum":["active","idle","disabled"],"description":"`idle` indicates that there is no active broadcast. `active` indicates that there is an active broadcast and `disabled` status indicates that no future RTMP streams can be published."},"playback_ids":{"type":"array","description":"An array of Playback ID objects. Use these to create HLS playback URLs. See [Play your videos](https://docs.mux.com/guides/play-your-videos) for more details.","items":{"type":"object","x-required":["id","policy"],"properties":{"id":{"type":"string","description":"Unique identifier for the PlaybackID"},"policy":{"type":"string","enum":["public","signed","drm"],"description":"* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\\n\\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](https://docs.mux.com/guides/secure-video-playback) for details about creating tokens.\\n\\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](https://docs.mux.com/guides/protect-videos-with-drm).\\n"},"drm_configuration_id":{"type":"string","description":"The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."}}}},"new_asset_settings":{"type":"object","properties":{"input":{"type":"array","description":"An array of objects that each describe an input file to be used to create the asset. As a shortcut, input can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.","items":{"type":"object","description":"An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.","properties":{"url":{"type":"string","description":"The URL of the file that Mux should download and use.\\n* For the main input file, this should be the URL to the muxed file for Mux to download, for example an MP4, MOV, MKV, or TS file. Mux supports most audio/video file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](https://docs.mux.com/guides/minimize-processing-time).\\n* For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](https://docs.mux.com/guides/minimize-processing-time).\\n* For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](https://en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](https://www.w3.org/TR/webvtt1/) formats for ingesting Subtitles and Closed Captions.\\n* For Watermarking or Overlay, the URL is the location of the watermark image. The maximum size is 4096x4096.\\n* When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.\\nThe url property may be omitted on the first input object when providing asset settings for LiveStream and Upload objects, in order to configure settings related to the primary (live stream or direct upload) input.\\n"},"overlay_settings":{"type":"object","description":"An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.","properties":{"vertical_align":{"type":"string","enum":["top","middle","bottom"],"description":"Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\\"top\\"`"},"vertical_margin":{"type":"string","description":"The distance from the vertical_align starting point and the image\'s closest edge. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). Negative values will move the overlay offscreen. In the case of \'middle\', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top."},"horizontal_align":{"type":"string","enum":["left","center","right"],"description":"Where the horizontal positioning of the overlay/watermark should begin from."},"horizontal_margin":{"type":"string","description":"The distance from the horizontal_align starting point and the image\'s closest edge. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). Negative values will move the overlay offscreen. In the case of \'center\', a positive value will shift the image towards the right and and a negative value will shift it towards the left."},"width":{"type":"string","description":"How wide the overlay should appear. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height."},"height":{"type":"string","description":"How tall the overlay should appear. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width."},"opacity":{"type":"string","description":"How opaque the overlay should appear, expressed as a percent. (Default 100%)"}}},"generated_subtitles":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"A name for this subtitle track."},"passthrough":{"type":"string","description":"Arbitrary metadata set for the subtitle track. Max 255 characters."},"language_code":{"type":"string","description":"The language to generate subtitles in.","default":"en","enum":["en","es","it","pt","de","fr","pl","ru","nl","ca","tr","sv","uk","no","fi","sk","el","cs","hr","da","ro","bg"]}}},"description":"Generate subtitle tracks using automatic speech recognition with this configuration. This may only be provided for the first input object (the main input file). For direct uploads, this first input should omit the url parameter, as the main input file is provided via the direct upload. This will create subtitles based on the audio track ingested from that main input file. Note that subtitle generation happens after initial ingest, so the generated tracks will be in the `preparing` state when the asset transitions to `ready`."},"start_time":{"type":"number","format":"double","description":"The time offset in seconds from the beginning of the video indicating the clip\'s starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."},"end_time":{"type":"number","format":"double","description":"The time offset in seconds from the beginning of the video, indicating the clip\'s ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."},"type":{"type":"string","enum":["video","audio","text"],"description":"This parameter is required for `text` type tracks."},"text_type":{"type":"string","enum":["subtitles"],"description":"Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](https://mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags/). This parameter is required for `text` type tracks."},"language_code":{"type":"string","description":"The language code value must be a valid [BCP 47](https://tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is required for `text` and `audio` track types."},"name":{"type":"string","description":"The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate a subtitle text track with this value. For example, the value should be \\"English\\" for a subtitle text track with `language_code` set to `en`. This optional parameter should be used only for `text` and `audio` type tracks. This parameter can be optionally provided for the first video input to denote the name of the muxed audio track if present. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value."},"closed_captions":{"type":"boolean","description":"Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."},"passthrough":{"type":"string","description":"This optional parameter should be used tracks with `type` of `text` and `text_type` set to `subtitles`."}}}},"advanced_playback_policies":{"type":"array","items":{"type":"object","properties":{"policy":{"type":"string","enum":["public","signed","drm"],"description":"* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\\n\\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](https://docs.mux.com/guides/secure-video-playback) for details about creating tokens.\\n\\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](https://docs.mux.com/guides/protect-videos-with-drm).\\n"},"drm_configuration_id":{"type":"string","description":"The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."}}},"description":"An array of playback policy objects that you want applied to this asset and available through `playback_ids`. `advanced_playback_policies` must be used instead of `playback_policy` when creating a DRM playback ID.\\n"},"per_title_encode":{"type":"boolean","format":"boolean","x-mux-doc-decorators":["hidden"],"deprecated":true},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata that will be included in the asset details and related webhooks. Can be used to store your own ID for a video along with the asset. **Max: 255 characters**."},"mp4_support":{"type":"string","enum":["none","standard","capped-1080p","audio-only","audio-only,capped-1080p"],"description":"Specify what level of support for mp4 playback.\\n\\n* The `capped-1080p` option produces a single MP4 file, called `capped-1080p.mp4`, with the video resolution capped at 1080p. This option produces an `audio.m4a` file for an audio-only asset.\\n* The `audio-only` option produces a single M4A file, called `audio.m4a` for a video or an audio-only asset. MP4 generation will error when this option is specified for a video-only asset.\\n* The `audio-only,capped-1080p` option produces both the `audio.m4a` and `capped-1080p.mp4` files. Only the `capped-1080p.mp4` file is produced for a video-only asset, while only the `audio.m4a` file is produced for an audio-only asset.\\n\\nThe `standard`(deprecated) option produces up to three MP4 files with different levels of resolution (`high.mp4`, `medium.mp4`, `low.mp4`, or `audio.m4a` for an audio-only asset).\\n\\nMP4 files are not produced for `none` (default).\\n\\nIn most cases you should use our default HLS-based streaming playback (`{playback_id}.m3u8`) which can automatically adjust to viewers\' connection speeds, but an mp4 can be useful for some legacy devices or downloading for offline playback. See the [Download your videos guide](https://docs.mux.com/guides/enable-static-mp4-renditions) for more information.\\n","x-mux-doc-decorators-deprecated-enum-values":["standard"]},"normalize_audio":{"type":"boolean","format":"boolean","description":"Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets.","default":false},"master_access":{"type":"string","enum":["none","temporary"],"description":"Specify what level (if any) of support for master access. Master access can be enabled temporarily for your asset to be downloaded. See the [Download your videos guide](https://docs.mux.com/guides/enable-static-mp4-renditions) for more information."},"test":{"type":"boolean","format":"boolean","description":"Marks the asset as a test asset when the value is set to true. A Test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test asset are watermarked with the Mux logo, limited to 10 seconds, deleted after 24 hrs."},"max_resolution_tier":{"type":"string","enum":["1080p","1440p","2160p"],"description":"Max resolution tier can be used to control the maximum `resolution_tier` your asset is encoded, stored, and streamed at. If not set, this defaults to `1080p`."},"encoding_tier":{"type":"string","deprecated":true,"enum":["smart","baseline","premium"],"description":"This field is deprecated. Please use `video_quality` instead. The encoding tier informs the cost, quality, and available platform features for the asset. The default encoding tier for an account can be set in the Mux Dashboard. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"video_quality":{"type":"string","enum":["basic","plus","premium"],"description":"The video quality controls the cost, quality, and available platform features for the asset. The default video quality for an account can be set in the Mux Dashboard. This field replaces the deprecated `encoding_tier` value. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"playback_policies":{"type":"array","items":{"type":"string","enum":["public","signed","drm"],"description":"* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\\n\\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](https://docs.mux.com/guides/secure-video-playback) for details about creating tokens.\\n\\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](https://docs.mux.com/guides/protect-videos-with-drm).\\n"},"description":"An array of playback policy names that you want applied to this asset and available through `playback_ids`. Options include: `\\"public\\"` (anyone with the playback URL can stream the asset). And `\\"signed\\"` (an additional access token is required to play the asset). If no playback_policy is set, the asset will have no playback IDs and will therefore not be playable. For simplicity, a single string name can be used in place of the array in the case of only one playback policy."},"inputs":{"type":"array","description":"An array of objects that each describe an input file to be used to create the asset. As a shortcut, input can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.","items":{"type":"object","description":"An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.","properties":{"url":{"type":"string","description":"The URL of the file that Mux should download and use.\\n* For the main input file, this should be the URL to the muxed file for Mux to download, for example an MP4, MOV, MKV, or TS file. Mux supports most audio/video file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](https://docs.mux.com/guides/minimize-processing-time).\\n* For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](https://docs.mux.com/guides/minimize-processing-time).\\n* For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](https://en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](https://www.w3.org/TR/webvtt1/) formats for ingesting Subtitles and Closed Captions.\\n* For Watermarking or Overlay, the URL is the location of the watermark image. The maximum size is 4096x4096.\\n* When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.\\nThe url property may be omitted on the first input object when providing asset settings for LiveStream and Upload objects, in order to configure settings related to the primary (live stream or direct upload) input.\\n"},"overlay_settings":{"type":"object","description":"An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.","properties":{"vertical_align":{"type":"string","enum":["top","middle","bottom"],"description":"Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\\"top\\"`"},"vertical_margin":{"type":"string","description":"The distance from the vertical_align starting point and the image\'s closest edge. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). Negative values will move the overlay offscreen. In the case of \'middle\', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top."},"horizontal_align":{"type":"string","enum":["left","center","right"],"description":"Where the horizontal positioning of the overlay/watermark should begin from."},"horizontal_margin":{"type":"string","description":"The distance from the horizontal_align starting point and the image\'s closest edge. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). Negative values will move the overlay offscreen. In the case of \'center\', a positive value will shift the image towards the right and and a negative value will shift it towards the left."},"width":{"type":"string","description":"How wide the overlay should appear. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height."},"height":{"type":"string","description":"How tall the overlay should appear. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width."},"opacity":{"type":"string","description":"How opaque the overlay should appear, expressed as a percent. (Default 100%)"}}},"generated_subtitles":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"A name for this subtitle track."},"passthrough":{"type":"string","description":"Arbitrary metadata set for the subtitle track. Max 255 characters."},"language_code":{"type":"string","description":"The language to generate subtitles in.","default":"en","enum":["en","es","it","pt","de","fr","pl","ru","nl","ca","tr","sv","uk","no","fi","sk","el","cs","hr","da","ro","bg"]}}},"description":"Generate subtitle tracks using automatic speech recognition with this configuration. This may only be provided for the first input object (the main input file). For direct uploads, this first input should omit the url parameter, as the main input file is provided via the direct upload. This will create subtitles based on the audio track ingested from that main input file. Note that subtitle generation happens after initial ingest, so the generated tracks will be in the `preparing` state when the asset transitions to `ready`."},"start_time":{"type":"number","format":"double","description":"The time offset in seconds from the beginning of the video indicating the clip\'s starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."},"end_time":{"type":"number","format":"double","description":"The time offset in seconds from the beginning of the video, indicating the clip\'s ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."},"type":{"type":"string","enum":["video","audio","text"],"description":"This parameter is required for `text` type tracks."},"text_type":{"type":"string","enum":["subtitles"],"description":"Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](https://mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags/). This parameter is required for `text` type tracks."},"language_code":{"type":"string","description":"The language code value must be a valid [BCP 47](https://tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is required for `text` and `audio` track types."},"name":{"type":"string","description":"The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate a subtitle text track with this value. For example, the value should be \\"English\\" for a subtitle text track with `language_code` set to `en`. This optional parameter should be used only for `text` and `audio` type tracks. This parameter can be optionally provided for the first video input to denote the name of the muxed audio track if present. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value."},"closed_captions":{"type":"boolean","description":"Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."},"passthrough":{"type":"string","description":"This optional parameter should be used tracks with `type` of `text` and `text_type` set to `subtitles`."}}}}}},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the asset. Max 255 characters."},"audio_only":{"type":"boolean","description":"The live stream only processes the audio track if the value is set to true. Mux drops the video track if broadcasted."},"embedded_subtitles":{"type":"array","items":{"type":"object","x-required":["name","language_code","language_channel"],"properties":{"name":{"type":"string","description":"A name for this live stream closed caption track."},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the live stream closed caption track. Max 255 characters."},"language_code":{"type":"string","description":"The language of the closed caption stream. Value must be BCP 47 compliant.","default":"en"},"language_channel":{"type":"string","description":"CEA-608 caption channel to read data from.","default":"cc1","enum":["cc1","cc2","cc3","cc4"]}}},"description":"Describes the embedded closed caption configuration of the incoming live stream."},"generated_subtitles":{"type":"array","items":{"type":"object","x-required":["name","language_code"],"properties":{"name":{"type":"string","description":"A name for this live stream subtitle track."},"passthrough":{"type":"string","description":"Arbitrary metadata set for the live stream subtitle track. Max 255 characters."},"language_code":{"type":"string","description":"The language to generate subtitles in.","default":"en","enum":["en","en-US"]},"transcription_vocabulary_ids":{"type":"array","items":{"type":"string"},"description":"Unique identifiers for existing Transcription Vocabularies to use while generating subtitles for the live stream. If the Transcription Vocabularies provided collectively have more than 1000 phrases, only the first 1000 phrases will be included."}}},"description":"Configure the incoming live stream to include subtitles created with automatic speech recognition. Each Asset created from a live stream with `generated_subtitles` configured will automatically receive two text tracks. The first of these will have a `text_source` value of `generated_live`, and will be available with `ready` status as soon as the stream is live. The second text track will have a `text_source` value of `generated_live_final` and will contain subtitles with improved accuracy, timing, and formatting. However, `generated_live_final` tracks will not be available in `ready` status until the live stream ends. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback."},"reconnect_window":{"type":"number","format":"float","default":60,"minimum":0,"maximum":1800,"description":"When live streaming software disconnects from Mux, either intentionally or due to a drop in the network, the Reconnect Window is the time in seconds that Mux should wait for the streaming software to reconnect before considering the live stream finished and completing the recorded asset. **Max**: 1800s (30 minutes).\\n\\nIf not specified directly, Standard Latency streams have a Reconnect Window of 60 seconds; Reduced and Low Latency streams have a default of 0 seconds, or no Reconnect Window. For that reason, we suggest specifying a value other than zero for Reduced and Low Latency streams.\\n\\nReduced and Low Latency streams with a Reconnect Window greater than zero will insert slate media into the recorded asset while waiting for the streaming software to reconnect or when there are brief interruptions in the live stream media. When using a Reconnect Window setting higher than 60 seconds with a Standard Latency stream, we highly recommend enabling slate with the `use_slate_for_standard_latency` option.\\n"},"use_slate_for_standard_latency":{"type":"boolean","format":"boolean","default":false,"description":"By default, Standard Latency live streams do not have slate media inserted while waiting for live streaming software to reconnect to Mux. Setting this to true enables slate insertion on a Standard Latency stream."},"reconnect_slate_url":{"type":"string","description":"The URL of the image file that Mux should download and use as slate media during interruptions of the live stream media. This file will be downloaded each time a new recorded asset is created from the live stream. If this is not set, the default slate media will be used."},"reduced_latency":{"type":"boolean","format":"boolean","deprecated":true,"x-mux-doc-decorators":["hidden"],"description":"This field is deprecated. Please use `latency_mode` instead. Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Set this if you want lower latency for your live stream. See the [Reduce live stream latency guide](https://docs.mux.com/guides/reduce-live-stream-latency) to understand the tradeoffs."},"low_latency":{"type":"boolean","format":"boolean","deprecated":true,"x-mux-doc-decorators":["hidden"],"description":"This field is deprecated. Please use `latency_mode` instead. Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Setting this option will enable compatibility with the LL-HLS specification for low-latency streaming. This typically has lower latency than Reduced Latency streams, and cannot be combined with Reduced Latency."},"simulcast_targets":{"type":"array","description":"Each Simulcast Target contains configuration details to broadcast (or \\"restream\\") a live stream to a third-party streaming service. [See the Stream live to 3rd party platforms guide](https://docs.mux.com/guides/stream-live-to-3rd-party-platforms).","items":{"type":"object","x-required":["id","url","status"],"properties":{"id":{"type":"string","description":"ID of the Simulcast Target"},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set when creating a simulcast target."},"status":{"type":"string","enum":["idle","starting","broadcasting","errored"],"description":"The current status of the simulcast target. See Statuses below for detailed description.\\n  * `idle`: Default status. When the parent live stream is in disconnected status, simulcast targets will be idle state.\\n  * `starting`: The simulcast target transitions into this state when the parent live stream transition into connected state.\\n  * `broadcasting`: The simulcast target has successfully connected to the third party live streaming service and is pushing video to that service.\\n  * `errored`: The simulcast target encountered an error either while attempting to connect to the third party live streaming service, or mid-broadcasting. When a simulcast target has this status it will have an `error_severity` field with more details about the error.\\n"},"stream_key":{"type":"string","description":"Stream Key represents a stream identifier on the third party live streaming service to send the parent live stream to. Only used for RTMP(s) simulcast destinations."},"url":{"type":"string","description":"The RTMP(s) or SRT endpoint for a simulcast destination.\\n* For RTMP(s) destinations, this should include the application name for the third party live streaming service, for example: `rtmp://live.example.com/app`.\\n* For SRT destinations, this should be a fully formed SRT connection string, for example: `srt://srt-live.example.com:1234?streamid={stream_key}&passphrase={srt_passphrase}`.\\n\\nNote: SRT simulcast targets can only be used when an source is connected over SRT.\\n"},"error_severity":{"type":"string","enum":["normal","fatal"],"description":"The severity of the error encountered by the simulcast target.\\nThis field is only set when the simulcast target is in the `errored` status.\\nSee the values of severities below and their descriptions.\\n  * `normal`: The simulcast target encountered an error either while attempting to connect to the third party live streaming service, or mid-broadcasting. A simulcast may transition back into the broadcasting state if a connection with the service can be re-established.\\n  * `fatal`: The simulcast target is incompatible with the current input to the parent live stream. No further attempts to this simulcast target will be made for the current live stream asset.\\n"}}}},"latency_mode":{"type":"string","enum":["low","reduced","standard"],"description":"Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Set this as an alternative to setting low latency or reduced latency flags."},"test":{"type":"boolean","format":"boolean","description":"True means this live stream is a test live stream. Test live streams can be used to help evaluate the Mux Video APIs for free. There is no limit on the number of test live streams, but they are watermarked with the Mux logo, and limited to 5 minutes. The test live stream is disabled after the stream is active for 5 mins and the recorded asset also deleted after 24 hours."},"max_continuous_duration":{"type":"integer","format":"int32","default":43200,"minimum":60,"maximum":43200,"description":"The time in seconds a live stream may be continuously active before being disconnected. Defaults to 12 hours."},"srt_passphrase":{"type":"string","description":"Unique key used for encrypting a stream to a Mux SRT endpoint."},"active_ingest_protocol":{"type":"string","enum":["rtmp","srt"],"description":"The protocol used for the active ingest stream. This is only set when the live stream is active."},"connected":{"type":"boolean"},"recording":{"type":"boolean"}}},"attempts":{"type":"array","description":"Attempts for sending out the webhook event","items":{"type":"object","properties":{"webhook_id":{"type":"integer","description":"Unique identifier for the webhook"},"response_status_code":{"type":"integer","description":"HTTP response status code for the webhook attempt"},"response_headers":{"type":"object","description":"HTTP response headers for the webhook attempt"},"response_body":{"type":["string","null"],"description":"HTTP response body for the webhook attempt"},"max_attempts":{"description":"Max attempts number for the webhook attempt","type":"integer"},"id":{"description":"Unique identifier for the webhook attempt","type":"string"},"created_at":{"description":"Time the webhook request was attempted","type":"string","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"address":{"description":"URL address for the webhook attempt","type":"string"}}}},"request_id":{"type":["string","null"],"deprecated":true},"accessor":{"type":["string","null"],"deprecated":true},"accessor_source":{"type":["string","null"],"deprecated":true}},"required":["type","id","created_at","object","environment","data","attempts"]},"example":{"active_asset_id":"SqQnqz6s5MBuXGvJaUWdXuXM93J9Q2yv","connected":true,"created_at":1606259944,"id":"sY7b7fW01LImWpoOv2oiVROwHv5Y","latency_mode":"reduced","max_continuous_duration":43200,"new_asset_settings":{"master_access":"temporary","playback_policies":["signed"]},"passthrough":"mux","playback_ids":[{"id":"BdTpnH6KkY01U004fGsErAPvVaRP6sIxkR","policy":"signed"}],"recent_asset_ids":["kaYHEoG9HMtnEGXlVGNqk2UheY02","B01x902mrEJ006aBOnF7j01HVf3I"],"reconnect_window":60,"recording":true,"reduced_latency":true,"status":"idle","stream_key":"5d42bb65-91b5-bb65-4ebf-5d42bb65"}},"video.live_stream.updated":{"description":"This live stream has been updated. For example, after resetting the live stream\'s stream key.","payload":{"type":"object","properties":{"type":{"type":"string","description":"Type for the webhook event"},"id":{"type":"string","description":"Unique identifier for the event"},"created_at":{"type":"string","description":"Time the event was created","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"object":{"type":"object","properties":{"type":{"type":"string"},"id":{"type":"string"}},"required":["type","id"]},"environment":{"type":"object","properties":{"name":{"type":"string","description":"Name for the environment"},"id":{"type":"string","description":"Unique identifier for the environment"}},"required":["name","id"]},"data":{"type":"object","x-required":["id","created_at","latency_mode","max_continuous_duration","status","stream_key"],"properties":{"id":{"type":"string","description":"Unique identifier for the Live Stream. Max 255 characters."},"created_at":{"type":"integer","format":"int32"},"stream_key":{"type":"string","description":"Unique key used for streaming to a Mux RTMP endpoint. This should be considered as sensitive as credentials, anyone with this stream key can begin streaming."},"active_asset_id":{"type":"string","description":"The Asset that is currently being created if there is an active broadcast."},"recent_asset_ids":{"type":"array","description":"An array of strings with the most recent Asset IDs that were created from this Live Stream. The most recently generated Asset ID is the last entry in the list.","items":{"type":"string"}},"status":{"type":"string","enum":["active","idle","disabled"],"description":"`idle` indicates that there is no active broadcast. `active` indicates that there is an active broadcast and `disabled` status indicates that no future RTMP streams can be published."},"playback_ids":{"type":"array","description":"An array of Playback ID objects. Use these to create HLS playback URLs. See [Play your videos](https://docs.mux.com/guides/play-your-videos) for more details.","items":{"type":"object","x-required":["id","policy"],"properties":{"id":{"type":"string","description":"Unique identifier for the PlaybackID"},"policy":{"type":"string","enum":["public","signed","drm"],"description":"* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\\n\\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](https://docs.mux.com/guides/secure-video-playback) for details about creating tokens.\\n\\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](https://docs.mux.com/guides/protect-videos-with-drm).\\n"},"drm_configuration_id":{"type":"string","description":"The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."}}}},"new_asset_settings":{"type":"object","properties":{"input":{"type":"array","description":"An array of objects that each describe an input file to be used to create the asset. As a shortcut, input can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.","items":{"type":"object","description":"An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.","properties":{"url":{"type":"string","description":"The URL of the file that Mux should download and use.\\n* For the main input file, this should be the URL to the muxed file for Mux to download, for example an MP4, MOV, MKV, or TS file. Mux supports most audio/video file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](https://docs.mux.com/guides/minimize-processing-time).\\n* For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](https://docs.mux.com/guides/minimize-processing-time).\\n* For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](https://en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](https://www.w3.org/TR/webvtt1/) formats for ingesting Subtitles and Closed Captions.\\n* For Watermarking or Overlay, the URL is the location of the watermark image. The maximum size is 4096x4096.\\n* When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.\\nThe url property may be omitted on the first input object when providing asset settings for LiveStream and Upload objects, in order to configure settings related to the primary (live stream or direct upload) input.\\n"},"overlay_settings":{"type":"object","description":"An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.","properties":{"vertical_align":{"type":"string","enum":["top","middle","bottom"],"description":"Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\\"top\\"`"},"vertical_margin":{"type":"string","description":"The distance from the vertical_align starting point and the image\'s closest edge. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). Negative values will move the overlay offscreen. In the case of \'middle\', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top."},"horizontal_align":{"type":"string","enum":["left","center","right"],"description":"Where the horizontal positioning of the overlay/watermark should begin from."},"horizontal_margin":{"type":"string","description":"The distance from the horizontal_align starting point and the image\'s closest edge. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). Negative values will move the overlay offscreen. In the case of \'center\', a positive value will shift the image towards the right and and a negative value will shift it towards the left."},"width":{"type":"string","description":"How wide the overlay should appear. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height."},"height":{"type":"string","description":"How tall the overlay should appear. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width."},"opacity":{"type":"string","description":"How opaque the overlay should appear, expressed as a percent. (Default 100%)"}}},"generated_subtitles":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"A name for this subtitle track."},"passthrough":{"type":"string","description":"Arbitrary metadata set for the subtitle track. Max 255 characters."},"language_code":{"type":"string","description":"The language to generate subtitles in.","default":"en","enum":["en","es","it","pt","de","fr","pl","ru","nl","ca","tr","sv","uk","no","fi","sk","el","cs","hr","da","ro","bg"]}}},"description":"Generate subtitle tracks using automatic speech recognition with this configuration. This may only be provided for the first input object (the main input file). For direct uploads, this first input should omit the url parameter, as the main input file is provided via the direct upload. This will create subtitles based on the audio track ingested from that main input file. Note that subtitle generation happens after initial ingest, so the generated tracks will be in the `preparing` state when the asset transitions to `ready`."},"start_time":{"type":"number","format":"double","description":"The time offset in seconds from the beginning of the video indicating the clip\'s starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."},"end_time":{"type":"number","format":"double","description":"The time offset in seconds from the beginning of the video, indicating the clip\'s ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."},"type":{"type":"string","enum":["video","audio","text"],"description":"This parameter is required for `text` type tracks."},"text_type":{"type":"string","enum":["subtitles"],"description":"Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](https://mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags/). This parameter is required for `text` type tracks."},"language_code":{"type":"string","description":"The language code value must be a valid [BCP 47](https://tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is required for `text` and `audio` track types."},"name":{"type":"string","description":"The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate a subtitle text track with this value. For example, the value should be \\"English\\" for a subtitle text track with `language_code` set to `en`. This optional parameter should be used only for `text` and `audio` type tracks. This parameter can be optionally provided for the first video input to denote the name of the muxed audio track if present. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value."},"closed_captions":{"type":"boolean","description":"Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."},"passthrough":{"type":"string","description":"This optional parameter should be used tracks with `type` of `text` and `text_type` set to `subtitles`."}}}},"advanced_playback_policies":{"type":"array","items":{"type":"object","properties":{"policy":{"type":"string","enum":["public","signed","drm"],"description":"* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\\n\\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](https://docs.mux.com/guides/secure-video-playback) for details about creating tokens.\\n\\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](https://docs.mux.com/guides/protect-videos-with-drm).\\n"},"drm_configuration_id":{"type":"string","description":"The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."}}},"description":"An array of playback policy objects that you want applied to this asset and available through `playback_ids`. `advanced_playback_policies` must be used instead of `playback_policy` when creating a DRM playback ID.\\n"},"per_title_encode":{"type":"boolean","format":"boolean","x-mux-doc-decorators":["hidden"],"deprecated":true},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata that will be included in the asset details and related webhooks. Can be used to store your own ID for a video along with the asset. **Max: 255 characters**."},"mp4_support":{"type":"string","enum":["none","standard","capped-1080p","audio-only","audio-only,capped-1080p"],"description":"Specify what level of support for mp4 playback.\\n\\n* The `capped-1080p` option produces a single MP4 file, called `capped-1080p.mp4`, with the video resolution capped at 1080p. This option produces an `audio.m4a` file for an audio-only asset.\\n* The `audio-only` option produces a single M4A file, called `audio.m4a` for a video or an audio-only asset. MP4 generation will error when this option is specified for a video-only asset.\\n* The `audio-only,capped-1080p` option produces both the `audio.m4a` and `capped-1080p.mp4` files. Only the `capped-1080p.mp4` file is produced for a video-only asset, while only the `audio.m4a` file is produced for an audio-only asset.\\n\\nThe `standard`(deprecated) option produces up to three MP4 files with different levels of resolution (`high.mp4`, `medium.mp4`, `low.mp4`, or `audio.m4a` for an audio-only asset).\\n\\nMP4 files are not produced for `none` (default).\\n\\nIn most cases you should use our default HLS-based streaming playback (`{playback_id}.m3u8`) which can automatically adjust to viewers\' connection speeds, but an mp4 can be useful for some legacy devices or downloading for offline playback. See the [Download your videos guide](https://docs.mux.com/guides/enable-static-mp4-renditions) for more information.\\n","x-mux-doc-decorators-deprecated-enum-values":["standard"]},"normalize_audio":{"type":"boolean","format":"boolean","description":"Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets.","default":false},"master_access":{"type":"string","enum":["none","temporary"],"description":"Specify what level (if any) of support for master access. Master access can be enabled temporarily for your asset to be downloaded. See the [Download your videos guide](https://docs.mux.com/guides/enable-static-mp4-renditions) for more information."},"test":{"type":"boolean","format":"boolean","description":"Marks the asset as a test asset when the value is set to true. A Test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test asset are watermarked with the Mux logo, limited to 10 seconds, deleted after 24 hrs."},"max_resolution_tier":{"type":"string","enum":["1080p","1440p","2160p"],"description":"Max resolution tier can be used to control the maximum `resolution_tier` your asset is encoded, stored, and streamed at. If not set, this defaults to `1080p`."},"encoding_tier":{"type":"string","deprecated":true,"enum":["smart","baseline","premium"],"description":"This field is deprecated. Please use `video_quality` instead. The encoding tier informs the cost, quality, and available platform features for the asset. The default encoding tier for an account can be set in the Mux Dashboard. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"video_quality":{"type":"string","enum":["basic","plus","premium"],"description":"The video quality controls the cost, quality, and available platform features for the asset. The default video quality for an account can be set in the Mux Dashboard. This field replaces the deprecated `encoding_tier` value. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"playback_policies":{"type":"array","items":{"type":"string","enum":["public","signed","drm"],"description":"* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\\n\\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](https://docs.mux.com/guides/secure-video-playback) for details about creating tokens.\\n\\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](https://docs.mux.com/guides/protect-videos-with-drm).\\n"},"description":"An array of playback policy names that you want applied to this asset and available through `playback_ids`. Options include: `\\"public\\"` (anyone with the playback URL can stream the asset). And `\\"signed\\"` (an additional access token is required to play the asset). If no playback_policy is set, the asset will have no playback IDs and will therefore not be playable. For simplicity, a single string name can be used in place of the array in the case of only one playback policy."},"inputs":{"type":"array","description":"An array of objects that each describe an input file to be used to create the asset. As a shortcut, input can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.","items":{"type":"object","description":"An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.","properties":{"url":{"type":"string","description":"The URL of the file that Mux should download and use.\\n* For the main input file, this should be the URL to the muxed file for Mux to download, for example an MP4, MOV, MKV, or TS file. Mux supports most audio/video file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](https://docs.mux.com/guides/minimize-processing-time).\\n* For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](https://docs.mux.com/guides/minimize-processing-time).\\n* For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](https://en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](https://www.w3.org/TR/webvtt1/) formats for ingesting Subtitles and Closed Captions.\\n* For Watermarking or Overlay, the URL is the location of the watermark image. The maximum size is 4096x4096.\\n* When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.\\nThe url property may be omitted on the first input object when providing asset settings for LiveStream and Upload objects, in order to configure settings related to the primary (live stream or direct upload) input.\\n"},"overlay_settings":{"type":"object","description":"An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.","properties":{"vertical_align":{"type":"string","enum":["top","middle","bottom"],"description":"Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\\"top\\"`"},"vertical_margin":{"type":"string","description":"The distance from the vertical_align starting point and the image\'s closest edge. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). Negative values will move the overlay offscreen. In the case of \'middle\', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top."},"horizontal_align":{"type":"string","enum":["left","center","right"],"description":"Where the horizontal positioning of the overlay/watermark should begin from."},"horizontal_margin":{"type":"string","description":"The distance from the horizontal_align starting point and the image\'s closest edge. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). Negative values will move the overlay offscreen. In the case of \'center\', a positive value will shift the image towards the right and and a negative value will shift it towards the left."},"width":{"type":"string","description":"How wide the overlay should appear. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height."},"height":{"type":"string","description":"How tall the overlay should appear. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width."},"opacity":{"type":"string","description":"How opaque the overlay should appear, expressed as a percent. (Default 100%)"}}},"generated_subtitles":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"A name for this subtitle track."},"passthrough":{"type":"string","description":"Arbitrary metadata set for the subtitle track. Max 255 characters."},"language_code":{"type":"string","description":"The language to generate subtitles in.","default":"en","enum":["en","es","it","pt","de","fr","pl","ru","nl","ca","tr","sv","uk","no","fi","sk","el","cs","hr","da","ro","bg"]}}},"description":"Generate subtitle tracks using automatic speech recognition with this configuration. This may only be provided for the first input object (the main input file). For direct uploads, this first input should omit the url parameter, as the main input file is provided via the direct upload. This will create subtitles based on the audio track ingested from that main input file. Note that subtitle generation happens after initial ingest, so the generated tracks will be in the `preparing` state when the asset transitions to `ready`."},"start_time":{"type":"number","format":"double","description":"The time offset in seconds from the beginning of the video indicating the clip\'s starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."},"end_time":{"type":"number","format":"double","description":"The time offset in seconds from the beginning of the video, indicating the clip\'s ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."},"type":{"type":"string","enum":["video","audio","text"],"description":"This parameter is required for `text` type tracks."},"text_type":{"type":"string","enum":["subtitles"],"description":"Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](https://mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags/). This parameter is required for `text` type tracks."},"language_code":{"type":"string","description":"The language code value must be a valid [BCP 47](https://tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is required for `text` and `audio` track types."},"name":{"type":"string","description":"The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate a subtitle text track with this value. For example, the value should be \\"English\\" for a subtitle text track with `language_code` set to `en`. This optional parameter should be used only for `text` and `audio` type tracks. This parameter can be optionally provided for the first video input to denote the name of the muxed audio track if present. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value."},"closed_captions":{"type":"boolean","description":"Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."},"passthrough":{"type":"string","description":"This optional parameter should be used tracks with `type` of `text` and `text_type` set to `subtitles`."}}}}}},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the asset. Max 255 characters."},"audio_only":{"type":"boolean","description":"The live stream only processes the audio track if the value is set to true. Mux drops the video track if broadcasted."},"embedded_subtitles":{"type":"array","items":{"type":"object","x-required":["name","language_code","language_channel"],"properties":{"name":{"type":"string","description":"A name for this live stream closed caption track."},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the live stream closed caption track. Max 255 characters."},"language_code":{"type":"string","description":"The language of the closed caption stream. Value must be BCP 47 compliant.","default":"en"},"language_channel":{"type":"string","description":"CEA-608 caption channel to read data from.","default":"cc1","enum":["cc1","cc2","cc3","cc4"]}}},"description":"Describes the embedded closed caption configuration of the incoming live stream."},"generated_subtitles":{"type":"array","items":{"type":"object","x-required":["name","language_code"],"properties":{"name":{"type":"string","description":"A name for this live stream subtitle track."},"passthrough":{"type":"string","description":"Arbitrary metadata set for the live stream subtitle track. Max 255 characters."},"language_code":{"type":"string","description":"The language to generate subtitles in.","default":"en","enum":["en","en-US"]},"transcription_vocabulary_ids":{"type":"array","items":{"type":"string"},"description":"Unique identifiers for existing Transcription Vocabularies to use while generating subtitles for the live stream. If the Transcription Vocabularies provided collectively have more than 1000 phrases, only the first 1000 phrases will be included."}}},"description":"Configure the incoming live stream to include subtitles created with automatic speech recognition. Each Asset created from a live stream with `generated_subtitles` configured will automatically receive two text tracks. The first of these will have a `text_source` value of `generated_live`, and will be available with `ready` status as soon as the stream is live. The second text track will have a `text_source` value of `generated_live_final` and will contain subtitles with improved accuracy, timing, and formatting. However, `generated_live_final` tracks will not be available in `ready` status until the live stream ends. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback."},"reconnect_window":{"type":"number","format":"float","default":60,"minimum":0,"maximum":1800,"description":"When live streaming software disconnects from Mux, either intentionally or due to a drop in the network, the Reconnect Window is the time in seconds that Mux should wait for the streaming software to reconnect before considering the live stream finished and completing the recorded asset. **Max**: 1800s (30 minutes).\\n\\nIf not specified directly, Standard Latency streams have a Reconnect Window of 60 seconds; Reduced and Low Latency streams have a default of 0 seconds, or no Reconnect Window. For that reason, we suggest specifying a value other than zero for Reduced and Low Latency streams.\\n\\nReduced and Low Latency streams with a Reconnect Window greater than zero will insert slate media into the recorded asset while waiting for the streaming software to reconnect or when there are brief interruptions in the live stream media. When using a Reconnect Window setting higher than 60 seconds with a Standard Latency stream, we highly recommend enabling slate with the `use_slate_for_standard_latency` option.\\n"},"use_slate_for_standard_latency":{"type":"boolean","format":"boolean","default":false,"description":"By default, Standard Latency live streams do not have slate media inserted while waiting for live streaming software to reconnect to Mux. Setting this to true enables slate insertion on a Standard Latency stream."},"reconnect_slate_url":{"type":"string","description":"The URL of the image file that Mux should download and use as slate media during interruptions of the live stream media. This file will be downloaded each time a new recorded asset is created from the live stream. If this is not set, the default slate media will be used."},"reduced_latency":{"type":"boolean","format":"boolean","deprecated":true,"x-mux-doc-decorators":["hidden"],"description":"This field is deprecated. Please use `latency_mode` instead. Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Set this if you want lower latency for your live stream. See the [Reduce live stream latency guide](https://docs.mux.com/guides/reduce-live-stream-latency) to understand the tradeoffs."},"low_latency":{"type":"boolean","format":"boolean","deprecated":true,"x-mux-doc-decorators":["hidden"],"description":"This field is deprecated. Please use `latency_mode` instead. Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Setting this option will enable compatibility with the LL-HLS specification for low-latency streaming. This typically has lower latency than Reduced Latency streams, and cannot be combined with Reduced Latency."},"simulcast_targets":{"type":"array","description":"Each Simulcast Target contains configuration details to broadcast (or \\"restream\\") a live stream to a third-party streaming service. [See the Stream live to 3rd party platforms guide](https://docs.mux.com/guides/stream-live-to-3rd-party-platforms).","items":{"type":"object","x-required":["id","url","status"],"properties":{"id":{"type":"string","description":"ID of the Simulcast Target"},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set when creating a simulcast target."},"status":{"type":"string","enum":["idle","starting","broadcasting","errored"],"description":"The current status of the simulcast target. See Statuses below for detailed description.\\n  * `idle`: Default status. When the parent live stream is in disconnected status, simulcast targets will be idle state.\\n  * `starting`: The simulcast target transitions into this state when the parent live stream transition into connected state.\\n  * `broadcasting`: The simulcast target has successfully connected to the third party live streaming service and is pushing video to that service.\\n  * `errored`: The simulcast target encountered an error either while attempting to connect to the third party live streaming service, or mid-broadcasting. When a simulcast target has this status it will have an `error_severity` field with more details about the error.\\n"},"stream_key":{"type":"string","description":"Stream Key represents a stream identifier on the third party live streaming service to send the parent live stream to. Only used for RTMP(s) simulcast destinations."},"url":{"type":"string","description":"The RTMP(s) or SRT endpoint for a simulcast destination.\\n* For RTMP(s) destinations, this should include the application name for the third party live streaming service, for example: `rtmp://live.example.com/app`.\\n* For SRT destinations, this should be a fully formed SRT connection string, for example: `srt://srt-live.example.com:1234?streamid={stream_key}&passphrase={srt_passphrase}`.\\n\\nNote: SRT simulcast targets can only be used when an source is connected over SRT.\\n"},"error_severity":{"type":"string","enum":["normal","fatal"],"description":"The severity of the error encountered by the simulcast target.\\nThis field is only set when the simulcast target is in the `errored` status.\\nSee the values of severities below and their descriptions.\\n  * `normal`: The simulcast target encountered an error either while attempting to connect to the third party live streaming service, or mid-broadcasting. A simulcast may transition back into the broadcasting state if a connection with the service can be re-established.\\n  * `fatal`: The simulcast target is incompatible with the current input to the parent live stream. No further attempts to this simulcast target will be made for the current live stream asset.\\n"}}}},"latency_mode":{"type":"string","enum":["low","reduced","standard"],"description":"Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Set this as an alternative to setting low latency or reduced latency flags."},"test":{"type":"boolean","format":"boolean","description":"True means this live stream is a test live stream. Test live streams can be used to help evaluate the Mux Video APIs for free. There is no limit on the number of test live streams, but they are watermarked with the Mux logo, and limited to 5 minutes. The test live stream is disabled after the stream is active for 5 mins and the recorded asset also deleted after 24 hours."},"max_continuous_duration":{"type":"integer","format":"int32","default":43200,"minimum":60,"maximum":43200,"description":"The time in seconds a live stream may be continuously active before being disconnected. Defaults to 12 hours."},"srt_passphrase":{"type":"string","description":"Unique key used for encrypting a stream to a Mux SRT endpoint."},"active_ingest_protocol":{"type":"string","enum":["rtmp","srt"],"description":"The protocol used for the active ingest stream. This is only set when the live stream is active."},"connected":{"type":"boolean"},"recording":{"type":"boolean"}}},"attempts":{"type":"array","description":"Attempts for sending out the webhook event","items":{"type":"object","properties":{"webhook_id":{"type":"integer","description":"Unique identifier for the webhook"},"response_status_code":{"type":"integer","description":"HTTP response status code for the webhook attempt"},"response_headers":{"type":"object","description":"HTTP response headers for the webhook attempt"},"response_body":{"type":["string","null"],"description":"HTTP response body for the webhook attempt"},"max_attempts":{"description":"Max attempts number for the webhook attempt","type":"integer"},"id":{"description":"Unique identifier for the webhook attempt","type":"string"},"created_at":{"description":"Time the webhook request was attempted","type":"string","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"address":{"description":"URL address for the webhook attempt","type":"string"}}}},"request_id":{"type":["string","null"],"deprecated":true},"accessor":{"type":["string","null"],"deprecated":true},"accessor_source":{"type":["string","null"],"deprecated":true}},"required":["type","id","created_at","object","environment","data","attempts"]},"example":{"active_asset_id":"SqQnqz6s5MBuXGvJaUWdXuXM93J9Q2yv","connected":true,"created_at":1606259944,"id":"sY7b7fW01LImWpoOv2oiVROwHv5Y","latency_mode":"reduced","max_continuous_duration":43200,"new_asset_settings":{"playback_policies":["signed"]},"passthrough":"mux","playback_ids":[{"id":"BdTpnH6KkY01U004fGsErAPvVaRP6sIxkR","policy":"signed"}],"recent_asset_ids":["kaYHEoG9HMtnEGXlVGNqk2UheY02","B01x902mrEJ006aBOnF7j01HVf3I"],"reconnect_window":60,"recording":true,"reduced_latency":true,"status":"active","stream_key":"5d42bb65-91b5-bb65-4ebf-5d42bb65"}},"video.live_stream.enabled":{"description":"This live stream has been enabled. This event fires after enable live stream API.","payload":{"type":"object","properties":{"type":{"type":"string","description":"Type for the webhook event"},"id":{"type":"string","description":"Unique identifier for the event"},"created_at":{"type":"string","description":"Time the event was created","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"object":{"type":"object","properties":{"type":{"type":"string"},"id":{"type":"string"}},"required":["type","id"]},"environment":{"type":"object","properties":{"name":{"type":"string","description":"Name for the environment"},"id":{"type":"string","description":"Unique identifier for the environment"}},"required":["name","id"]},"data":{"type":"object","x-required":["id","created_at","latency_mode","max_continuous_duration","status","stream_key"],"properties":{"id":{"type":"string","description":"Unique identifier for the Live Stream. Max 255 characters."},"created_at":{"type":"integer","format":"int32"},"stream_key":{"type":"string","description":"Unique key used for streaming to a Mux RTMP endpoint. This should be considered as sensitive as credentials, anyone with this stream key can begin streaming."},"active_asset_id":{"type":"string","description":"The Asset that is currently being created if there is an active broadcast."},"recent_asset_ids":{"type":"array","description":"An array of strings with the most recent Asset IDs that were created from this Live Stream. The most recently generated Asset ID is the last entry in the list.","items":{"type":"string"}},"status":{"type":"string","enum":["active","idle","disabled"],"description":"`idle` indicates that there is no active broadcast. `active` indicates that there is an active broadcast and `disabled` status indicates that no future RTMP streams can be published."},"playback_ids":{"type":"array","description":"An array of Playback ID objects. Use these to create HLS playback URLs. See [Play your videos](https://docs.mux.com/guides/play-your-videos) for more details.","items":{"type":"object","x-required":["id","policy"],"properties":{"id":{"type":"string","description":"Unique identifier for the PlaybackID"},"policy":{"type":"string","enum":["public","signed","drm"],"description":"* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\\n\\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](https://docs.mux.com/guides/secure-video-playback) for details about creating tokens.\\n\\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](https://docs.mux.com/guides/protect-videos-with-drm).\\n"},"drm_configuration_id":{"type":"string","description":"The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."}}}},"new_asset_settings":{"type":"object","properties":{"input":{"type":"array","description":"An array of objects that each describe an input file to be used to create the asset. As a shortcut, input can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.","items":{"type":"object","description":"An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.","properties":{"url":{"type":"string","description":"The URL of the file that Mux should download and use.\\n* For the main input file, this should be the URL to the muxed file for Mux to download, for example an MP4, MOV, MKV, or TS file. Mux supports most audio/video file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](https://docs.mux.com/guides/minimize-processing-time).\\n* For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](https://docs.mux.com/guides/minimize-processing-time).\\n* For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](https://en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](https://www.w3.org/TR/webvtt1/) formats for ingesting Subtitles and Closed Captions.\\n* For Watermarking or Overlay, the URL is the location of the watermark image. The maximum size is 4096x4096.\\n* When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.\\nThe url property may be omitted on the first input object when providing asset settings for LiveStream and Upload objects, in order to configure settings related to the primary (live stream or direct upload) input.\\n"},"overlay_settings":{"type":"object","description":"An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.","properties":{"vertical_align":{"type":"string","enum":["top","middle","bottom"],"description":"Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\\"top\\"`"},"vertical_margin":{"type":"string","description":"The distance from the vertical_align starting point and the image\'s closest edge. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). Negative values will move the overlay offscreen. In the case of \'middle\', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top."},"horizontal_align":{"type":"string","enum":["left","center","right"],"description":"Where the horizontal positioning of the overlay/watermark should begin from."},"horizontal_margin":{"type":"string","description":"The distance from the horizontal_align starting point and the image\'s closest edge. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). Negative values will move the overlay offscreen. In the case of \'center\', a positive value will shift the image towards the right and and a negative value will shift it towards the left."},"width":{"type":"string","description":"How wide the overlay should appear. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height."},"height":{"type":"string","description":"How tall the overlay should appear. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width."},"opacity":{"type":"string","description":"How opaque the overlay should appear, expressed as a percent. (Default 100%)"}}},"generated_subtitles":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"A name for this subtitle track."},"passthrough":{"type":"string","description":"Arbitrary metadata set for the subtitle track. Max 255 characters."},"language_code":{"type":"string","description":"The language to generate subtitles in.","default":"en","enum":["en","es","it","pt","de","fr","pl","ru","nl","ca","tr","sv","uk","no","fi","sk","el","cs","hr","da","ro","bg"]}}},"description":"Generate subtitle tracks using automatic speech recognition with this configuration. This may only be provided for the first input object (the main input file). For direct uploads, this first input should omit the url parameter, as the main input file is provided via the direct upload. This will create subtitles based on the audio track ingested from that main input file. Note that subtitle generation happens after initial ingest, so the generated tracks will be in the `preparing` state when the asset transitions to `ready`."},"start_time":{"type":"number","format":"double","description":"The time offset in seconds from the beginning of the video indicating the clip\'s starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."},"end_time":{"type":"number","format":"double","description":"The time offset in seconds from the beginning of the video, indicating the clip\'s ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."},"type":{"type":"string","enum":["video","audio","text"],"description":"This parameter is required for `text` type tracks."},"text_type":{"type":"string","enum":["subtitles"],"description":"Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](https://mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags/). This parameter is required for `text` type tracks."},"language_code":{"type":"string","description":"The language code value must be a valid [BCP 47](https://tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is required for `text` and `audio` track types."},"name":{"type":"string","description":"The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate a subtitle text track with this value. For example, the value should be \\"English\\" for a subtitle text track with `language_code` set to `en`. This optional parameter should be used only for `text` and `audio` type tracks. This parameter can be optionally provided for the first video input to denote the name of the muxed audio track if present. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value."},"closed_captions":{"type":"boolean","description":"Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."},"passthrough":{"type":"string","description":"This optional parameter should be used tracks with `type` of `text` and `text_type` set to `subtitles`."}}}},"advanced_playback_policies":{"type":"array","items":{"type":"object","properties":{"policy":{"type":"string","enum":["public","signed","drm"],"description":"* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\\n\\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](https://docs.mux.com/guides/secure-video-playback) for details about creating tokens.\\n\\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](https://docs.mux.com/guides/protect-videos-with-drm).\\n"},"drm_configuration_id":{"type":"string","description":"The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."}}},"description":"An array of playback policy objects that you want applied to this asset and available through `playback_ids`. `advanced_playback_policies` must be used instead of `playback_policy` when creating a DRM playback ID.\\n"},"per_title_encode":{"type":"boolean","format":"boolean","x-mux-doc-decorators":["hidden"],"deprecated":true},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata that will be included in the asset details and related webhooks. Can be used to store your own ID for a video along with the asset. **Max: 255 characters**."},"mp4_support":{"type":"string","enum":["none","standard","capped-1080p","audio-only","audio-only,capped-1080p"],"description":"Specify what level of support for mp4 playback.\\n\\n* The `capped-1080p` option produces a single MP4 file, called `capped-1080p.mp4`, with the video resolution capped at 1080p. This option produces an `audio.m4a` file for an audio-only asset.\\n* The `audio-only` option produces a single M4A file, called `audio.m4a` for a video or an audio-only asset. MP4 generation will error when this option is specified for a video-only asset.\\n* The `audio-only,capped-1080p` option produces both the `audio.m4a` and `capped-1080p.mp4` files. Only the `capped-1080p.mp4` file is produced for a video-only asset, while only the `audio.m4a` file is produced for an audio-only asset.\\n\\nThe `standard`(deprecated) option produces up to three MP4 files with different levels of resolution (`high.mp4`, `medium.mp4`, `low.mp4`, or `audio.m4a` for an audio-only asset).\\n\\nMP4 files are not produced for `none` (default).\\n\\nIn most cases you should use our default HLS-based streaming playback (`{playback_id}.m3u8`) which can automatically adjust to viewers\' connection speeds, but an mp4 can be useful for some legacy devices or downloading for offline playback. See the [Download your videos guide](https://docs.mux.com/guides/enable-static-mp4-renditions) for more information.\\n","x-mux-doc-decorators-deprecated-enum-values":["standard"]},"normalize_audio":{"type":"boolean","format":"boolean","description":"Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets.","default":false},"master_access":{"type":"string","enum":["none","temporary"],"description":"Specify what level (if any) of support for master access. Master access can be enabled temporarily for your asset to be downloaded. See the [Download your videos guide](https://docs.mux.com/guides/enable-static-mp4-renditions) for more information."},"test":{"type":"boolean","format":"boolean","description":"Marks the asset as a test asset when the value is set to true. A Test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test asset are watermarked with the Mux logo, limited to 10 seconds, deleted after 24 hrs."},"max_resolution_tier":{"type":"string","enum":["1080p","1440p","2160p"],"description":"Max resolution tier can be used to control the maximum `resolution_tier` your asset is encoded, stored, and streamed at. If not set, this defaults to `1080p`."},"encoding_tier":{"type":"string","deprecated":true,"enum":["smart","baseline","premium"],"description":"This field is deprecated. Please use `video_quality` instead. The encoding tier informs the cost, quality, and available platform features for the asset. The default encoding tier for an account can be set in the Mux Dashboard. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"video_quality":{"type":"string","enum":["basic","plus","premium"],"description":"The video quality controls the cost, quality, and available platform features for the asset. The default video quality for an account can be set in the Mux Dashboard. This field replaces the deprecated `encoding_tier` value. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"playback_policies":{"type":"array","items":{"type":"string","enum":["public","signed","drm"],"description":"* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\\n\\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](https://docs.mux.com/guides/secure-video-playback) for details about creating tokens.\\n\\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](https://docs.mux.com/guides/protect-videos-with-drm).\\n"},"description":"An array of playback policy names that you want applied to this asset and available through `playback_ids`. Options include: `\\"public\\"` (anyone with the playback URL can stream the asset). And `\\"signed\\"` (an additional access token is required to play the asset). If no playback_policy is set, the asset will have no playback IDs and will therefore not be playable. For simplicity, a single string name can be used in place of the array in the case of only one playback policy."},"inputs":{"type":"array","description":"An array of objects that each describe an input file to be used to create the asset. As a shortcut, input can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.","items":{"type":"object","description":"An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.","properties":{"url":{"type":"string","description":"The URL of the file that Mux should download and use.\\n* For the main input file, this should be the URL to the muxed file for Mux to download, for example an MP4, MOV, MKV, or TS file. Mux supports most audio/video file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](https://docs.mux.com/guides/minimize-processing-time).\\n* For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](https://docs.mux.com/guides/minimize-processing-time).\\n* For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](https://en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](https://www.w3.org/TR/webvtt1/) formats for ingesting Subtitles and Closed Captions.\\n* For Watermarking or Overlay, the URL is the location of the watermark image. The maximum size is 4096x4096.\\n* When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.\\nThe url property may be omitted on the first input object when providing asset settings for LiveStream and Upload objects, in order to configure settings related to the primary (live stream or direct upload) input.\\n"},"overlay_settings":{"type":"object","description":"An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.","properties":{"vertical_align":{"type":"string","enum":["top","middle","bottom"],"description":"Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\\"top\\"`"},"vertical_margin":{"type":"string","description":"The distance from the vertical_align starting point and the image\'s closest edge. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). Negative values will move the overlay offscreen. In the case of \'middle\', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top."},"horizontal_align":{"type":"string","enum":["left","center","right"],"description":"Where the horizontal positioning of the overlay/watermark should begin from."},"horizontal_margin":{"type":"string","description":"The distance from the horizontal_align starting point and the image\'s closest edge. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). Negative values will move the overlay offscreen. In the case of \'center\', a positive value will shift the image towards the right and and a negative value will shift it towards the left."},"width":{"type":"string","description":"How wide the overlay should appear. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height."},"height":{"type":"string","description":"How tall the overlay should appear. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width."},"opacity":{"type":"string","description":"How opaque the overlay should appear, expressed as a percent. (Default 100%)"}}},"generated_subtitles":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"A name for this subtitle track."},"passthrough":{"type":"string","description":"Arbitrary metadata set for the subtitle track. Max 255 characters."},"language_code":{"type":"string","description":"The language to generate subtitles in.","default":"en","enum":["en","es","it","pt","de","fr","pl","ru","nl","ca","tr","sv","uk","no","fi","sk","el","cs","hr","da","ro","bg"]}}},"description":"Generate subtitle tracks using automatic speech recognition with this configuration. This may only be provided for the first input object (the main input file). For direct uploads, this first input should omit the url parameter, as the main input file is provided via the direct upload. This will create subtitles based on the audio track ingested from that main input file. Note that subtitle generation happens after initial ingest, so the generated tracks will be in the `preparing` state when the asset transitions to `ready`."},"start_time":{"type":"number","format":"double","description":"The time offset in seconds from the beginning of the video indicating the clip\'s starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."},"end_time":{"type":"number","format":"double","description":"The time offset in seconds from the beginning of the video, indicating the clip\'s ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."},"type":{"type":"string","enum":["video","audio","text"],"description":"This parameter is required for `text` type tracks."},"text_type":{"type":"string","enum":["subtitles"],"description":"Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](https://mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags/). This parameter is required for `text` type tracks."},"language_code":{"type":"string","description":"The language code value must be a valid [BCP 47](https://tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is required for `text` and `audio` track types."},"name":{"type":"string","description":"The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate a subtitle text track with this value. For example, the value should be \\"English\\" for a subtitle text track with `language_code` set to `en`. This optional parameter should be used only for `text` and `audio` type tracks. This parameter can be optionally provided for the first video input to denote the name of the muxed audio track if present. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value."},"closed_captions":{"type":"boolean","description":"Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."},"passthrough":{"type":"string","description":"This optional parameter should be used tracks with `type` of `text` and `text_type` set to `subtitles`."}}}}}},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the asset. Max 255 characters."},"audio_only":{"type":"boolean","description":"The live stream only processes the audio track if the value is set to true. Mux drops the video track if broadcasted."},"embedded_subtitles":{"type":"array","items":{"type":"object","x-required":["name","language_code","language_channel"],"properties":{"name":{"type":"string","description":"A name for this live stream closed caption track."},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the live stream closed caption track. Max 255 characters."},"language_code":{"type":"string","description":"The language of the closed caption stream. Value must be BCP 47 compliant.","default":"en"},"language_channel":{"type":"string","description":"CEA-608 caption channel to read data from.","default":"cc1","enum":["cc1","cc2","cc3","cc4"]}}},"description":"Describes the embedded closed caption configuration of the incoming live stream."},"generated_subtitles":{"type":"array","items":{"type":"object","x-required":["name","language_code"],"properties":{"name":{"type":"string","description":"A name for this live stream subtitle track."},"passthrough":{"type":"string","description":"Arbitrary metadata set for the live stream subtitle track. Max 255 characters."},"language_code":{"type":"string","description":"The language to generate subtitles in.","default":"en","enum":["en","en-US"]},"transcription_vocabulary_ids":{"type":"array","items":{"type":"string"},"description":"Unique identifiers for existing Transcription Vocabularies to use while generating subtitles for the live stream. If the Transcription Vocabularies provided collectively have more than 1000 phrases, only the first 1000 phrases will be included."}}},"description":"Configure the incoming live stream to include subtitles created with automatic speech recognition. Each Asset created from a live stream with `generated_subtitles` configured will automatically receive two text tracks. The first of these will have a `text_source` value of `generated_live`, and will be available with `ready` status as soon as the stream is live. The second text track will have a `text_source` value of `generated_live_final` and will contain subtitles with improved accuracy, timing, and formatting. However, `generated_live_final` tracks will not be available in `ready` status until the live stream ends. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback."},"reconnect_window":{"type":"number","format":"float","default":60,"minimum":0,"maximum":1800,"description":"When live streaming software disconnects from Mux, either intentionally or due to a drop in the network, the Reconnect Window is the time in seconds that Mux should wait for the streaming software to reconnect before considering the live stream finished and completing the recorded asset. **Max**: 1800s (30 minutes).\\n\\nIf not specified directly, Standard Latency streams have a Reconnect Window of 60 seconds; Reduced and Low Latency streams have a default of 0 seconds, or no Reconnect Window. For that reason, we suggest specifying a value other than zero for Reduced and Low Latency streams.\\n\\nReduced and Low Latency streams with a Reconnect Window greater than zero will insert slate media into the recorded asset while waiting for the streaming software to reconnect or when there are brief interruptions in the live stream media. When using a Reconnect Window setting higher than 60 seconds with a Standard Latency stream, we highly recommend enabling slate with the `use_slate_for_standard_latency` option.\\n"},"use_slate_for_standard_latency":{"type":"boolean","format":"boolean","default":false,"description":"By default, Standard Latency live streams do not have slate media inserted while waiting for live streaming software to reconnect to Mux. Setting this to true enables slate insertion on a Standard Latency stream."},"reconnect_slate_url":{"type":"string","description":"The URL of the image file that Mux should download and use as slate media during interruptions of the live stream media. This file will be downloaded each time a new recorded asset is created from the live stream. If this is not set, the default slate media will be used."},"reduced_latency":{"type":"boolean","format":"boolean","deprecated":true,"x-mux-doc-decorators":["hidden"],"description":"This field is deprecated. Please use `latency_mode` instead. Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Set this if you want lower latency for your live stream. See the [Reduce live stream latency guide](https://docs.mux.com/guides/reduce-live-stream-latency) to understand the tradeoffs."},"low_latency":{"type":"boolean","format":"boolean","deprecated":true,"x-mux-doc-decorators":["hidden"],"description":"This field is deprecated. Please use `latency_mode` instead. Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Setting this option will enable compatibility with the LL-HLS specification for low-latency streaming. This typically has lower latency than Reduced Latency streams, and cannot be combined with Reduced Latency."},"simulcast_targets":{"type":"array","description":"Each Simulcast Target contains configuration details to broadcast (or \\"restream\\") a live stream to a third-party streaming service. [See the Stream live to 3rd party platforms guide](https://docs.mux.com/guides/stream-live-to-3rd-party-platforms).","items":{"type":"object","x-required":["id","url","status"],"properties":{"id":{"type":"string","description":"ID of the Simulcast Target"},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set when creating a simulcast target."},"status":{"type":"string","enum":["idle","starting","broadcasting","errored"],"description":"The current status of the simulcast target. See Statuses below for detailed description.\\n  * `idle`: Default status. When the parent live stream is in disconnected status, simulcast targets will be idle state.\\n  * `starting`: The simulcast target transitions into this state when the parent live stream transition into connected state.\\n  * `broadcasting`: The simulcast target has successfully connected to the third party live streaming service and is pushing video to that service.\\n  * `errored`: The simulcast target encountered an error either while attempting to connect to the third party live streaming service, or mid-broadcasting. When a simulcast target has this status it will have an `error_severity` field with more details about the error.\\n"},"stream_key":{"type":"string","description":"Stream Key represents a stream identifier on the third party live streaming service to send the parent live stream to. Only used for RTMP(s) simulcast destinations."},"url":{"type":"string","description":"The RTMP(s) or SRT endpoint for a simulcast destination.\\n* For RTMP(s) destinations, this should include the application name for the third party live streaming service, for example: `rtmp://live.example.com/app`.\\n* For SRT destinations, this should be a fully formed SRT connection string, for example: `srt://srt-live.example.com:1234?streamid={stream_key}&passphrase={srt_passphrase}`.\\n\\nNote: SRT simulcast targets can only be used when an source is connected over SRT.\\n"},"error_severity":{"type":"string","enum":["normal","fatal"],"description":"The severity of the error encountered by the simulcast target.\\nThis field is only set when the simulcast target is in the `errored` status.\\nSee the values of severities below and their descriptions.\\n  * `normal`: The simulcast target encountered an error either while attempting to connect to the third party live streaming service, or mid-broadcasting. A simulcast may transition back into the broadcasting state if a connection with the service can be re-established.\\n  * `fatal`: The simulcast target is incompatible with the current input to the parent live stream. No further attempts to this simulcast target will be made for the current live stream asset.\\n"}}}},"latency_mode":{"type":"string","enum":["low","reduced","standard"],"description":"Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Set this as an alternative to setting low latency or reduced latency flags."},"test":{"type":"boolean","format":"boolean","description":"True means this live stream is a test live stream. Test live streams can be used to help evaluate the Mux Video APIs for free. There is no limit on the number of test live streams, but they are watermarked with the Mux logo, and limited to 5 minutes. The test live stream is disabled after the stream is active for 5 mins and the recorded asset also deleted after 24 hours."},"max_continuous_duration":{"type":"integer","format":"int32","default":43200,"minimum":60,"maximum":43200,"description":"The time in seconds a live stream may be continuously active before being disconnected. Defaults to 12 hours."},"srt_passphrase":{"type":"string","description":"Unique key used for encrypting a stream to a Mux SRT endpoint."},"active_ingest_protocol":{"type":"string","enum":["rtmp","srt"],"description":"The protocol used for the active ingest stream. This is only set when the live stream is active."},"connected":{"type":"boolean"},"recording":{"type":"boolean"}}},"attempts":{"type":"array","description":"Attempts for sending out the webhook event","items":{"type":"object","properties":{"webhook_id":{"type":"integer","description":"Unique identifier for the webhook"},"response_status_code":{"type":"integer","description":"HTTP response status code for the webhook attempt"},"response_headers":{"type":"object","description":"HTTP response headers for the webhook attempt"},"response_body":{"type":["string","null"],"description":"HTTP response body for the webhook attempt"},"max_attempts":{"description":"Max attempts number for the webhook attempt","type":"integer"},"id":{"description":"Unique identifier for the webhook attempt","type":"string"},"created_at":{"description":"Time the webhook request was attempted","type":"string","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"address":{"description":"URL address for the webhook attempt","type":"string"}}}},"request_id":{"type":["string","null"],"deprecated":true},"accessor":{"type":["string","null"],"deprecated":true},"accessor_source":{"type":["string","null"],"deprecated":true}},"required":["type","id","created_at","object","environment","data","attempts"]},"example":{"connected":true,"created_at":1606259944,"id":"sY7b7fW01LImWpoOv2oiVROwHv5Y","latency_mode":"reduced","max_continuous_duration":43200,"new_asset_settings":{"master_access":"temporary","playback_policies":["signed"]},"passthrough":"mux","playback_ids":[{"id":"BdTpnH6KkY01U004fGsErAPvVaRP6sIxkR","policy":"signed"}],"recent_asset_ids":["kaYHEoG9HMtnEGXlVGNqk2UheY02","B01x902mrEJ006aBOnF7j01HVf3I"],"reconnect_window":60,"recording":true,"reduced_latency":true,"status":"idle","stream_key":"5d42bb65-91b5-bb65-4ebf-5d42bb65"}},"video.live_stream.disabled":{"description":"This live stream has been disabled. This event fires after disable live stream API. Disabled live streams will no longer accept new RTMP connections.","payload":{"type":"object","properties":{"type":{"type":"string","description":"Type for the webhook event"},"id":{"type":"string","description":"Unique identifier for the event"},"created_at":{"type":"string","description":"Time the event was created","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"object":{"type":"object","properties":{"type":{"type":"string"},"id":{"type":"string"}},"required":["type","id"]},"environment":{"type":"object","properties":{"name":{"type":"string","description":"Name for the environment"},"id":{"type":"string","description":"Unique identifier for the environment"}},"required":["name","id"]},"data":{"type":"object","x-required":["id","created_at","latency_mode","max_continuous_duration","status","stream_key"],"properties":{"id":{"type":"string","description":"Unique identifier for the Live Stream. Max 255 characters."},"created_at":{"type":"integer","format":"int32"},"stream_key":{"type":"string","description":"Unique key used for streaming to a Mux RTMP endpoint. This should be considered as sensitive as credentials, anyone with this stream key can begin streaming."},"active_asset_id":{"type":"string","description":"The Asset that is currently being created if there is an active broadcast."},"recent_asset_ids":{"type":"array","description":"An array of strings with the most recent Asset IDs that were created from this Live Stream. The most recently generated Asset ID is the last entry in the list.","items":{"type":"string"}},"status":{"type":"string","enum":["active","idle","disabled"],"description":"`idle` indicates that there is no active broadcast. `active` indicates that there is an active broadcast and `disabled` status indicates that no future RTMP streams can be published."},"playback_ids":{"type":"array","description":"An array of Playback ID objects. Use these to create HLS playback URLs. See [Play your videos](https://docs.mux.com/guides/play-your-videos) for more details.","items":{"type":"object","x-required":["id","policy"],"properties":{"id":{"type":"string","description":"Unique identifier for the PlaybackID"},"policy":{"type":"string","enum":["public","signed","drm"],"description":"* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\\n\\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](https://docs.mux.com/guides/secure-video-playback) for details about creating tokens.\\n\\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](https://docs.mux.com/guides/protect-videos-with-drm).\\n"},"drm_configuration_id":{"type":"string","description":"The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."}}}},"new_asset_settings":{"type":"object","properties":{"input":{"type":"array","description":"An array of objects that each describe an input file to be used to create the asset. As a shortcut, input can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.","items":{"type":"object","description":"An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.","properties":{"url":{"type":"string","description":"The URL of the file that Mux should download and use.\\n* For the main input file, this should be the URL to the muxed file for Mux to download, for example an MP4, MOV, MKV, or TS file. Mux supports most audio/video file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](https://docs.mux.com/guides/minimize-processing-time).\\n* For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](https://docs.mux.com/guides/minimize-processing-time).\\n* For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](https://en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](https://www.w3.org/TR/webvtt1/) formats for ingesting Subtitles and Closed Captions.\\n* For Watermarking or Overlay, the URL is the location of the watermark image. The maximum size is 4096x4096.\\n* When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.\\nThe url property may be omitted on the first input object when providing asset settings for LiveStream and Upload objects, in order to configure settings related to the primary (live stream or direct upload) input.\\n"},"overlay_settings":{"type":"object","description":"An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.","properties":{"vertical_align":{"type":"string","enum":["top","middle","bottom"],"description":"Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\\"top\\"`"},"vertical_margin":{"type":"string","description":"The distance from the vertical_align starting point and the image\'s closest edge. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). Negative values will move the overlay offscreen. In the case of \'middle\', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top."},"horizontal_align":{"type":"string","enum":["left","center","right"],"description":"Where the horizontal positioning of the overlay/watermark should begin from."},"horizontal_margin":{"type":"string","description":"The distance from the horizontal_align starting point and the image\'s closest edge. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). Negative values will move the overlay offscreen. In the case of \'center\', a positive value will shift the image towards the right and and a negative value will shift it towards the left."},"width":{"type":"string","description":"How wide the overlay should appear. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height."},"height":{"type":"string","description":"How tall the overlay should appear. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width."},"opacity":{"type":"string","description":"How opaque the overlay should appear, expressed as a percent. (Default 100%)"}}},"generated_subtitles":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"A name for this subtitle track."},"passthrough":{"type":"string","description":"Arbitrary metadata set for the subtitle track. Max 255 characters."},"language_code":{"type":"string","description":"The language to generate subtitles in.","default":"en","enum":["en","es","it","pt","de","fr","pl","ru","nl","ca","tr","sv","uk","no","fi","sk","el","cs","hr","da","ro","bg"]}}},"description":"Generate subtitle tracks using automatic speech recognition with this configuration. This may only be provided for the first input object (the main input file). For direct uploads, this first input should omit the url parameter, as the main input file is provided via the direct upload. This will create subtitles based on the audio track ingested from that main input file. Note that subtitle generation happens after initial ingest, so the generated tracks will be in the `preparing` state when the asset transitions to `ready`."},"start_time":{"type":"number","format":"double","description":"The time offset in seconds from the beginning of the video indicating the clip\'s starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."},"end_time":{"type":"number","format":"double","description":"The time offset in seconds from the beginning of the video, indicating the clip\'s ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."},"type":{"type":"string","enum":["video","audio","text"],"description":"This parameter is required for `text` type tracks."},"text_type":{"type":"string","enum":["subtitles"],"description":"Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](https://mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags/). This parameter is required for `text` type tracks."},"language_code":{"type":"string","description":"The language code value must be a valid [BCP 47](https://tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is required for `text` and `audio` track types."},"name":{"type":"string","description":"The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate a subtitle text track with this value. For example, the value should be \\"English\\" for a subtitle text track with `language_code` set to `en`. This optional parameter should be used only for `text` and `audio` type tracks. This parameter can be optionally provided for the first video input to denote the name of the muxed audio track if present. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value."},"closed_captions":{"type":"boolean","description":"Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."},"passthrough":{"type":"string","description":"This optional parameter should be used tracks with `type` of `text` and `text_type` set to `subtitles`."}}}},"advanced_playback_policies":{"type":"array","items":{"type":"object","properties":{"policy":{"type":"string","enum":["public","signed","drm"],"description":"* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\\n\\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](https://docs.mux.com/guides/secure-video-playback) for details about creating tokens.\\n\\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](https://docs.mux.com/guides/protect-videos-with-drm).\\n"},"drm_configuration_id":{"type":"string","description":"The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."}}},"description":"An array of playback policy objects that you want applied to this asset and available through `playback_ids`. `advanced_playback_policies` must be used instead of `playback_policy` when creating a DRM playback ID.\\n"},"per_title_encode":{"type":"boolean","format":"boolean","x-mux-doc-decorators":["hidden"],"deprecated":true},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata that will be included in the asset details and related webhooks. Can be used to store your own ID for a video along with the asset. **Max: 255 characters**."},"mp4_support":{"type":"string","enum":["none","standard","capped-1080p","audio-only","audio-only,capped-1080p"],"description":"Specify what level of support for mp4 playback.\\n\\n* The `capped-1080p` option produces a single MP4 file, called `capped-1080p.mp4`, with the video resolution capped at 1080p. This option produces an `audio.m4a` file for an audio-only asset.\\n* The `audio-only` option produces a single M4A file, called `audio.m4a` for a video or an audio-only asset. MP4 generation will error when this option is specified for a video-only asset.\\n* The `audio-only,capped-1080p` option produces both the `audio.m4a` and `capped-1080p.mp4` files. Only the `capped-1080p.mp4` file is produced for a video-only asset, while only the `audio.m4a` file is produced for an audio-only asset.\\n\\nThe `standard`(deprecated) option produces up to three MP4 files with different levels of resolution (`high.mp4`, `medium.mp4`, `low.mp4`, or `audio.m4a` for an audio-only asset).\\n\\nMP4 files are not produced for `none` (default).\\n\\nIn most cases you should use our default HLS-based streaming playback (`{playback_id}.m3u8`) which can automatically adjust to viewers\' connection speeds, but an mp4 can be useful for some legacy devices or downloading for offline playback. See the [Download your videos guide](https://docs.mux.com/guides/enable-static-mp4-renditions) for more information.\\n","x-mux-doc-decorators-deprecated-enum-values":["standard"]},"normalize_audio":{"type":"boolean","format":"boolean","description":"Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets.","default":false},"master_access":{"type":"string","enum":["none","temporary"],"description":"Specify what level (if any) of support for master access. Master access can be enabled temporarily for your asset to be downloaded. See the [Download your videos guide](https://docs.mux.com/guides/enable-static-mp4-renditions) for more information."},"test":{"type":"boolean","format":"boolean","description":"Marks the asset as a test asset when the value is set to true. A Test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test asset are watermarked with the Mux logo, limited to 10 seconds, deleted after 24 hrs."},"max_resolution_tier":{"type":"string","enum":["1080p","1440p","2160p"],"description":"Max resolution tier can be used to control the maximum `resolution_tier` your asset is encoded, stored, and streamed at. If not set, this defaults to `1080p`."},"encoding_tier":{"type":"string","deprecated":true,"enum":["smart","baseline","premium"],"description":"This field is deprecated. Please use `video_quality` instead. The encoding tier informs the cost, quality, and available platform features for the asset. The default encoding tier for an account can be set in the Mux Dashboard. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"video_quality":{"type":"string","enum":["basic","plus","premium"],"description":"The video quality controls the cost, quality, and available platform features for the asset. The default video quality for an account can be set in the Mux Dashboard. This field replaces the deprecated `encoding_tier` value. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"playback_policies":{"type":"array","items":{"type":"string","enum":["public","signed","drm"],"description":"* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\\n\\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](https://docs.mux.com/guides/secure-video-playback) for details about creating tokens.\\n\\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](https://docs.mux.com/guides/protect-videos-with-drm).\\n"},"description":"An array of playback policy names that you want applied to this asset and available through `playback_ids`. Options include: `\\"public\\"` (anyone with the playback URL can stream the asset). And `\\"signed\\"` (an additional access token is required to play the asset). If no playback_policy is set, the asset will have no playback IDs and will therefore not be playable. For simplicity, a single string name can be used in place of the array in the case of only one playback policy."},"inputs":{"type":"array","description":"An array of objects that each describe an input file to be used to create the asset. As a shortcut, input can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.","items":{"type":"object","description":"An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.","properties":{"url":{"type":"string","description":"The URL of the file that Mux should download and use.\\n* For the main input file, this should be the URL to the muxed file for Mux to download, for example an MP4, MOV, MKV, or TS file. Mux supports most audio/video file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](https://docs.mux.com/guides/minimize-processing-time).\\n* For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](https://docs.mux.com/guides/minimize-processing-time).\\n* For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](https://en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](https://www.w3.org/TR/webvtt1/) formats for ingesting Subtitles and Closed Captions.\\n* For Watermarking or Overlay, the URL is the location of the watermark image. The maximum size is 4096x4096.\\n* When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.\\nThe url property may be omitted on the first input object when providing asset settings for LiveStream and Upload objects, in order to configure settings related to the primary (live stream or direct upload) input.\\n"},"overlay_settings":{"type":"object","description":"An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.","properties":{"vertical_align":{"type":"string","enum":["top","middle","bottom"],"description":"Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\\"top\\"`"},"vertical_margin":{"type":"string","description":"The distance from the vertical_align starting point and the image\'s closest edge. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). Negative values will move the overlay offscreen. In the case of \'middle\', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top."},"horizontal_align":{"type":"string","enum":["left","center","right"],"description":"Where the horizontal positioning of the overlay/watermark should begin from."},"horizontal_margin":{"type":"string","description":"The distance from the horizontal_align starting point and the image\'s closest edge. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). Negative values will move the overlay offscreen. In the case of \'center\', a positive value will shift the image towards the right and and a negative value will shift it towards the left."},"width":{"type":"string","description":"How wide the overlay should appear. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height."},"height":{"type":"string","description":"How tall the overlay should appear. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width."},"opacity":{"type":"string","description":"How opaque the overlay should appear, expressed as a percent. (Default 100%)"}}},"generated_subtitles":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"A name for this subtitle track."},"passthrough":{"type":"string","description":"Arbitrary metadata set for the subtitle track. Max 255 characters."},"language_code":{"type":"string","description":"The language to generate subtitles in.","default":"en","enum":["en","es","it","pt","de","fr","pl","ru","nl","ca","tr","sv","uk","no","fi","sk","el","cs","hr","da","ro","bg"]}}},"description":"Generate subtitle tracks using automatic speech recognition with this configuration. This may only be provided for the first input object (the main input file). For direct uploads, this first input should omit the url parameter, as the main input file is provided via the direct upload. This will create subtitles based on the audio track ingested from that main input file. Note that subtitle generation happens after initial ingest, so the generated tracks will be in the `preparing` state when the asset transitions to `ready`."},"start_time":{"type":"number","format":"double","description":"The time offset in seconds from the beginning of the video indicating the clip\'s starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."},"end_time":{"type":"number","format":"double","description":"The time offset in seconds from the beginning of the video, indicating the clip\'s ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."},"type":{"type":"string","enum":["video","audio","text"],"description":"This parameter is required for `text` type tracks."},"text_type":{"type":"string","enum":["subtitles"],"description":"Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](https://mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags/). This parameter is required for `text` type tracks."},"language_code":{"type":"string","description":"The language code value must be a valid [BCP 47](https://tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is required for `text` and `audio` track types."},"name":{"type":"string","description":"The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate a subtitle text track with this value. For example, the value should be \\"English\\" for a subtitle text track with `language_code` set to `en`. This optional parameter should be used only for `text` and `audio` type tracks. This parameter can be optionally provided for the first video input to denote the name of the muxed audio track if present. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value."},"closed_captions":{"type":"boolean","description":"Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."},"passthrough":{"type":"string","description":"This optional parameter should be used tracks with `type` of `text` and `text_type` set to `subtitles`."}}}}}},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the asset. Max 255 characters."},"audio_only":{"type":"boolean","description":"The live stream only processes the audio track if the value is set to true. Mux drops the video track if broadcasted."},"embedded_subtitles":{"type":"array","items":{"type":"object","x-required":["name","language_code","language_channel"],"properties":{"name":{"type":"string","description":"A name for this live stream closed caption track."},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the live stream closed caption track. Max 255 characters."},"language_code":{"type":"string","description":"The language of the closed caption stream. Value must be BCP 47 compliant.","default":"en"},"language_channel":{"type":"string","description":"CEA-608 caption channel to read data from.","default":"cc1","enum":["cc1","cc2","cc3","cc4"]}}},"description":"Describes the embedded closed caption configuration of the incoming live stream."},"generated_subtitles":{"type":"array","items":{"type":"object","x-required":["name","language_code"],"properties":{"name":{"type":"string","description":"A name for this live stream subtitle track."},"passthrough":{"type":"string","description":"Arbitrary metadata set for the live stream subtitle track. Max 255 characters."},"language_code":{"type":"string","description":"The language to generate subtitles in.","default":"en","enum":["en","en-US"]},"transcription_vocabulary_ids":{"type":"array","items":{"type":"string"},"description":"Unique identifiers for existing Transcription Vocabularies to use while generating subtitles for the live stream. If the Transcription Vocabularies provided collectively have more than 1000 phrases, only the first 1000 phrases will be included."}}},"description":"Configure the incoming live stream to include subtitles created with automatic speech recognition. Each Asset created from a live stream with `generated_subtitles` configured will automatically receive two text tracks. The first of these will have a `text_source` value of `generated_live`, and will be available with `ready` status as soon as the stream is live. The second text track will have a `text_source` value of `generated_live_final` and will contain subtitles with improved accuracy, timing, and formatting. However, `generated_live_final` tracks will not be available in `ready` status until the live stream ends. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback."},"reconnect_window":{"type":"number","format":"float","default":60,"minimum":0,"maximum":1800,"description":"When live streaming software disconnects from Mux, either intentionally or due to a drop in the network, the Reconnect Window is the time in seconds that Mux should wait for the streaming software to reconnect before considering the live stream finished and completing the recorded asset. **Max**: 1800s (30 minutes).\\n\\nIf not specified directly, Standard Latency streams have a Reconnect Window of 60 seconds; Reduced and Low Latency streams have a default of 0 seconds, or no Reconnect Window. For that reason, we suggest specifying a value other than zero for Reduced and Low Latency streams.\\n\\nReduced and Low Latency streams with a Reconnect Window greater than zero will insert slate media into the recorded asset while waiting for the streaming software to reconnect or when there are brief interruptions in the live stream media. When using a Reconnect Window setting higher than 60 seconds with a Standard Latency stream, we highly recommend enabling slate with the `use_slate_for_standard_latency` option.\\n"},"use_slate_for_standard_latency":{"type":"boolean","format":"boolean","default":false,"description":"By default, Standard Latency live streams do not have slate media inserted while waiting for live streaming software to reconnect to Mux. Setting this to true enables slate insertion on a Standard Latency stream."},"reconnect_slate_url":{"type":"string","description":"The URL of the image file that Mux should download and use as slate media during interruptions of the live stream media. This file will be downloaded each time a new recorded asset is created from the live stream. If this is not set, the default slate media will be used."},"reduced_latency":{"type":"boolean","format":"boolean","deprecated":true,"x-mux-doc-decorators":["hidden"],"description":"This field is deprecated. Please use `latency_mode` instead. Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Set this if you want lower latency for your live stream. See the [Reduce live stream latency guide](https://docs.mux.com/guides/reduce-live-stream-latency) to understand the tradeoffs."},"low_latency":{"type":"boolean","format":"boolean","deprecated":true,"x-mux-doc-decorators":["hidden"],"description":"This field is deprecated. Please use `latency_mode` instead. Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Setting this option will enable compatibility with the LL-HLS specification for low-latency streaming. This typically has lower latency than Reduced Latency streams, and cannot be combined with Reduced Latency."},"simulcast_targets":{"type":"array","description":"Each Simulcast Target contains configuration details to broadcast (or \\"restream\\") a live stream to a third-party streaming service. [See the Stream live to 3rd party platforms guide](https://docs.mux.com/guides/stream-live-to-3rd-party-platforms).","items":{"type":"object","x-required":["id","url","status"],"properties":{"id":{"type":"string","description":"ID of the Simulcast Target"},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set when creating a simulcast target."},"status":{"type":"string","enum":["idle","starting","broadcasting","errored"],"description":"The current status of the simulcast target. See Statuses below for detailed description.\\n  * `idle`: Default status. When the parent live stream is in disconnected status, simulcast targets will be idle state.\\n  * `starting`: The simulcast target transitions into this state when the parent live stream transition into connected state.\\n  * `broadcasting`: The simulcast target has successfully connected to the third party live streaming service and is pushing video to that service.\\n  * `errored`: The simulcast target encountered an error either while attempting to connect to the third party live streaming service, or mid-broadcasting. When a simulcast target has this status it will have an `error_severity` field with more details about the error.\\n"},"stream_key":{"type":"string","description":"Stream Key represents a stream identifier on the third party live streaming service to send the parent live stream to. Only used for RTMP(s) simulcast destinations."},"url":{"type":"string","description":"The RTMP(s) or SRT endpoint for a simulcast destination.\\n* For RTMP(s) destinations, this should include the application name for the third party live streaming service, for example: `rtmp://live.example.com/app`.\\n* For SRT destinations, this should be a fully formed SRT connection string, for example: `srt://srt-live.example.com:1234?streamid={stream_key}&passphrase={srt_passphrase}`.\\n\\nNote: SRT simulcast targets can only be used when an source is connected over SRT.\\n"},"error_severity":{"type":"string","enum":["normal","fatal"],"description":"The severity of the error encountered by the simulcast target.\\nThis field is only set when the simulcast target is in the `errored` status.\\nSee the values of severities below and their descriptions.\\n  * `normal`: The simulcast target encountered an error either while attempting to connect to the third party live streaming service, or mid-broadcasting. A simulcast may transition back into the broadcasting state if a connection with the service can be re-established.\\n  * `fatal`: The simulcast target is incompatible with the current input to the parent live stream. No further attempts to this simulcast target will be made for the current live stream asset.\\n"}}}},"latency_mode":{"type":"string","enum":["low","reduced","standard"],"description":"Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Set this as an alternative to setting low latency or reduced latency flags."},"test":{"type":"boolean","format":"boolean","description":"True means this live stream is a test live stream. Test live streams can be used to help evaluate the Mux Video APIs for free. There is no limit on the number of test live streams, but they are watermarked with the Mux logo, and limited to 5 minutes. The test live stream is disabled after the stream is active for 5 mins and the recorded asset also deleted after 24 hours."},"max_continuous_duration":{"type":"integer","format":"int32","default":43200,"minimum":60,"maximum":43200,"description":"The time in seconds a live stream may be continuously active before being disconnected. Defaults to 12 hours."},"srt_passphrase":{"type":"string","description":"Unique key used for encrypting a stream to a Mux SRT endpoint."},"active_ingest_protocol":{"type":"string","enum":["rtmp","srt"],"description":"The protocol used for the active ingest stream. This is only set when the live stream is active."},"connected":{"type":"boolean"},"recording":{"type":"boolean"}}},"attempts":{"type":"array","description":"Attempts for sending out the webhook event","items":{"type":"object","properties":{"webhook_id":{"type":"integer","description":"Unique identifier for the webhook"},"response_status_code":{"type":"integer","description":"HTTP response status code for the webhook attempt"},"response_headers":{"type":"object","description":"HTTP response headers for the webhook attempt"},"response_body":{"type":["string","null"],"description":"HTTP response body for the webhook attempt"},"max_attempts":{"description":"Max attempts number for the webhook attempt","type":"integer"},"id":{"description":"Unique identifier for the webhook attempt","type":"string"},"created_at":{"description":"Time the webhook request was attempted","type":"string","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"address":{"description":"URL address for the webhook attempt","type":"string"}}}},"request_id":{"type":["string","null"],"deprecated":true},"accessor":{"type":["string","null"],"deprecated":true},"accessor_source":{"type":["string","null"],"deprecated":true}},"required":["type","id","created_at","object","environment","data","attempts"]},"example":{"active_asset_id":"IcmloNxeMPLA4aTdwfCCBPa9601CAXB5Kqr","created_at":1649111384,"id":"01BDgwaemDYEPewM33D3wcTAtR5p1H","latency_mode":"standard","max_continuous_duration":300,"new_asset_settings":{"master_access":"none","mp4_support":"standard","playback_policies":["public"]},"passthrough":"mux","playback_ids":[{"id":"EOtWjqjkrilb2SP01xdN18Q01wiPkKpip5Z","policy":"public"}],"recent_asset_ids":["Zx5AaGT826fQHMFZyMPz3023iczx01"],"reconnect_window":60,"status":"disabled","stream_key":"ee57fce0-7642-1243-673d"}},"video.live_stream.deleted":{"description":"This event fires after deleting a live stream","payload":{"type":"object","properties":{"type":{"type":"string","description":"Type for the webhook event"},"id":{"type":"string","description":"Unique identifier for the event"},"created_at":{"type":"string","description":"Time the event was created","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"object":{"type":"object","properties":{"type":{"type":"string"},"id":{"type":"string"}},"required":["type","id"]},"environment":{"type":"object","properties":{"name":{"type":"string","description":"Name for the environment"},"id":{"type":"string","description":"Unique identifier for the environment"}},"required":["name","id"]},"data":{"type":"object","x-required":["id","created_at","latency_mode","max_continuous_duration","status","stream_key"],"properties":{"id":{"type":"string","description":"Unique identifier for the Live Stream. Max 255 characters."},"created_at":{"type":"integer","format":"int32"},"stream_key":{"type":"string","description":"Unique key used for streaming to a Mux RTMP endpoint. This should be considered as sensitive as credentials, anyone with this stream key can begin streaming."},"active_asset_id":{"type":"string","description":"The Asset that is currently being created if there is an active broadcast."},"recent_asset_ids":{"type":"array","description":"An array of strings with the most recent Asset IDs that were created from this Live Stream. The most recently generated Asset ID is the last entry in the list.","items":{"type":"string"}},"status":{"type":"string","enum":["active","idle","disabled"],"description":"`idle` indicates that there is no active broadcast. `active` indicates that there is an active broadcast and `disabled` status indicates that no future RTMP streams can be published."},"playback_ids":{"type":"array","description":"An array of Playback ID objects. Use these to create HLS playback URLs. See [Play your videos](https://docs.mux.com/guides/play-your-videos) for more details.","items":{"type":"object","x-required":["id","policy"],"properties":{"id":{"type":"string","description":"Unique identifier for the PlaybackID"},"policy":{"type":"string","enum":["public","signed","drm"],"description":"* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\\n\\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](https://docs.mux.com/guides/secure-video-playback) for details about creating tokens.\\n\\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](https://docs.mux.com/guides/protect-videos-with-drm).\\n"},"drm_configuration_id":{"type":"string","description":"The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."}}}},"new_asset_settings":{"type":"object","properties":{"input":{"type":"array","description":"An array of objects that each describe an input file to be used to create the asset. As a shortcut, input can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.","items":{"type":"object","description":"An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.","properties":{"url":{"type":"string","description":"The URL of the file that Mux should download and use.\\n* For the main input file, this should be the URL to the muxed file for Mux to download, for example an MP4, MOV, MKV, or TS file. Mux supports most audio/video file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](https://docs.mux.com/guides/minimize-processing-time).\\n* For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](https://docs.mux.com/guides/minimize-processing-time).\\n* For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](https://en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](https://www.w3.org/TR/webvtt1/) formats for ingesting Subtitles and Closed Captions.\\n* For Watermarking or Overlay, the URL is the location of the watermark image. The maximum size is 4096x4096.\\n* When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.\\nThe url property may be omitted on the first input object when providing asset settings for LiveStream and Upload objects, in order to configure settings related to the primary (live stream or direct upload) input.\\n"},"overlay_settings":{"type":"object","description":"An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.","properties":{"vertical_align":{"type":"string","enum":["top","middle","bottom"],"description":"Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\\"top\\"`"},"vertical_margin":{"type":"string","description":"The distance from the vertical_align starting point and the image\'s closest edge. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). Negative values will move the overlay offscreen. In the case of \'middle\', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top."},"horizontal_align":{"type":"string","enum":["left","center","right"],"description":"Where the horizontal positioning of the overlay/watermark should begin from."},"horizontal_margin":{"type":"string","description":"The distance from the horizontal_align starting point and the image\'s closest edge. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). Negative values will move the overlay offscreen. In the case of \'center\', a positive value will shift the image towards the right and and a negative value will shift it towards the left."},"width":{"type":"string","description":"How wide the overlay should appear. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height."},"height":{"type":"string","description":"How tall the overlay should appear. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width."},"opacity":{"type":"string","description":"How opaque the overlay should appear, expressed as a percent. (Default 100%)"}}},"generated_subtitles":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"A name for this subtitle track."},"passthrough":{"type":"string","description":"Arbitrary metadata set for the subtitle track. Max 255 characters."},"language_code":{"type":"string","description":"The language to generate subtitles in.","default":"en","enum":["en","es","it","pt","de","fr","pl","ru","nl","ca","tr","sv","uk","no","fi","sk","el","cs","hr","da","ro","bg"]}}},"description":"Generate subtitle tracks using automatic speech recognition with this configuration. This may only be provided for the first input object (the main input file). For direct uploads, this first input should omit the url parameter, as the main input file is provided via the direct upload. This will create subtitles based on the audio track ingested from that main input file. Note that subtitle generation happens after initial ingest, so the generated tracks will be in the `preparing` state when the asset transitions to `ready`."},"start_time":{"type":"number","format":"double","description":"The time offset in seconds from the beginning of the video indicating the clip\'s starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."},"end_time":{"type":"number","format":"double","description":"The time offset in seconds from the beginning of the video, indicating the clip\'s ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."},"type":{"type":"string","enum":["video","audio","text"],"description":"This parameter is required for `text` type tracks."},"text_type":{"type":"string","enum":["subtitles"],"description":"Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](https://mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags/). This parameter is required for `text` type tracks."},"language_code":{"type":"string","description":"The language code value must be a valid [BCP 47](https://tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is required for `text` and `audio` track types."},"name":{"type":"string","description":"The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate a subtitle text track with this value. For example, the value should be \\"English\\" for a subtitle text track with `language_code` set to `en`. This optional parameter should be used only for `text` and `audio` type tracks. This parameter can be optionally provided for the first video input to denote the name of the muxed audio track if present. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value."},"closed_captions":{"type":"boolean","description":"Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."},"passthrough":{"type":"string","description":"This optional parameter should be used tracks with `type` of `text` and `text_type` set to `subtitles`."}}}},"advanced_playback_policies":{"type":"array","items":{"type":"object","properties":{"policy":{"type":"string","enum":["public","signed","drm"],"description":"* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\\n\\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](https://docs.mux.com/guides/secure-video-playback) for details about creating tokens.\\n\\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](https://docs.mux.com/guides/protect-videos-with-drm).\\n"},"drm_configuration_id":{"type":"string","description":"The DRM configuration used by this playback ID. Must only be set when `policy` is set to `drm`."}}},"description":"An array of playback policy objects that you want applied to this asset and available through `playback_ids`. `advanced_playback_policies` must be used instead of `playback_policy` when creating a DRM playback ID.\\n"},"per_title_encode":{"type":"boolean","format":"boolean","x-mux-doc-decorators":["hidden"],"deprecated":true},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata that will be included in the asset details and related webhooks. Can be used to store your own ID for a video along with the asset. **Max: 255 characters**."},"mp4_support":{"type":"string","enum":["none","standard","capped-1080p","audio-only","audio-only,capped-1080p"],"description":"Specify what level of support for mp4 playback.\\n\\n* The `capped-1080p` option produces a single MP4 file, called `capped-1080p.mp4`, with the video resolution capped at 1080p. This option produces an `audio.m4a` file for an audio-only asset.\\n* The `audio-only` option produces a single M4A file, called `audio.m4a` for a video or an audio-only asset. MP4 generation will error when this option is specified for a video-only asset.\\n* The `audio-only,capped-1080p` option produces both the `audio.m4a` and `capped-1080p.mp4` files. Only the `capped-1080p.mp4` file is produced for a video-only asset, while only the `audio.m4a` file is produced for an audio-only asset.\\n\\nThe `standard`(deprecated) option produces up to three MP4 files with different levels of resolution (`high.mp4`, `medium.mp4`, `low.mp4`, or `audio.m4a` for an audio-only asset).\\n\\nMP4 files are not produced for `none` (default).\\n\\nIn most cases you should use our default HLS-based streaming playback (`{playback_id}.m3u8`) which can automatically adjust to viewers\' connection speeds, but an mp4 can be useful for some legacy devices or downloading for offline playback. See the [Download your videos guide](https://docs.mux.com/guides/enable-static-mp4-renditions) for more information.\\n","x-mux-doc-decorators-deprecated-enum-values":["standard"]},"normalize_audio":{"type":"boolean","format":"boolean","description":"Normalize the audio track loudness level. This parameter is only applicable to on-demand (not live) assets.","default":false},"master_access":{"type":"string","enum":["none","temporary"],"description":"Specify what level (if any) of support for master access. Master access can be enabled temporarily for your asset to be downloaded. See the [Download your videos guide](https://docs.mux.com/guides/enable-static-mp4-renditions) for more information."},"test":{"type":"boolean","format":"boolean","description":"Marks the asset as a test asset when the value is set to true. A Test asset can help evaluate the Mux Video APIs without incurring any cost. There is no limit on number of test assets created. Test asset are watermarked with the Mux logo, limited to 10 seconds, deleted after 24 hrs."},"max_resolution_tier":{"type":"string","enum":["1080p","1440p","2160p"],"description":"Max resolution tier can be used to control the maximum `resolution_tier` your asset is encoded, stored, and streamed at. If not set, this defaults to `1080p`."},"encoding_tier":{"type":"string","deprecated":true,"enum":["smart","baseline","premium"],"description":"This field is deprecated. Please use `video_quality` instead. The encoding tier informs the cost, quality, and available platform features for the asset. The default encoding tier for an account can be set in the Mux Dashboard. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"video_quality":{"type":"string","enum":["basic","plus","premium"],"description":"The video quality controls the cost, quality, and available platform features for the asset. The default video quality for an account can be set in the Mux Dashboard. This field replaces the deprecated `encoding_tier` value. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"playback_policies":{"type":"array","items":{"type":"string","enum":["public","signed","drm"],"description":"* `public` playback IDs are accessible by constructing an HLS URL like `https://stream.mux.com/${PLAYBACK_ID}`\\n\\n* `signed` playback IDs should be used with tokens `https://stream.mux.com/${PLAYBACK_ID}?token={TOKEN}`. See [Secure video playback](https://docs.mux.com/guides/secure-video-playback) for details about creating tokens.\\n\\n* `drm` playback IDs are protected with DRM technologies. [See DRM documentation for more details](https://docs.mux.com/guides/protect-videos-with-drm).\\n"},"description":"An array of playback policy names that you want applied to this asset and available through `playback_ids`. Options include: `\\"public\\"` (anyone with the playback URL can stream the asset). And `\\"signed\\"` (an additional access token is required to play the asset). If no playback_policy is set, the asset will have no playback IDs and will therefore not be playable. For simplicity, a single string name can be used in place of the array in the case of only one playback policy."},"inputs":{"type":"array","description":"An array of objects that each describe an input file to be used to create the asset. As a shortcut, input can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.","items":{"type":"object","description":"An array of objects that each describe an input file to be used to create the asset. As a shortcut, `input` can also be a string URL for a file when only one input file is used. See `input[].url` for requirements.","properties":{"url":{"type":"string","description":"The URL of the file that Mux should download and use.\\n* For the main input file, this should be the URL to the muxed file for Mux to download, for example an MP4, MOV, MKV, or TS file. Mux supports most audio/video file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](https://docs.mux.com/guides/minimize-processing-time).\\n* For `audio` tracks, the URL is the location of the audio file for Mux to download, for example an M4A, WAV, or MP3 file. Mux supports most audio file formats and codecs, but for fastest processing, you should [use standard inputs wherever possible](https://docs.mux.com/guides/minimize-processing-time).\\n* For `text` tracks, the URL is the location of subtitle/captions file. Mux supports [SubRip Text (SRT)](https://en.wikipedia.org/wiki/SubRip) and [Web Video Text Tracks](https://www.w3.org/TR/webvtt1/) formats for ingesting Subtitles and Closed Captions.\\n* For Watermarking or Overlay, the URL is the location of the watermark image. The maximum size is 4096x4096.\\n* When creating clips from existing Mux assets, the URL is defined with `mux://assets/{asset_id}` template where `asset_id` is the Asset Identifier for creating the clip from.\\nThe url property may be omitted on the first input object when providing asset settings for LiveStream and Upload objects, in order to configure settings related to the primary (live stream or direct upload) input.\\n"},"overlay_settings":{"type":"object","description":"An object that describes how the image file referenced in URL should be placed over the video (i.e. watermarking). Ensure that the URL is active and persists the entire lifespan of the video object.","properties":{"vertical_align":{"type":"string","enum":["top","middle","bottom"],"description":"Where the vertical positioning of the overlay/watermark should begin from. Defaults to `\\"top\\"`"},"vertical_margin":{"type":"string","description":"The distance from the vertical_align starting point and the image\'s closest edge. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). Negative values will move the overlay offscreen. In the case of \'middle\', a positive value will shift the overlay towards the bottom and and a negative value will shift it towards the top."},"horizontal_align":{"type":"string","enum":["left","center","right"],"description":"Where the horizontal positioning of the overlay/watermark should begin from."},"horizontal_margin":{"type":"string","description":"The distance from the horizontal_align starting point and the image\'s closest edge. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). Negative values will move the overlay offscreen. In the case of \'center\', a positive value will shift the image towards the right and and a negative value will shift it towards the left."},"width":{"type":"string","description":"How wide the overlay should appear. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). If both width and height are left blank the width will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If height is supplied with no width, the width will scale proportionally to the height."},"height":{"type":"string","description":"How tall the overlay should appear. Can be expressed as a percent (\\"10%\\") or as a pixel value (\\"100px\\"). If both width and height are left blank the height will be the true pixels of the image, applied as if the video has been scaled to fit a 1920x1080 frame. If width is supplied with no height, the height will scale proportionally to the width."},"opacity":{"type":"string","description":"How opaque the overlay should appear, expressed as a percent. (Default 100%)"}}},"generated_subtitles":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"A name for this subtitle track."},"passthrough":{"type":"string","description":"Arbitrary metadata set for the subtitle track. Max 255 characters."},"language_code":{"type":"string","description":"The language to generate subtitles in.","default":"en","enum":["en","es","it","pt","de","fr","pl","ru","nl","ca","tr","sv","uk","no","fi","sk","el","cs","hr","da","ro","bg"]}}},"description":"Generate subtitle tracks using automatic speech recognition with this configuration. This may only be provided for the first input object (the main input file). For direct uploads, this first input should omit the url parameter, as the main input file is provided via the direct upload. This will create subtitles based on the audio track ingested from that main input file. Note that subtitle generation happens after initial ingest, so the generated tracks will be in the `preparing` state when the asset transitions to `ready`."},"start_time":{"type":"number","format":"double","description":"The time offset in seconds from the beginning of the video indicating the clip\'s starting marker. The default value is 0 when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."},"end_time":{"type":"number","format":"double","description":"The time offset in seconds from the beginning of the video, indicating the clip\'s ending marker. The default value is the duration of the video when not included. This parameter is only applicable for creating clips when `input.url` has `mux://assets/{asset_id}` format."},"type":{"type":"string","enum":["video","audio","text"],"description":"This parameter is required for `text` type tracks."},"text_type":{"type":"string","enum":["subtitles"],"description":"Type of text track. This parameter only supports subtitles value. For more information on Subtitles / Closed Captions, [see this blog post](https://mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags/). This parameter is required for `text` type tracks."},"language_code":{"type":"string","description":"The language code value must be a valid [BCP 47](https://tools.ietf.org/html/bcp47) specification compliant value. For example, `en` for English or `en-US` for the US version of English. This parameter is required for `text` and `audio` track types."},"name":{"type":"string","description":"The name of the track containing a human-readable description. This value must be unique within each group of `text` or `audio` track types. The HLS manifest will associate a subtitle text track with this value. For example, the value should be \\"English\\" for a subtitle text track with `language_code` set to `en`. This optional parameter should be used only for `text` and `audio` type tracks. This parameter can be optionally provided for the first video input to denote the name of the muxed audio track if present. If this parameter is not included, Mux will auto-populate based on the `input[].language_code` value."},"closed_captions":{"type":"boolean","description":"Indicates the track provides Subtitles for the Deaf or Hard-of-hearing (SDH). This optional parameter should be used for tracks with `type` of `text` and `text_type` set to `subtitles`."},"passthrough":{"type":"string","description":"This optional parameter should be used tracks with `type` of `text` and `text_type` set to `subtitles`."}}}}}},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the asset. Max 255 characters."},"audio_only":{"type":"boolean","description":"The live stream only processes the audio track if the value is set to true. Mux drops the video track if broadcasted."},"embedded_subtitles":{"type":"array","items":{"type":"object","x-required":["name","language_code","language_channel"],"properties":{"name":{"type":"string","description":"A name for this live stream closed caption track."},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the live stream closed caption track. Max 255 characters."},"language_code":{"type":"string","description":"The language of the closed caption stream. Value must be BCP 47 compliant.","default":"en"},"language_channel":{"type":"string","description":"CEA-608 caption channel to read data from.","default":"cc1","enum":["cc1","cc2","cc3","cc4"]}}},"description":"Describes the embedded closed caption configuration of the incoming live stream."},"generated_subtitles":{"type":"array","items":{"type":"object","x-required":["name","language_code"],"properties":{"name":{"type":"string","description":"A name for this live stream subtitle track."},"passthrough":{"type":"string","description":"Arbitrary metadata set for the live stream subtitle track. Max 255 characters."},"language_code":{"type":"string","description":"The language to generate subtitles in.","default":"en","enum":["en","en-US"]},"transcription_vocabulary_ids":{"type":"array","items":{"type":"string"},"description":"Unique identifiers for existing Transcription Vocabularies to use while generating subtitles for the live stream. If the Transcription Vocabularies provided collectively have more than 1000 phrases, only the first 1000 phrases will be included."}}},"description":"Configure the incoming live stream to include subtitles created with automatic speech recognition. Each Asset created from a live stream with `generated_subtitles` configured will automatically receive two text tracks. The first of these will have a `text_source` value of `generated_live`, and will be available with `ready` status as soon as the stream is live. The second text track will have a `text_source` value of `generated_live_final` and will contain subtitles with improved accuracy, timing, and formatting. However, `generated_live_final` tracks will not be available in `ready` status until the live stream ends. If an Asset has both `generated_live` and `generated_live_final` tracks that are `ready`, then only the `generated_live_final` track will be included during playback."},"reconnect_window":{"type":"number","format":"float","default":60,"minimum":0,"maximum":1800,"description":"When live streaming software disconnects from Mux, either intentionally or due to a drop in the network, the Reconnect Window is the time in seconds that Mux should wait for the streaming software to reconnect before considering the live stream finished and completing the recorded asset. **Max**: 1800s (30 minutes).\\n\\nIf not specified directly, Standard Latency streams have a Reconnect Window of 60 seconds; Reduced and Low Latency streams have a default of 0 seconds, or no Reconnect Window. For that reason, we suggest specifying a value other than zero for Reduced and Low Latency streams.\\n\\nReduced and Low Latency streams with a Reconnect Window greater than zero will insert slate media into the recorded asset while waiting for the streaming software to reconnect or when there are brief interruptions in the live stream media. When using a Reconnect Window setting higher than 60 seconds with a Standard Latency stream, we highly recommend enabling slate with the `use_slate_for_standard_latency` option.\\n"},"use_slate_for_standard_latency":{"type":"boolean","format":"boolean","default":false,"description":"By default, Standard Latency live streams do not have slate media inserted while waiting for live streaming software to reconnect to Mux. Setting this to true enables slate insertion on a Standard Latency stream."},"reconnect_slate_url":{"type":"string","description":"The URL of the image file that Mux should download and use as slate media during interruptions of the live stream media. This file will be downloaded each time a new recorded asset is created from the live stream. If this is not set, the default slate media will be used."},"reduced_latency":{"type":"boolean","format":"boolean","deprecated":true,"x-mux-doc-decorators":["hidden"],"description":"This field is deprecated. Please use `latency_mode` instead. Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Set this if you want lower latency for your live stream. See the [Reduce live stream latency guide](https://docs.mux.com/guides/reduce-live-stream-latency) to understand the tradeoffs."},"low_latency":{"type":"boolean","format":"boolean","deprecated":true,"x-mux-doc-decorators":["hidden"],"description":"This field is deprecated. Please use `latency_mode` instead. Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Setting this option will enable compatibility with the LL-HLS specification for low-latency streaming. This typically has lower latency than Reduced Latency streams, and cannot be combined with Reduced Latency."},"simulcast_targets":{"type":"array","description":"Each Simulcast Target contains configuration details to broadcast (or \\"restream\\") a live stream to a third-party streaming service. [See the Stream live to 3rd party platforms guide](https://docs.mux.com/guides/stream-live-to-3rd-party-platforms).","items":{"type":"object","x-required":["id","url","status"],"properties":{"id":{"type":"string","description":"ID of the Simulcast Target"},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set when creating a simulcast target."},"status":{"type":"string","enum":["idle","starting","broadcasting","errored"],"description":"The current status of the simulcast target. See Statuses below for detailed description.\\n  * `idle`: Default status. When the parent live stream is in disconnected status, simulcast targets will be idle state.\\n  * `starting`: The simulcast target transitions into this state when the parent live stream transition into connected state.\\n  * `broadcasting`: The simulcast target has successfully connected to the third party live streaming service and is pushing video to that service.\\n  * `errored`: The simulcast target encountered an error either while attempting to connect to the third party live streaming service, or mid-broadcasting. When a simulcast target has this status it will have an `error_severity` field with more details about the error.\\n"},"stream_key":{"type":"string","description":"Stream Key represents a stream identifier on the third party live streaming service to send the parent live stream to. Only used for RTMP(s) simulcast destinations."},"url":{"type":"string","description":"The RTMP(s) or SRT endpoint for a simulcast destination.\\n* For RTMP(s) destinations, this should include the application name for the third party live streaming service, for example: `rtmp://live.example.com/app`.\\n* For SRT destinations, this should be a fully formed SRT connection string, for example: `srt://srt-live.example.com:1234?streamid={stream_key}&passphrase={srt_passphrase}`.\\n\\nNote: SRT simulcast targets can only be used when an source is connected over SRT.\\n"},"error_severity":{"type":"string","enum":["normal","fatal"],"description":"The severity of the error encountered by the simulcast target.\\nThis field is only set when the simulcast target is in the `errored` status.\\nSee the values of severities below and their descriptions.\\n  * `normal`: The simulcast target encountered an error either while attempting to connect to the third party live streaming service, or mid-broadcasting. A simulcast may transition back into the broadcasting state if a connection with the service can be re-established.\\n  * `fatal`: The simulcast target is incompatible with the current input to the parent live stream. No further attempts to this simulcast target will be made for the current live stream asset.\\n"}}}},"latency_mode":{"type":"string","enum":["low","reduced","standard"],"description":"Latency is the time from when the streamer transmits a frame of video to when you see it in the player. Set this as an alternative to setting low latency or reduced latency flags."},"test":{"type":"boolean","format":"boolean","description":"True means this live stream is a test live stream. Test live streams can be used to help evaluate the Mux Video APIs for free. There is no limit on the number of test live streams, but they are watermarked with the Mux logo, and limited to 5 minutes. The test live stream is disabled after the stream is active for 5 mins and the recorded asset also deleted after 24 hours."},"max_continuous_duration":{"type":"integer","format":"int32","default":43200,"minimum":60,"maximum":43200,"description":"The time in seconds a live stream may be continuously active before being disconnected. Defaults to 12 hours."},"srt_passphrase":{"type":"string","description":"Unique key used for encrypting a stream to a Mux SRT endpoint."},"active_ingest_protocol":{"type":"string","enum":["rtmp","srt"],"description":"The protocol used for the active ingest stream. This is only set when the live stream is active."},"connected":{"type":"boolean"},"recording":{"type":"boolean"}}},"attempts":{"type":"array","description":"Attempts for sending out the webhook event","items":{"type":"object","properties":{"webhook_id":{"type":"integer","description":"Unique identifier for the webhook"},"response_status_code":{"type":"integer","description":"HTTP response status code for the webhook attempt"},"response_headers":{"type":"object","description":"HTTP response headers for the webhook attempt"},"response_body":{"type":["string","null"],"description":"HTTP response body for the webhook attempt"},"max_attempts":{"description":"Max attempts number for the webhook attempt","type":"integer"},"id":{"description":"Unique identifier for the webhook attempt","type":"string"},"created_at":{"description":"Time the webhook request was attempted","type":"string","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"address":{"description":"URL address for the webhook attempt","type":"string"}}}},"request_id":{"type":["string","null"],"deprecated":true},"accessor":{"type":["string","null"],"deprecated":true},"accessor_source":{"type":["string","null"],"deprecated":true}},"required":["type","id","created_at","object","environment","data","attempts"]},"example":{"active_asset_id":"dhVg8x9021nCDo6Ep6uFdLoWbgea63","connected":true,"created_at":1653654003,"id":"sY7b7fW01LImWpoOv2oiVROwHv5Y","latency_mode":"standard","max_continuous_duration":300,"new_asset_settings":{"playback_policies":["public"]},"playback_ids":[{"id":"uNbxnGLKJ00yfbijDO8COxTOyVKT01xpxW","policy":"public"}],"recent_asset_ids":["SqQnqz6s5MBuXGvJaUWdXuXM93J9Q2yv"],"reconnect_window":60,"status":"idle","stream_key":"8366fc71-b4e4-1f64-56be-c71b5b54"}},"video.live_stream.warning":{"description":"This live stream event fires when Mux has encountered a non-fatal issue. There is no disruption to the live stream ingest and playback. At this time, the event is only fired when Mux is unable to download an image from the URL set as `reconnect_slate_url` parameter value.","payload":{"type":"object","properties":{"type":{"type":"string","description":"Type for the webhook event"},"id":{"type":"string","description":"Unique identifier for the event"},"created_at":{"type":"string","description":"Time the event was created","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"object":{"type":"object","properties":{"type":{"type":"string"},"id":{"type":"string"}},"required":["type","id"]},"environment":{"type":"object","properties":{"name":{"type":"string","description":"Name for the environment"},"id":{"type":"string","description":"Unique identifier for the environment"}},"required":["name","id"]},"data":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier for the Live Stream. Max 255 characters."},"stream_key":{"type":"string","description":"Unique key used for streaming to a Mux RTMP endpoint. This should be considered as sensitive as credentials, anyone with this stream key can begin streaming."},"active_asset_id":{"type":"string","description":"The Asset that is currently being created if there is an active broadcast."},"status":{"type":"string","enum":["active","idle","disabled"],"description":"`idle` indicates that there is no active broadcast. `active` indicates that there is an active broadcast and `disabled` status indicates that no future RTMP streams can be published."},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set for the asset. Max 255 characters."},"warning":{"type":"object","properties":{"type":{"type":"string"},"message":{"type":"string"}}}}},"attempts":{"type":"array","description":"Attempts for sending out the webhook event","items":{"type":"object","properties":{"webhook_id":{"type":"integer","description":"Unique identifier for the webhook"},"response_status_code":{"type":"integer","description":"HTTP response status code for the webhook attempt"},"response_headers":{"type":"object","description":"HTTP response headers for the webhook attempt"},"response_body":{"type":["string","null"],"description":"HTTP response body for the webhook attempt"},"max_attempts":{"description":"Max attempts number for the webhook attempt","type":"integer"},"id":{"description":"Unique identifier for the webhook attempt","type":"string"},"created_at":{"description":"Time the webhook request was attempted","type":"string","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"address":{"description":"URL address for the webhook attempt","type":"string"}}}},"request_id":{"type":["string","null"],"deprecated":true},"accessor":{"type":["string","null"],"deprecated":true},"accessor_source":{"type":["string","null"],"deprecated":true}},"required":["type","id","created_at","object","environment","data","attempts"]},"example":{"active_asset_id":"SqQnqz6s5MBuXGvJaUWdXuXM93J9Q2yv","connected":true,"created_at":1606259944,"id":"sY7b7fW01LImWpoOv2oiVROwHv5Y","latency_mode":"reduced","max_continuous_duration":43200,"new_asset_settings":{"master_access":"temporary","playback_policies":["signed"]},"passthrough":"mux","playback_ids":[{"id":"BdTpnH6KkY01U004fGsErAPvVaRP6sIxkR","policy":"signed"}],"recent_asset_ids":["kaYHEoG9HMtnEGXlVGNqk2UheY02","B01x902mrEJ006aBOnF7j01HVf3I"],"reconnect_window":60,"recording":true,"reduced_latency":true,"status":"idle","stream_key":"5d42bb65-91b5-bb65-4ebf-5d42bb65"}},"video.live_stream.simulcast_target.created":{"description":"A new simulcast target has been created for this live stream.","payload":{"type":"object","properties":{"type":{"type":"string","description":"Type for the webhook event"},"id":{"type":"string","description":"Unique identifier for the event"},"created_at":{"type":"string","description":"Time the event was created","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"object":{"type":"object","properties":{"type":{"type":"string"},"id":{"type":"string"}},"required":["type","id"]},"environment":{"type":"object","properties":{"name":{"type":"string","description":"Name for the environment"},"id":{"type":"string","description":"Unique identifier for the environment"}},"required":["name","id"]},"data":{"type":"object","x-required":["id","url","status"],"properties":{"id":{"type":"string","description":"ID of the Simulcast Target"},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set when creating a simulcast target."},"status":{"type":"string","enum":["idle","starting","broadcasting","errored"],"description":"The current status of the simulcast target. See Statuses below for detailed description.\\n  * `idle`: Default status. When the parent live stream is in disconnected status, simulcast targets will be idle state.\\n  * `starting`: The simulcast target transitions into this state when the parent live stream transition into connected state.\\n  * `broadcasting`: The simulcast target has successfully connected to the third party live streaming service and is pushing video to that service.\\n  * `errored`: The simulcast target encountered an error either while attempting to connect to the third party live streaming service, or mid-broadcasting. When a simulcast target has this status it will have an `error_severity` field with more details about the error.\\n"},"stream_key":{"type":"string","description":"Stream Key represents a stream identifier on the third party live streaming service to send the parent live stream to. Only used for RTMP(s) simulcast destinations."},"url":{"type":"string","description":"The RTMP(s) or SRT endpoint for a simulcast destination.\\n* For RTMP(s) destinations, this should include the application name for the third party live streaming service, for example: `rtmp://live.example.com/app`.\\n* For SRT destinations, this should be a fully formed SRT connection string, for example: `srt://srt-live.example.com:1234?streamid={stream_key}&passphrase={srt_passphrase}`.\\n\\nNote: SRT simulcast targets can only be used when an source is connected over SRT.\\n"},"error_severity":{"type":"string","enum":["normal","fatal"],"description":"The severity of the error encountered by the simulcast target.\\nThis field is only set when the simulcast target is in the `errored` status.\\nSee the values of severities below and their descriptions.\\n  * `normal`: The simulcast target encountered an error either while attempting to connect to the third party live streaming service, or mid-broadcasting. A simulcast may transition back into the broadcasting state if a connection with the service can be re-established.\\n  * `fatal`: The simulcast target is incompatible with the current input to the parent live stream. No further attempts to this simulcast target will be made for the current live stream asset.\\n"},"live_stream_id":{"type":"string","description":"Unique identifier for the Live Stream. Max 255 characters."}}},"attempts":{"type":"array","description":"Attempts for sending out the webhook event","items":{"type":"object","properties":{"webhook_id":{"type":"integer","description":"Unique identifier for the webhook"},"response_status_code":{"type":"integer","description":"HTTP response status code for the webhook attempt"},"response_headers":{"type":"object","description":"HTTP response headers for the webhook attempt"},"response_body":{"type":["string","null"],"description":"HTTP response body for the webhook attempt"},"max_attempts":{"description":"Max attempts number for the webhook attempt","type":"integer"},"id":{"description":"Unique identifier for the webhook attempt","type":"string"},"created_at":{"description":"Time the webhook request was attempted","type":"string","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"address":{"description":"URL address for the webhook attempt","type":"string"}}}},"request_id":{"type":["string","null"],"deprecated":true},"accessor":{"type":["string","null"],"deprecated":true},"accessor_source":{"type":["string","null"],"deprecated":true}},"required":["type","id","created_at","object","environment","data","attempts"]},"example":{"event_created_at":1655157600984,"id":"M02qDeGhvyHEvRjEsV3oFxCWxHanB00g","live_stream_id":"qT014mUk64mTULVJDtYgK7012csz0","passthrough":"mux","status":"idle","stream_key":"1234h678k","url":"rtmp://rtmp.platform.com"}},"video.live_stream.simulcast_target.idle":{"description":"When the parent live stream is `\'disconnected\'`, all simulcast targets will have be `\'idle\'`.","payload":{"type":"object","properties":{"type":{"type":"string","description":"Type for the webhook event"},"id":{"type":"string","description":"Unique identifier for the event"},"created_at":{"type":"string","description":"Time the event was created","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"object":{"type":"object","properties":{"type":{"type":"string"},"id":{"type":"string"}},"required":["type","id"]},"environment":{"type":"object","properties":{"name":{"type":"string","description":"Name for the environment"},"id":{"type":"string","description":"Unique identifier for the environment"}},"required":["name","id"]},"data":{"type":"object","x-required":["id","url","status"],"properties":{"id":{"type":"string","description":"ID of the Simulcast Target"},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set when creating a simulcast target."},"status":{"type":"string","enum":["idle","starting","broadcasting","errored"],"description":"The current status of the simulcast target. See Statuses below for detailed description.\\n  * `idle`: Default status. When the parent live stream is in disconnected status, simulcast targets will be idle state.\\n  * `starting`: The simulcast target transitions into this state when the parent live stream transition into connected state.\\n  * `broadcasting`: The simulcast target has successfully connected to the third party live streaming service and is pushing video to that service.\\n  * `errored`: The simulcast target encountered an error either while attempting to connect to the third party live streaming service, or mid-broadcasting. When a simulcast target has this status it will have an `error_severity` field with more details about the error.\\n"},"stream_key":{"type":"string","description":"Stream Key represents a stream identifier on the third party live streaming service to send the parent live stream to. Only used for RTMP(s) simulcast destinations."},"url":{"type":"string","description":"The RTMP(s) or SRT endpoint for a simulcast destination.\\n* For RTMP(s) destinations, this should include the application name for the third party live streaming service, for example: `rtmp://live.example.com/app`.\\n* For SRT destinations, this should be a fully formed SRT connection string, for example: `srt://srt-live.example.com:1234?streamid={stream_key}&passphrase={srt_passphrase}`.\\n\\nNote: SRT simulcast targets can only be used when an source is connected over SRT.\\n"},"error_severity":{"type":"string","enum":["normal","fatal"],"description":"The severity of the error encountered by the simulcast target.\\nThis field is only set when the simulcast target is in the `errored` status.\\nSee the values of severities below and their descriptions.\\n  * `normal`: The simulcast target encountered an error either while attempting to connect to the third party live streaming service, or mid-broadcasting. A simulcast may transition back into the broadcasting state if a connection with the service can be re-established.\\n  * `fatal`: The simulcast target is incompatible with the current input to the parent live stream. No further attempts to this simulcast target will be made for the current live stream asset.\\n"},"live_stream_id":{"type":"string","description":"Unique identifier for the Live Stream. Max 255 characters."}}},"attempts":{"type":"array","description":"Attempts for sending out the webhook event","items":{"type":"object","properties":{"webhook_id":{"type":"integer","description":"Unique identifier for the webhook"},"response_status_code":{"type":"integer","description":"HTTP response status code for the webhook attempt"},"response_headers":{"type":"object","description":"HTTP response headers for the webhook attempt"},"response_body":{"type":["string","null"],"description":"HTTP response body for the webhook attempt"},"max_attempts":{"description":"Max attempts number for the webhook attempt","type":"integer"},"id":{"description":"Unique identifier for the webhook attempt","type":"string"},"created_at":{"description":"Time the webhook request was attempted","type":"string","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"address":{"description":"URL address for the webhook attempt","type":"string"}}}},"request_id":{"type":["string","null"],"deprecated":true},"accessor":{"type":["string","null"],"deprecated":true},"accessor_source":{"type":["string","null"],"deprecated":true}},"required":["type","id","created_at","object","environment","data","attempts"]},"example":{"event_created_at":1655157600984,"id":"M02qDeGhvyHEvRjEsV3oFxCWxHanB00g","live_stream_id":"qT014mUk64mTULVJDtYgK7012csz0","passthrough":"mux","status":"idle","stream_key":"1234h678k","url":"rtmp://rtmp.platform.com"}},"video.live_stream.simulcast_target.starting":{"description":"When the parent live stream fires `\'connected\'` then the simulcast targets transition to `\'starting\'`.","payload":{"type":"object","properties":{"type":{"type":"string","description":"Type for the webhook event"},"id":{"type":"string","description":"Unique identifier for the event"},"created_at":{"type":"string","description":"Time the event was created","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"object":{"type":"object","properties":{"type":{"type":"string"},"id":{"type":"string"}},"required":["type","id"]},"environment":{"type":"object","properties":{"name":{"type":"string","description":"Name for the environment"},"id":{"type":"string","description":"Unique identifier for the environment"}},"required":["name","id"]},"data":{"type":"object","x-required":["id","url","status"],"properties":{"id":{"type":"string","description":"ID of the Simulcast Target"},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set when creating a simulcast target."},"status":{"type":"string","enum":["idle","starting","broadcasting","errored"],"description":"The current status of the simulcast target. See Statuses below for detailed description.\\n  * `idle`: Default status. When the parent live stream is in disconnected status, simulcast targets will be idle state.\\n  * `starting`: The simulcast target transitions into this state when the parent live stream transition into connected state.\\n  * `broadcasting`: The simulcast target has successfully connected to the third party live streaming service and is pushing video to that service.\\n  * `errored`: The simulcast target encountered an error either while attempting to connect to the third party live streaming service, or mid-broadcasting. When a simulcast target has this status it will have an `error_severity` field with more details about the error.\\n"},"stream_key":{"type":"string","description":"Stream Key represents a stream identifier on the third party live streaming service to send the parent live stream to. Only used for RTMP(s) simulcast destinations."},"url":{"type":"string","description":"The RTMP(s) or SRT endpoint for a simulcast destination.\\n* For RTMP(s) destinations, this should include the application name for the third party live streaming service, for example: `rtmp://live.example.com/app`.\\n* For SRT destinations, this should be a fully formed SRT connection string, for example: `srt://srt-live.example.com:1234?streamid={stream_key}&passphrase={srt_passphrase}`.\\n\\nNote: SRT simulcast targets can only be used when an source is connected over SRT.\\n"},"error_severity":{"type":"string","enum":["normal","fatal"],"description":"The severity of the error encountered by the simulcast target.\\nThis field is only set when the simulcast target is in the `errored` status.\\nSee the values of severities below and their descriptions.\\n  * `normal`: The simulcast target encountered an error either while attempting to connect to the third party live streaming service, or mid-broadcasting. A simulcast may transition back into the broadcasting state if a connection with the service can be re-established.\\n  * `fatal`: The simulcast target is incompatible with the current input to the parent live stream. No further attempts to this simulcast target will be made for the current live stream asset.\\n"},"live_stream_id":{"type":"string","description":"Unique identifier for the Live Stream. Max 255 characters."}}},"attempts":{"type":"array","description":"Attempts for sending out the webhook event","items":{"type":"object","properties":{"webhook_id":{"type":"integer","description":"Unique identifier for the webhook"},"response_status_code":{"type":"integer","description":"HTTP response status code for the webhook attempt"},"response_headers":{"type":"object","description":"HTTP response headers for the webhook attempt"},"response_body":{"type":["string","null"],"description":"HTTP response body for the webhook attempt"},"max_attempts":{"description":"Max attempts number for the webhook attempt","type":"integer"},"id":{"description":"Unique identifier for the webhook attempt","type":"string"},"created_at":{"description":"Time the webhook request was attempted","type":"string","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"address":{"description":"URL address for the webhook attempt","type":"string"}}}},"request_id":{"type":["string","null"],"deprecated":true},"accessor":{"type":["string","null"],"deprecated":true},"accessor_source":{"type":["string","null"],"deprecated":true}},"required":["type","id","created_at","object","environment","data","attempts"]},"example":{"event_created_at":1655157600984,"id":"M02qDeGhvyHEvRjEsV3oFxCWxHanB00g","live_stream_id":"qT014mUk64mTULVJDtYgK7012csz0","passthrough":"mux","status":"starting","stream_key":"1234h678k","url":"rtmp://rtmp.platform.com"}},"video.live_stream.simulcast_target.broadcasting":{"description":"This fires when Mux has successfully connected to the simulcast target and has begun pushing content to that third party.","payload":{"type":"object","properties":{"type":{"type":"string","description":"Type for the webhook event"},"id":{"type":"string","description":"Unique identifier for the event"},"created_at":{"type":"string","description":"Time the event was created","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"object":{"type":"object","properties":{"type":{"type":"string"},"id":{"type":"string"}},"required":["type","id"]},"environment":{"type":"object","properties":{"name":{"type":"string","description":"Name for the environment"},"id":{"type":"string","description":"Unique identifier for the environment"}},"required":["name","id"]},"data":{"type":"object","x-required":["id","url","status"],"properties":{"id":{"type":"string","description":"ID of the Simulcast Target"},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set when creating a simulcast target."},"status":{"type":"string","enum":["idle","starting","broadcasting","errored"],"description":"The current status of the simulcast target. See Statuses below for detailed description.\\n  * `idle`: Default status. When the parent live stream is in disconnected status, simulcast targets will be idle state.\\n  * `starting`: The simulcast target transitions into this state when the parent live stream transition into connected state.\\n  * `broadcasting`: The simulcast target has successfully connected to the third party live streaming service and is pushing video to that service.\\n  * `errored`: The simulcast target encountered an error either while attempting to connect to the third party live streaming service, or mid-broadcasting. When a simulcast target has this status it will have an `error_severity` field with more details about the error.\\n"},"stream_key":{"type":"string","description":"Stream Key represents a stream identifier on the third party live streaming service to send the parent live stream to. Only used for RTMP(s) simulcast destinations."},"url":{"type":"string","description":"The RTMP(s) or SRT endpoint for a simulcast destination.\\n* For RTMP(s) destinations, this should include the application name for the third party live streaming service, for example: `rtmp://live.example.com/app`.\\n* For SRT destinations, this should be a fully formed SRT connection string, for example: `srt://srt-live.example.com:1234?streamid={stream_key}&passphrase={srt_passphrase}`.\\n\\nNote: SRT simulcast targets can only be used when an source is connected over SRT.\\n"},"error_severity":{"type":"string","enum":["normal","fatal"],"description":"The severity of the error encountered by the simulcast target.\\nThis field is only set when the simulcast target is in the `errored` status.\\nSee the values of severities below and their descriptions.\\n  * `normal`: The simulcast target encountered an error either while attempting to connect to the third party live streaming service, or mid-broadcasting. A simulcast may transition back into the broadcasting state if a connection with the service can be re-established.\\n  * `fatal`: The simulcast target is incompatible with the current input to the parent live stream. No further attempts to this simulcast target will be made for the current live stream asset.\\n"},"live_stream_id":{"type":"string","description":"Unique identifier for the Live Stream. Max 255 characters."}}},"attempts":{"type":"array","description":"Attempts for sending out the webhook event","items":{"type":"object","properties":{"webhook_id":{"type":"integer","description":"Unique identifier for the webhook"},"response_status_code":{"type":"integer","description":"HTTP response status code for the webhook attempt"},"response_headers":{"type":"object","description":"HTTP response headers for the webhook attempt"},"response_body":{"type":["string","null"],"description":"HTTP response body for the webhook attempt"},"max_attempts":{"description":"Max attempts number for the webhook attempt","type":"integer"},"id":{"description":"Unique identifier for the webhook attempt","type":"string"},"created_at":{"description":"Time the webhook request was attempted","type":"string","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"address":{"description":"URL address for the webhook attempt","type":"string"}}}},"request_id":{"type":["string","null"],"deprecated":true},"accessor":{"type":["string","null"],"deprecated":true},"accessor_source":{"type":["string","null"],"deprecated":true}},"required":["type","id","created_at","object","environment","data","attempts"]},"example":{"event_created_at":1655157600984,"id":"M02qDeGhvyHEvRjEsV3oFxCWxHanB00g","live_stream_id":"qT014mUk64mTULVJDtYgK7012csz0","passthrough":"mux","status":"broadcasting","stream_key":"1234h678k","url":"rtmp://rtmp.platform.com"}},"video.live_stream.simulcast_target.errored":{"description":"This fires when Mux has encountered an error either while attempting to connect to the third party streaming service or while broadcasting. Mux will try to re-establish the connection and if it does successfully the simulcast target will transition back to `\'broadcasting\'`.","payload":{"type":"object","properties":{"type":{"type":"string","description":"Type for the webhook event"},"id":{"type":"string","description":"Unique identifier for the event"},"created_at":{"type":"string","description":"Time the event was created","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"object":{"type":"object","properties":{"type":{"type":"string"},"id":{"type":"string"}},"required":["type","id"]},"environment":{"type":"object","properties":{"name":{"type":"string","description":"Name for the environment"},"id":{"type":"string","description":"Unique identifier for the environment"}},"required":["name","id"]},"data":{"type":"object","x-required":["id","url","status"],"properties":{"id":{"type":"string","description":"ID of the Simulcast Target"},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set when creating a simulcast target."},"status":{"type":"string","enum":["idle","starting","broadcasting","errored"],"description":"The current status of the simulcast target. See Statuses below for detailed description.\\n  * `idle`: Default status. When the parent live stream is in disconnected status, simulcast targets will be idle state.\\n  * `starting`: The simulcast target transitions into this state when the parent live stream transition into connected state.\\n  * `broadcasting`: The simulcast target has successfully connected to the third party live streaming service and is pushing video to that service.\\n  * `errored`: The simulcast target encountered an error either while attempting to connect to the third party live streaming service, or mid-broadcasting. When a simulcast target has this status it will have an `error_severity` field with more details about the error.\\n"},"stream_key":{"type":"string","description":"Stream Key represents a stream identifier on the third party live streaming service to send the parent live stream to. Only used for RTMP(s) simulcast destinations."},"url":{"type":"string","description":"The RTMP(s) or SRT endpoint for a simulcast destination.\\n* For RTMP(s) destinations, this should include the application name for the third party live streaming service, for example: `rtmp://live.example.com/app`.\\n* For SRT destinations, this should be a fully formed SRT connection string, for example: `srt://srt-live.example.com:1234?streamid={stream_key}&passphrase={srt_passphrase}`.\\n\\nNote: SRT simulcast targets can only be used when an source is connected over SRT.\\n"},"error_severity":{"type":"string","enum":["normal","fatal"],"description":"The severity of the error encountered by the simulcast target.\\nThis field is only set when the simulcast target is in the `errored` status.\\nSee the values of severities below and their descriptions.\\n  * `normal`: The simulcast target encountered an error either while attempting to connect to the third party live streaming service, or mid-broadcasting. A simulcast may transition back into the broadcasting state if a connection with the service can be re-established.\\n  * `fatal`: The simulcast target is incompatible with the current input to the parent live stream. No further attempts to this simulcast target will be made for the current live stream asset.\\n"},"live_stream_id":{"type":"string","description":"Unique identifier for the Live Stream. Max 255 characters."}}},"attempts":{"type":"array","description":"Attempts for sending out the webhook event","items":{"type":"object","properties":{"webhook_id":{"type":"integer","description":"Unique identifier for the webhook"},"response_status_code":{"type":"integer","description":"HTTP response status code for the webhook attempt"},"response_headers":{"type":"object","description":"HTTP response headers for the webhook attempt"},"response_body":{"type":["string","null"],"description":"HTTP response body for the webhook attempt"},"max_attempts":{"description":"Max attempts number for the webhook attempt","type":"integer"},"id":{"description":"Unique identifier for the webhook attempt","type":"string"},"created_at":{"description":"Time the webhook request was attempted","type":"string","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"address":{"description":"URL address for the webhook attempt","type":"string"}}}},"request_id":{"type":["string","null"],"deprecated":true},"accessor":{"type":["string","null"],"deprecated":true},"accessor_source":{"type":["string","null"],"deprecated":true}},"required":["type","id","created_at","object","environment","data","attempts"]},"example":{"event_created_at":1655157600984,"id":"M02qDeGhvyHEvRjEsV3oFxCWxHanB00g","live_stream_id":"qT014mUk64mTULVJDtYgK7012csz0","passthrough":"mux","status":"errored","stream_key":"1234h678k","url":"rtmp://rtmp.platform.com"}},"video.live_stream.simulcast_target.deleted":{"description":"This simulcast target has been deleted.","payload":{"type":"object","properties":{"type":{"type":"string","description":"Type for the webhook event"},"id":{"type":"string","description":"Unique identifier for the event"},"created_at":{"type":"string","description":"Time the event was created","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"object":{"type":"object","properties":{"type":{"type":"string"},"id":{"type":"string"}},"required":["type","id"]},"environment":{"type":"object","properties":{"name":{"type":"string","description":"Name for the environment"},"id":{"type":"string","description":"Unique identifier for the environment"}},"required":["name","id"]},"data":{"type":"object","x-required":["id","url","status"],"properties":{"id":{"type":"string","description":"ID of the Simulcast Target"},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set when creating a simulcast target."},"status":{"type":"string","enum":["idle","starting","broadcasting","errored"],"description":"The current status of the simulcast target. See Statuses below for detailed description.\\n  * `idle`: Default status. When the parent live stream is in disconnected status, simulcast targets will be idle state.\\n  * `starting`: The simulcast target transitions into this state when the parent live stream transition into connected state.\\n  * `broadcasting`: The simulcast target has successfully connected to the third party live streaming service and is pushing video to that service.\\n  * `errored`: The simulcast target encountered an error either while attempting to connect to the third party live streaming service, or mid-broadcasting. When a simulcast target has this status it will have an `error_severity` field with more details about the error.\\n"},"stream_key":{"type":"string","description":"Stream Key represents a stream identifier on the third party live streaming service to send the parent live stream to. Only used for RTMP(s) simulcast destinations."},"url":{"type":"string","description":"The RTMP(s) or SRT endpoint for a simulcast destination.\\n* For RTMP(s) destinations, this should include the application name for the third party live streaming service, for example: `rtmp://live.example.com/app`.\\n* For SRT destinations, this should be a fully formed SRT connection string, for example: `srt://srt-live.example.com:1234?streamid={stream_key}&passphrase={srt_passphrase}`.\\n\\nNote: SRT simulcast targets can only be used when an source is connected over SRT.\\n"},"error_severity":{"type":"string","enum":["normal","fatal"],"description":"The severity of the error encountered by the simulcast target.\\nThis field is only set when the simulcast target is in the `errored` status.\\nSee the values of severities below and their descriptions.\\n  * `normal`: The simulcast target encountered an error either while attempting to connect to the third party live streaming service, or mid-broadcasting. A simulcast may transition back into the broadcasting state if a connection with the service can be re-established.\\n  * `fatal`: The simulcast target is incompatible with the current input to the parent live stream. No further attempts to this simulcast target will be made for the current live stream asset.\\n"},"live_stream_id":{"type":"string","description":"Unique identifier for the Live Stream. Max 255 characters."}}},"attempts":{"type":"array","description":"Attempts for sending out the webhook event","items":{"type":"object","properties":{"webhook_id":{"type":"integer","description":"Unique identifier for the webhook"},"response_status_code":{"type":"integer","description":"HTTP response status code for the webhook attempt"},"response_headers":{"type":"object","description":"HTTP response headers for the webhook attempt"},"response_body":{"type":["string","null"],"description":"HTTP response body for the webhook attempt"},"max_attempts":{"description":"Max attempts number for the webhook attempt","type":"integer"},"id":{"description":"Unique identifier for the webhook attempt","type":"string"},"created_at":{"description":"Time the webhook request was attempted","type":"string","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"address":{"description":"URL address for the webhook attempt","type":"string"}}}},"request_id":{"type":["string","null"],"deprecated":true},"accessor":{"type":["string","null"],"deprecated":true},"accessor_source":{"type":["string","null"],"deprecated":true}},"required":["type","id","created_at","object","environment","data","attempts"]},"example":{"event_created_at":1655157600984,"id":"M02qDeGhvyHEvRjEsV3oFxCWxHanB00g","live_stream_id":"qT014mUk64mTULVJDtYgK7012csz0","passthrough":"mux","status":"idle","stream_key":"1234h678k","url":"rtmp://rtmp.platform.com"}},"video.live_stream.simulcast_target.updated":{"description":"This simulcast target has been updated.","payload":{"type":"object","properties":{"type":{"type":"string","description":"Type for the webhook event"},"id":{"type":"string","description":"Unique identifier for the event"},"created_at":{"type":"string","description":"Time the event was created","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"object":{"type":"object","properties":{"type":{"type":"string"},"id":{"type":"string"}},"required":["type","id"]},"environment":{"type":"object","properties":{"name":{"type":"string","description":"Name for the environment"},"id":{"type":"string","description":"Unique identifier for the environment"}},"required":["name","id"]},"data":{"type":"object","x-required":["id","url","status"],"properties":{"id":{"type":"string","description":"ID of the Simulcast Target"},"passthrough":{"type":"string","description":"Arbitrary user-supplied metadata set when creating a simulcast target."},"status":{"type":"string","enum":["idle","starting","broadcasting","errored"],"description":"The current status of the simulcast target. See Statuses below for detailed description.\\n  * `idle`: Default status. When the parent live stream is in disconnected status, simulcast targets will be idle state.\\n  * `starting`: The simulcast target transitions into this state when the parent live stream transition into connected state.\\n  * `broadcasting`: The simulcast target has successfully connected to the third party live streaming service and is pushing video to that service.\\n  * `errored`: The simulcast target encountered an error either while attempting to connect to the third party live streaming service, or mid-broadcasting. When a simulcast target has this status it will have an `error_severity` field with more details about the error.\\n"},"stream_key":{"type":"string","description":"Stream Key represents a stream identifier on the third party live streaming service to send the parent live stream to. Only used for RTMP(s) simulcast destinations."},"url":{"type":"string","description":"The RTMP(s) or SRT endpoint for a simulcast destination.\\n* For RTMP(s) destinations, this should include the application name for the third party live streaming service, for example: `rtmp://live.example.com/app`.\\n* For SRT destinations, this should be a fully formed SRT connection string, for example: `srt://srt-live.example.com:1234?streamid={stream_key}&passphrase={srt_passphrase}`.\\n\\nNote: SRT simulcast targets can only be used when an source is connected over SRT.\\n"},"error_severity":{"type":"string","enum":["normal","fatal"],"description":"The severity of the error encountered by the simulcast target.\\nThis field is only set when the simulcast target is in the `errored` status.\\nSee the values of severities below and their descriptions.\\n  * `normal`: The simulcast target encountered an error either while attempting to connect to the third party live streaming service, or mid-broadcasting. A simulcast may transition back into the broadcasting state if a connection with the service can be re-established.\\n  * `fatal`: The simulcast target is incompatible with the current input to the parent live stream. No further attempts to this simulcast target will be made for the current live stream asset.\\n"},"live_stream_id":{"type":"string","description":"Unique identifier for the Live Stream. Max 255 characters."}}},"attempts":{"type":"array","description":"Attempts for sending out the webhook event","items":{"type":"object","properties":{"webhook_id":{"type":"integer","description":"Unique identifier for the webhook"},"response_status_code":{"type":"integer","description":"HTTP response status code for the webhook attempt"},"response_headers":{"type":"object","description":"HTTP response headers for the webhook attempt"},"response_body":{"type":["string","null"],"description":"HTTP response body for the webhook attempt"},"max_attempts":{"description":"Max attempts number for the webhook attempt","type":"integer"},"id":{"description":"Unique identifier for the webhook attempt","type":"string"},"created_at":{"description":"Time the webhook request was attempted","type":"string","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"address":{"description":"URL address for the webhook attempt","type":"string"}}}},"request_id":{"type":["string","null"],"deprecated":true},"accessor":{"type":["string","null"],"deprecated":true},"accessor_source":{"type":["string","null"],"deprecated":true}},"required":["type","id","created_at","object","environment","data","attempts"]},"example":{"event_created_at":1655157600984,"id":"M02qDeGhvyHEvRjEsV3oFxCWxHanB00g","live_stream_id":"qT014mUk64mTULVJDtYgK7012csz0","passthrough":"mux","status":"starting","stream_key":"1234h678k","url":"rtmp://rtmp.platform.com"}},"video.delivery.high_traffic":{"description":"Alert for high traffic video delivery.","payload":{"type":"object","properties":{"type":{"type":"string","description":"Type for the webhook event"},"id":{"type":"string","description":"Unique identifier for the event"},"created_at":{"type":"string","description":"Time the event was created","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"object":{"type":"object","properties":{"type":{"type":"string"},"id":{"type":"string"}},"required":["type","id"]},"environment":{"type":"object","properties":{"name":{"type":"string","description":"Name for the environment"},"id":{"type":"string","description":"Unique identifier for the environment"}},"required":["name","id"]},"data":{"type":"object","properties":{"data":{"type":"array","items":{"type":"object","x-required":["asset_id","asset_state","asset_resolution_tier","asset_encoding_tier","asset_duration","created_at","delivered_seconds","delivered_seconds_by_resolution"],"properties":{"live_stream_id":{"type":"string","description":"Unique identifier for the live stream that created the asset."},"asset_id":{"type":"string","description":"Unique identifier for the asset."},"passthrough":{"type":"string","description":"The `passthrough` value for the asset."},"created_at":{"type":"integer","format":"int32","description":"Time at which the asset was created. Measured in seconds since the Unix epoch."},"deleted_at":{"type":"integer","format":"int32","description":"If exists, time at which the asset was deleted. Measured in seconds since the Unix epoch."},"asset_state":{"type":"string","enum":["ready","errored","deleted"],"description":"The state of the asset."},"asset_duration":{"type":"number","format":"double","description":"The duration of the asset in seconds."},"asset_resolution_tier":{"type":"string","enum":["audio-only","720p","1080p","1440p","2160p"],"description":"The resolution tier that the asset was ingested at, affecting billing for ingest & storage"},"asset_encoding_tier":{"type":"string","deprecated":true,"enum":["smart","baseline","premium"],"description":"This field is deprecated. Please use `asset_video_quality` instead. The encoding tier that the asset was ingested at. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"asset_video_quality":{"type":"string","enum":["basic","plus","premium"],"description":"The video quality that the asset was ingested at. This field replaces `asset_encoding_tier`. [See the video quality guide for more details.](https://docs.mux.com/guides/use-video-quality-levels)"},"delivered_seconds":{"type":"number","format":"double","description":"Total number of delivered seconds during this time window."},"delivered_seconds_by_resolution":{"type":"object","description":"Seconds delivered broken into resolution tiers. Each tier will only be displayed if there was content delivered in the tier.","properties":{"tier_2160p":{"type":"number","format":"double","description":"Total number of delivered seconds during this time window that had a resolution larger than the 1440p tier (over 4,194,304 pixels total)."},"tier_1440p":{"type":"number","format":"double","description":"Total number of delivered seconds during this time window that had a resolution larger than the 1080p tier but less than or equal to the 2160p tier (over 2,073,600 and <= 4,194,304 pixels total)."},"tier_1080p":{"type":"number","format":"double","description":"Total number of delivered seconds during this time window that had a resolution larger than the 720p tier but less than or equal to the 1440p tier (over 921,600 and <= 2,073,600 pixels total)."},"tier_720p":{"type":"number","format":"double","description":"Total number of delivered seconds during this time window that had a resolution within the 720p tier (up to 921,600 pixels total, based on typical 1280x720)."},"tier_audio_only":{"type":"number","format":"double","description":"Total number of delivered seconds during this time window that had a resolution of audio only."}}}}}},"timeframe":{"type":"array","items":{"type":"integer","format":"int64"}},"threshold":{"type":"integer","format":"int64","description":"Current threshold set for alerting"},"id":{"type":"string"}}},"attempts":{"type":"array","description":"Attempts for sending out the webhook event","items":{"type":"object","properties":{"webhook_id":{"type":"integer","description":"Unique identifier for the webhook"},"response_status_code":{"type":"integer","description":"HTTP response status code for the webhook attempt"},"response_headers":{"type":"object","description":"HTTP response headers for the webhook attempt"},"response_body":{"type":["string","null"],"description":"HTTP response body for the webhook attempt"},"max_attempts":{"description":"Max attempts number for the webhook attempt","type":"integer"},"id":{"description":"Unique identifier for the webhook attempt","type":"string"},"created_at":{"description":"Time the webhook request was attempted","type":"string","format":"date-time","example":"2022-01-01T00:00:00.000000Z"},"address":{"description":"URL address for the webhook attempt","type":"string"}}}},"request_id":{"type":["string","null"],"deprecated":true},"accessor":{"type":["string","null"],"deprecated":true},"accessor_source":{"type":["string","null"],"deprecated":true}},"required":["type","id","created_at","object","environment","data","attempts"]},"example":{"data":[{"asset_duration":3625.038089,"asset_id":"NOJMWDxhMmwcrnHf673VVGH7xqPmpRfyJh4iI8ZU","asset_state":"ready","created_at":1646421952,"delivered_seconds":3}],"id":"3hlbbvuTPvG1Mt76TCRWWtdDR6GsTnj5XSVwJBE2ujkyZF006V","threshold":1,"timeframe":[1655161367,1655162267]},"x-mux-doc-decorators":["hidden"]}}}}}');(a=c||(c={})).MUX="mux",a.CLEAR="clear",(s=l||(l={})).HELP="help",s.LOGIN="login",s.ASSETS="assets",s.LIVE_STREAMS="live-streams",s.WEBHOOKS="webhooks",s.WATCH="watch",s.ASSET="asset",(r=h||(h={})).LIST="list",r.CREATE="create",r.RETRIEVE="retrieve",(o=u||(u={})).LIST="list",o.CREATE="create",(m||(m={})).TRIGGER="trigger",(n=f||(f={})).Asset="Asset",n.LiveStream="LiveStream",(d=y||(y={})).LIST_URLS="--list-urls",d.ENABLE_MASTER="--enable-master";let E=H.Hb.l.J,C={...Object.fromEntries(Object.entries(E).map(e=>{let[t,i]=e;return[t,{type:t,request_id:null,object:{type:t.split(".")[0],id:"obj-".concat(O())},id:O(),environment:{name:"TEST_ENVIRONMENT",id:"ABCDEF"},data:i.example||function(e,t){var i;let a=t.payload.properties,s={};return(null===(i=a.data)||void 0===i?void 0:i.properties)&&Object.entries(a.data.properties).forEach(e=>{var t,i;let[r,o]=e;(null===(t=a.data["x-required"])||void 0===t?void 0:t.includes(r))&&(s[r]=function(e,t,i){switch(e){case"string":if("status"===i)return"ready";if("resolution_tier"===i)return"1080p";if("encoding_tier"===i)return"smart";if("mp4_support"===i||"master_access"===i)return"none";if("ingest_type"===i)return"on_demand_url";return t||"example-string";case"integer":if("created_at"===i)return Math.floor(Date.now()/1e3);return 0;case"number":if("duration"===i)return 10.01;if(null==i?void 0:i.includes("frame_rate"))return 29.97;return 0;case"boolean":if("test"===i)return!0;return!1;case"array":if("playback_ids"===i)return[{policy:"public",id:"pbid-".concat(O())}];if("tracks"===i)return[{type:"video",max_width:1920,max_height:1080,max_frame_rate:29.97,id:O(),duration:16.750067}];return[];case"object":return{};default:return null}}(o.type,null===(i=o.enum)||void 0===i?void 0:i[0],r))}),s}(0,i),created_at:new Date().toISOString(),attempts:[],accessor_source:null,accessor:null}]}))};function O(){return Array.from({length:32},()=>Math.floor(36*Math.random()).toString(36)).join("")}let F=Object.keys(E);async function z(e,t){let[i,...a]=e;i===m.TRIGGER?await N(a,t):t("error","Unknown action for webhooks: ".concat(i,". Available actions: trigger"))}async function N(e,t){let i,a;if(e.forEach((t,s)=>{"--type"===t&&e[s+1]&&(i=e[s+1]),"--url"===t&&e[s+1]&&(a=e[s+1])}),!i){t("error","Error: Please specify a webhook type using --type");return}if(!F.includes(i)){t("error","Error: Invalid webhook type. Valid types are: ".concat(F.join(", ")));return}let s=C[i];if(a)try{let e=await fetch("/api/console/webhook",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({url:a,payload:s})});if(!e.ok)throw Error("HTTP error! status: ".concat(e.status));let i=await e.json();t("output","Webhook sent successfully to ".concat(a)),t("json",i)}catch(e){t("error","Error sending webhook: ".concat(e))}else t("output","Webhook payload for ".concat(i,":")),t("json",s)}let W=Object.values(l),V=Object.values(h),B=Object.values(y),K=Object.values(u),G=Object.values(m);function Y(e){let t=e.toLowerCase().split(" ");if(1===t.length)return Object.values(c).filter(e=>e.startsWith(t[0]));if(t[0]===c.MUX){if(2===t.length)return W.filter(e=>e.startsWith(t[1]));if(t.length>=3)switch(t[1]){case l.ASSETS:return V.filter(e=>e.startsWith(t[2]));case l.LIVE_STREAMS:return K.filter(e=>e.startsWith(t[2]));case l.WATCH:return["<PLAYBACK_ID>"];case l.ASSET:if(3===t.length)return["<ASSET_ID>"];if(4===t.length)return B.filter(e=>e.startsWith(t[3]));break;case l.WEBHOOKS:if(3===t.length)return G.filter(e=>e.startsWith(t[2]));if(t.length>3&&t[2]===m.TRIGGER){if("--type"===t[t.length-2])return F.filter(e=>e.toLowerCase().startsWith(t[t.length-1].toLowerCase()));return["--type","--url"].filter(e=>e.startsWith(t[t.length-1]))}}}return[]}function J(e){let{input:t,showSuggestions:i}=e,a=Y(t);if(t.startsWith("mux webhooks trigger --type")){var s;let e=(null===(s=t.split("--type ")[1])||void 0===s?void 0:s.trim())||"";if(e){let t=F.filter(t=>t.toLowerCase().includes(e.toLowerCase()));if(t.length>0)return(0,g.jsx)("div",{className:"mt-0.125 text-sm text-gray-47",children:t.map((e,t)=>(0,g.jsx)("div",{children:e},t))})}}return i&&0!==a.length?(0,g.jsx)("div",{className:"mt-0.125 text-sm text-gray-47",children:a.map((e,t)=>(0,g.jsx)("div",{children:e},t))}):null}let Z="https://api.mux.com";async function X(e,t,i){if(!t){i("error","Please log in first using: mux login");return}let a=e[0],s={"list-urls":e.includes(y.LIST_URLS),"enable-master":e.includes(y.ENABLE_MASTER)},r="asset-loading-".concat(Date.now());if(s["enable-master"]){i("loading","Enabling master access for asset ".concat(a,"..."),r);try{let e=await fetch("".concat(Z,"/video/v1/assets/").concat(a,"/master-access?environment_id=").concat(t.id),{method:"PUT",credentials:"include",headers:{"Content-Type":"application/json"},body:JSON.stringify({master_access:"temporary"})});if(!e.ok)throw Error("HTTP error! status: ".concat(e.status));let s=await e.json();i("json",s,r,f.Asset),i("output","Master access enabled successfully. Use `--list-urls` to view the master URL.",r);return}catch(e){i("error","Error enabling master access: ".concat(e),r);return}}i("loading","Fetching asset details for ".concat(a,"..."),r);try{let e=await fetch("".concat(Z,"/video/v1/assets/").concat(a,"?environment_id=").concat(t.id),{method:"GET",credentials:"include"});if(!e.ok)throw Error("HTTP error! status: ".concat(e.status));let o=await e.json();s["list-urls"]?await Q(o.data,i,r):i("json",o,r,f.Asset)}catch(e){i("error","Error retrieving asset: ".concat(e),r)}}async function Q(e,t,i){var a,s,r,o,n;let d="| Category | URL |\n| --- | --- |\n",p=null===(s=e.playback_ids)||void 0===s?void 0:null===(a=s.find(e=>"public"===e.policy))||void 0===a?void 0:a.id;p?d+="| {#4CAF50}**Playback**{/} [\uD83D\uDCD6](https://docs.mux.com/guides/video/play-videos) | |\n"+"| HLS | https://stream.mux.com/".concat(p,".m3u8 |\n")+"| | |\n| {#2196F3}**Static Thumbnails**{/} [\uD83D\uDCD6](https://docs.mux.com/guides/video/thumbnails-guide) | |\n"+"| PNG | https://image.mux.com/".concat(p,"/thumbnail.png |\n")+"| JPG | https://image.mux.com/".concat(p,"/thumbnail.jpg |\n")+"| WEBP | https://image.mux.com/".concat(p,"/thumbnail.webp |\n")+"| | |\n| {#FFC107}**Animated Thumbnails**{/} [\uD83D\uDCD6](https://docs.mux.com/guides/video/animated-thumbnails) | |\n"+"| GIF | https://image.mux.com/".concat(p,"/animated.gif |\n")+"| WEBP | https://image.mux.com/".concat(p,"/animated.webp |\n")+"| | |\n":d+="| {#FF5722}**Note**{/} | This asset does not have a public playback ID. [Learn more](https://docs.mux.com/guides/secure-video-playback) |\n| | |\n";let c=(null===(r=e.tracks)||void 0===r?void 0:r.filter(e=>"text"===e.type))||[];c.length>0?(d+="| {#9C27B0}**Text Tracks**{/} [\uD83D\uDCD6](https://docs.mux.com/guides/video/add-captions) | |\n",c.forEach(e=>{let t="generated_vod"===e.text_source?"".concat(e.name," (autogenerated)"):e.name;d+="| ".concat(t," VTT | https://stream.mux.com/").concat(p,"/text/").concat(e.id,".vtt |\n"),"generated_vod"===e.text_source&&(d+="| ".concat(t," Transcript | https://stream.mux.com/").concat(p,"/text/").concat(e.id,".txt |\n"))}),d+="| | |\n"):d+="| {#FF5722}**Note**{/} | This asset does not have any text tracks. [Learn more](https://docs.mux.com/guides/add-autogenerated-captions-and-use-transcripts) |\n| | |\n","none"!==e.mp4_support?(d+="| {#00BCD4}**Static Files**{/} [\uD83D\uDCD6](https://docs.mux.com/guides/video/mp4-support) | |\n",e.mp4_support.includes("capped-1080p")&&(d+="| 1080p MP4 | https://stream.mux.com/".concat(p,"/capped-1080p.mp4 |\n")),e.mp4_support.includes("audio-only")&&(d+="| Audio M4A | https://stream.mux.com/".concat(p,"/audio.m4a |\n"))):d+="| {#FF5722}**Note**{/} | Static MP4 URLs are not available for this asset. [Learn more](https://docs.mux.com/guides/enable-static-mp4-renditions) |\n",d+="| | |\n","temporary"===e.master_access?(d+="| {#E91E63}**Master**{/} [\uD83D\uDCD6](https://docs.mux.com/guides/video/master-access) | |\n",(null===(o=e.master)||void 0===o?void 0:o.status)==="ready"&&(null===(n=e.master)||void 0===n?void 0:n.url)?d+="| MP4 | ".concat(e.master.url," |\n"):d+="| {#FFC107}Status{/} | Master file is being prepared... |\n"):d+="| {#FF5722}**Note**{/} | Master MP4 URL is not available for this asset. [Learn more](https://docs.mux.com/guides/download-for-offline-editing) |\n",t("output",d,i)}async function $(e,t,i){if(!t){i("error","Please log in first using: mux login");return}let[a,...s]=e;switch(a){case h.LIST:let r="assets-list-loading-".concat(Date.now());i("loading","Fetching assets...",r);try{let e=await fetch("".concat(Z,"/video/v1/assets?environment_id=").concat(t.id),{method:"GET",credentials:"include"});if(!e.ok)throw Error("HTTP error! status: ".concat(e.status));let a=await e.json();return i("json",a,r,f.Asset),a}catch(e){i("error","Error listing assets: ".concat(e),r)}break;case h.CREATE:if(1!==s.length){i("error","Error: Please provide a public URL to the video file."),i("output","Usage: mux assets create <PUBLIC_URL>"),i("output","Note: You can use https://muxed.s3.amazonaws.com/leds.mp4 for testing.");return}let[o]=s,n="assets-create-loading-".concat(Date.now());i("loading","Creating asset...",n);try{let e=await fetch("".concat(Z,"/video/v1/assets?environment_id=").concat(t.id),{method:"POST",credentials:"include",headers:{"Content-Type":"application/json"},body:JSON.stringify({input:[{url:o}],playback_policy:["public"],test:!0})});if(!e.ok)throw Error("HTTP error! status: ".concat(e.status));let a=await e.json();i("json",a,n,f.Asset)}catch(e){i("error","Error creating asset: ".concat(e),n)}break;case h.RETRIEVE:if(1!==s.length){i("error","Error: Please provide an Asset ID."),i("output","Usage: mux assets retrieve <ASSET_ID>");return}let[d]=s,p="assets-retrieve-loading-".concat(Date.now());i("loading","Retrieving asset with ID: ".concat(d,"..."),p);try{let e=await fetch("".concat(Z,"/video/v1/assets/").concat(d,"?environment_id=").concat(t.id),{method:"GET",credentials:"include"});if(!e.ok)throw Error("HTTP error! status: ".concat(e.status));let a=await e.json();i("json",a,p,f.Asset)}catch(e){i("error","Error retrieving asset: ".concat(e),p)}break;default:i("error","Unknown action for assets: ".concat(a,". Available actions: list, create, retrieve"))}}function ee(e){e("output","\n  **Mux Developer Console**  \n  &nbsp;  \n  **Usage:** `mux <command> [options]`  \n  &nbsp;    \n  **Available commands:**  \n&nbsp;&nbsp;{#4CAF50}login{/}............Log in with Mux credentials  \n&nbsp;&nbsp;{#2196F3}assets{/}...........Manage Mux assets  \n&nbsp;&nbsp;{#FFC107}live-streams{/}.....Manage Mux live streams  \n&nbsp;&nbsp;{#9C27B0}help{/}.............Display help for mux or a specific command  \n  &nbsp;  \n  **Other commands:**  \n&nbsp;&nbsp;{#FF5722}clear{/}        Clear the console output  \n  &nbsp;  \n  Type `mux help <command>` for more information on a specific command.  \n      ".trim())}async function et(e,t,i){if(!t){i("error","Please log in first using: mux login");return}let[a,...s]=e;switch(a){case u.LIST:let r="live-streams-list-loading-".concat(Date.now());i("loading","Fetching live streams...",r);try{let e=await fetch("".concat(Z,"/video/v1/live-streams?environment_id=").concat(t.id),{method:"GET",credentials:"include"});if(!e.ok)throw Error("HTTP error! status: ".concat(e.status));let a=await e.json();i("json",a,r,f.LiveStream)}catch(e){i("error","Error listing live streams: ".concat(e),r)}break;case u.CREATE:let o="live-streams-create-loading-".concat(Date.now());i("loading","Creating live stream...",o);try{let e=await fetch("".concat(Z,"/video/v1/live-streams?environment_id=").concat(t.id),{method:"POST",credentials:"include",headers:{"Content-Type":"application/json"},body:JSON.stringify({playback_policy:["public"],new_asset_settings:{playback_policy:["public"]}})});if(!e.ok)throw Error("HTTP error! status: ".concat(e.status));let a=await e.json();i("json",a,o,f.LiveStream)}catch(e){i("error","Error creating live stream: ".concat(e),o)}break;default:i("error","Unknown action for live-streams: ".concat(a,". Available actions: list, create"))}}async function ei(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:20;for(let a=0;a<i;a++){try{let e=await fetch("https://api.mux.com/ui/v1/identity",{credentials:"include"});if(console.log("Polling attempt ".concat(a+1,":"),e.status,e.statusText),e.ok&&200===e.status){let t=await e.json();return console.log("Mux identity data:",t),t.data}401===e.status?console.log("User not logged in yet"):console.error("Unexpected response:",e.status,e.statusText)}catch(e){console.error("Error polling Mux identity:",e)}a<i-1&&(e(),await new Promise(e=>setTimeout(e,t)))}return null}let ea=["▱▱▱▱▱▱▱▱▱▱ ▷","▰▱▱▱▱▱▱▱▱▱ ▶","▰▰▱▱▱▱▱▱▱▱ ▷","▰▰▰▱▱▱▱▱▱▱ ▶","▰▰▰▰▱▱▱▱▱▱ ▷","▰▰▰▰▱▱▱▱▱▱ ▶","▰▰▰▰▰▱▱▱▱▱ ▷","▰▰▰▰▰▰▱▱▱▱ ▶","▰▰▰▰▰▰▰▱▱▱ ▷","▰▰▰▰▰▰▰▰▱▱ ▶","▰▰▰▰▰▰▰▰▰▱ ▶","▰▰▰▰▰▰▰▰▰▰ ▷"];async function es(e,t,i,a){if(0!==e.length){t("error","Error: The login command does not require any arguments."),t("output","Usage: mux login");return}let s="login-loading-".concat(Date.now());t("loading","Checking login status...",s);try{let e=await ei(()=>{},0,1);if(e){i(e);let r=await eo();r?(t("output","You are already logged in. Please select an environment:",s),await er(r,t,a)):t("error","Failed to fetch environments. Please try logging out and in again.",s);return}window.open("https://dashboard.mux.com/login","_blank");let r=0,o=setInterval(()=>{let e=ea[r];t("loading","Waiting for login completion...\n".concat(e),s),r=(r+1)%ea.length},200);if(e=await ei(()=>{},3e3,40),clearInterval(o),e){i(e),t("output","Login successful. Fetching available environments...",s);let r=await eo();r?await er(r,t,a):t("error","Failed to fetch environments. Please try logging in again.",s)}else t("error","Login process timed out or was cancelled. Please try again.",s)}catch(e){e instanceof Error?t("error","Login failed: ".concat(e.message)):t("error","Login failed: An unknown error occurred")}}async function er(e,t,i){let a=0,s="env-select-".concat(Date.now()),r=()=>{let i=5*Math.floor(a/5),r=Math.min(i+5,e.length),o=e.slice(i,r).map((e,t)=>{let s=i+t===a;return"".concat(s?"▶ ":"  ","{#").concat(s?"4CAF50":"D6E6F1","}").concat(e.name," (").concat(e.type,"){/}").concat(I)});for(;o.length<5;)o.push(I);let n=o.join("\n"),d=e.length,p="Showing ".concat(i+1,"-").concat(r," of ").concat(d," environments");t("env-select","\n".concat(I,"\n**Select an environment:**\n").concat(I,"\n").concat(n,"\n").concat(I,"\n{#4CAF50}").concat(p,"{/}\n{#4CAF50}Use ↑↓ to navigate, Enter to select{/}\n    ").trim(),s)};return r(),new Promise(o=>{let n=d=>{switch(d.preventDefault(),d.key){case"ArrowUp":a=(a-1+e.length)%e.length;break;case"ArrowDown":a=(a+1)%e.length;break;case"Enter":let p=e[a];i(p),t("output","Selected environment: {#4CAF50}".concat(p.name," (").concat(p.type,"){/}"),s),document.removeEventListener("keydown",n),o();return;default:return}r()};document.addEventListener("keydown",n)})}async function eo(){try{let e=await fetch("https://api.mux.com/ui/v1/environments",{headers:{"Content-Type":"application/json"},credentials:"include"});if(e.ok&&200===e.status){let{data:t}=await e.json();return t}throw Error("Failed to get environments")}catch(e){return e instanceof Error?console.error(e.message):console.error("An unknown error occurred"),null}}function en(e,t,i){let a=new CustomEvent("console:response",{detail:{command:e,response:t,success:i}});window.dispatchEvent(a)}let ed="\n**Welcome to the Mux developer console.**  \n&nbsp;  \nHere, you can try out Mux API capabilities and inspect the responses.  \n&nbsp;  \n- \uD83D\uDEDF View supported Mux commands: {#4CAF50}`mux help`{/}  \n- \uD83D\uDCDA Manage video assets: {#4CAF50}`mux assets [list|create]`{/}  \n- \uD83D\uDCFA Work with live streams: {#4CAF50}`mux live-streams [list|create]`{/}  \n- \uD83D\uDD14 Test webhooks: {#4CAF50}`mux webhooks`{/}  \n&nbsp;  \nTo get started, log in with your Mux credentials: {#4CAF50}`mux login`{/}  \n&nbsp;  \n**Note:** All assets will be created in test mode and deleted after 24 hours.\n".trim();function ep(){var e;let[t,i]=(0,b.useState)(""),[a,s]=(0,b.useState)([]),[r,o]=(0,b.useState)(-1),n=(0,b.useRef)(null),d=(0,b.useRef)(null),p=(0,b.useRef)(null),[h,u]=(0,b.useState)(!1),[m,f]=(0,b.useState)(!1),[y,_]=(0,b.useState)(null),{state:x,dispatch:k}=(0,w.o)(),[S,A]=(0,b.useState)(null),M=(e,t,i)=>"input"===e?(0,g.jsxs)("span",{children:["$ ","string"==typeof t?t:JSON.stringify(t)]}):"json"===e?(0,g.jsx)(P,{data:t,resourceType:i}):"loading"===e?(0,g.jsx)("span",{className:"whitespace-pre-wrap text-yellow-neon",children:"string"==typeof t?t:JSON.stringify(t)}):(0,g.jsx)(R,{content:t}),[q,j]=(0,b.useState)([{type:"output",content:M("output",ed)}]);(0,b.useEffect)(()=>{d.current&&(d.current.scrollTop=d.current.scrollHeight)},[q]),(0,b.useEffect)(()=>{if(p.current&&d.current){let e=d.current.getBoundingClientRect(),t=p.current.getBoundingClientRect();if(t.bottom>e.bottom){let i=Math.min(t.bottom-e.bottom+40,d.current.scrollHeight-d.current.clientHeight);d.current.scrollTop+=i}}},[t]);let L=(e,t,i,a)=>{j(s=>{let r=[...s];if(i){let e=r.findIndex(e=>e.id===i);-1!==e&&r.splice(e,1)}return r.push({type:e,content:M(e,t,a),id:i}),r})},D=async e=>{e.preventDefault();let a=t.trim();i(""),f(!1);let r=a.split(" ");L("input",a),function(e,t){let i=new CustomEvent("console:command",{detail:{command:e,args:t}});window.dispatchEvent(i)}(a,r),s(e=>[a,...e.slice(0,4)]),o(-1);let n=r[0];try{switch(n){case c.MUX:let e=await I(r.slice(1));e&&en(a,e,!0);break;case c.CLEAR:U();break;default:let t='Unknown command. Please use "mux" followed by a subcommand or "clear" to clear the console.';L("error",t),en(a,{error:t},!1)}}catch(e){en(a,{error:String(e)},!1),L("error","Error executing command: ".concat(e))}},U=()=>{j([])},I=async e=>{if(0===e.length)return ee(L),null;let t=e[0];switch(t){case l.HELP:return!function(e,t){if(0===e.length){ee(t);return}let i=e[0];switch(i){case"login":t("output","\n**Mux Login**\n\n**Usage:** mux {#4CAF50}login{/}\n\nValidates and saves Mux API credentials for subsequent commands.\n      ".trim());break;case"assets":t("output","\n**Mux Assets**  \n  &nbsp;  \n**Usage:** mux assets <action> [options]  \n  &nbsp;  \n**Actions:**\n  &nbsp;  \n&nbsp;&nbsp;{#4CAF50}list{/}.............List all assets  \n&nbsp;&nbsp;{#FFC107}create{/}...........Create a new asset  \n  &nbsp;  \n**Examples:**  \n  &nbsp;  \nmux assets list  \nmux assets create --url https://example.com/video.mp4  \n      ".trim());break;case"live-streams":t("output","\n**Mux Live Streams**\n  &nbsp;  \n**Usage:** mux live-streams <action> [options]\n  &nbsp;  \n**Actions:**\n&nbsp;&nbsp;{#4CAF50}list{/}.............List all live streams\n&nbsp;&nbsp;{#FFC107}create{/}...........Create a new live stream\n  &nbsp;  \n**Examples:**  \n  &nbsp;  \nmux live-streams list  \nmux live-streams create\n      ".trim());break;default:t("error","Unknown command: ".concat(i,". Type 'mux help' for available commands."))}}(e.slice(1),L),null;case l.LOGIN:return await es(e.slice(1),L,e=>k({type:"setMuxSession",payload:e}),A);case l.ASSETS:return await $(e.slice(1),S,L);case l.LIVE_STREAMS:return await et(e.slice(1),S,L);case l.WEBHOOKS:return await z(e.slice(1),L);case l.WATCH:if(2!==e.length)return L("error","Usage: mux watch <PLAYBACK_ID>"),null;let i=e[1];if("string"==typeof i)return _(i),L("output","Starting video playback. Press Space to play/pause, Esc to exit."),{playbackId:i};return L("error","Invalid playback ID. Please provide a valid string."),null;case l.ASSET:if(e.length<2)return L("error","Usage: mux asset <ASSET_ID> [--list-urls]"),null;return await X(e.slice(1),S,L);default:let a="Unknown subcommand: ".concat(t,". Type 'mux help' for available subcommands.");return L("error",a),{error:a}}},H=e=>{!e.target.closest(".select-text")&&n.current&&n.current.focus()};return(0,b.useEffect)(()=>{let e=e=>{(e.metaKey||e.ctrlKey)&&"`"===e.key&&(e.preventDefault(),u(e=>!e))};return window.addEventListener("keydown",e),()=>{window.removeEventListener("keydown",e)}},[]),(0,v.createPortal)((0,g.jsx)(g.Fragment,{children:(0,g.jsx)("div",{className:"fixed inset-x-0 bottom-0 z-40 h-1/2 transition-transform duration-even-longer ease-in-out-energetic ".concat(h?"translate-y-0":"translate-y-full"),children:(0,g.jsxs)("div",{className:"flex h-full flex-col",children:[(0,g.jsxs)("div",{className:"flex items-center justify-between bg-gray-10 px-0.5 py-0.25",children:[(0,g.jsxs)("div",{className:"flex items-center font-mono uppercase leading-mono",children:[(0,g.jsx)("span",{className:"text-putty",children:"Mux Developer Console"}),(0,g.jsx)("span",{className:"ml-0.25 rounded-0.125 bg-green px-0.125 py-0.125 text-xs text-charcoal",children:"BETA"})]}),(0,g.jsx)("button",{onClick:()=>{u(!1)},className:"text-putty focus:outline-none","aria-label":"Close Console",children:"✕"})]}),(0,g.jsx)("div",{className:"flex-grow overflow-y-auto bg-charcoal px-0.5 font-mono text-sm leading-mono text-putty",onClick:H,onKeyDown:e=>{("Enter"===e.key||" "===e.key)&&H(e)},role:"button",tabIndex:0,"aria-label":"Mux Developer Console",children:y?(0,g.jsx)(T,{playbackId:y,onExit:()=>{_(null),L("output","Video playback ended.")}}):(0,g.jsxs)("div",{ref:d,className:"flex min-h-full flex-col",role:"log","aria-label":"Console Output",children:[(0,g.jsx)("div",{className:"flex-grow select-text","aria-live":"polite",children:q.map((e,t)=>(0,g.jsx)("div",{className:" ".concat("input"===e.type?"mt-0.25 text-green":""," ").concat("error"===e.type?"text-pink":""," ").concat("output"===e.type?"text-putty":""," "),children:e.content},t))}),(0,g.jsxs)("div",{className:"mt-0.5 bg-charcoal",children:[(0,g.jsxs)("form",{onSubmit:D,className:"sticky top-0 z-10 flex items-center bg-charcoal py-0.25",children:[(0,g.jsx)("label",{htmlFor:"console-input",className:"sr-only",children:"Console input"}),(0,g.jsx)("span",{className:"mr-0.25 text-putty","aria-hidden":"true",children:"$"}),(0,g.jsx)("input",{id:"console-input",ref:n,type:"text",value:t,onChange:e=>{let t=e.target.value;i(t),f(t.length>0)},onKeyDown:e=>{if("Tab"===e.key){e.preventDefault(),f(!0);let a=function(e){let t=Y(e);if(0===t.length)return e;let i=e.split(" "),a=i[i.length-1],s=t.reduce((e,t)=>{for(;!t.startsWith(e);)e=e.slice(0,-1);return e},t[0]);return s.length>a.length?(i[i.length-1]=s,i.join(" ")+(1===t.length?" ":"")):e}(t);i(a),setTimeout(()=>{n.current&&(n.current.selectionStart=a.length,n.current.selectionEnd=a.length)},0)}else if("ArrowUp"===e.key){if(e.preventDefault(),r<a.length-1){let e=r+1;o(e),i(a[e])}}else if("ArrowDown"===e.key&&(e.preventDefault(),r>-1)){let e=r-1;o(e),i(-1===e?"":a[e])}},className:"flex-grow bg-transparent text-putty caret-transparent outline-none",placeholder:"Type Mux commands here...","aria-describedby":"console-instructions",autoComplete:"off"}),(0,g.jsx)("span",{className:"pointer-events-none absolute animate-blink bg-putty",style:{height:"1.125rem",width:"1ch",left:(e=t.length,"".concat(2+e,"ch"))},"aria-hidden":"true"})]}),(0,g.jsx)("div",{id:"console-instructions",className:"sr-only",children:"Type Mux commands here. Use arrow up and down to navigate command history. Press Tab to autocomplete."}),(0,g.jsx)("div",{ref:p,className:"sticky top-0 overflow-y-auto",style:{minHeight:"350px"},children:(0,g.jsx)(J,{input:t,showSuggestions:m})})]})]})})]})})}),document.body)}},90482:function(e,t,i){"use strict";i.d(t,{DarkModeToggleProvider:function(){return h},Z:function(){return l}});var a=i(67647),s=i(62532);let r="themePreference";var o=i(56811);let n=()=>"undefined"==typeof localStorage?o.J.Server:"light"===localStorage[r]?o.J.Light:"dark"===localStorage[r]?o.J.Dark:("auto"===localStorage[r]||(console.warn("Failed to initialize theme in <head>"),localStorage[r]="auto"),o.J.Auto),d=()=>{var e;return void 0===window.matchMedia?[o.J.Auto,o.J.Dark,o.J.Light]:(null===(e=window.matchMedia("(prefers-color-scheme: dark)"))||void 0===e?void 0:e.matches)?[o.J.Auto,o.J.Light,o.J.Dark]:[o.J.Auto,o.J.Dark,o.J.Light]},p=e=>{if(e===o.J.Light)return o.Q.Light;if(e===o.J.Dark)return o.Q.Dark;if(e===o.J.Auto){var t,i;if(null===(t=(i=window).matchMedia)||void 0===t?void 0:t.call(i,"(prefers-color-scheme: dark)").matches)return o.Q.Dark}return o.Q.Light},c=(0,s.createContext)({preference:n(),theme:p(n()),preferenceCycle:d(),preferenceIndex:d().indexOf(n()),cyclePreference:()=>{},setPreference:()=>{}});var l=c;function h(e){let{children:t}=e,[i,l]=(0,s.useState)(n),[h,u]=(0,s.useState)(d),m=(0,s.useMemo)(()=>h.indexOf(i),[i,h]),[f,y]=(0,s.useState)(()=>p(i)),g=(0,s.useCallback)(e=>{l(e),y(p(e)),"undefined"!=typeof localStorage&&(e===o.J.Light&&(localStorage[r]="light"),e===o.J.Dark&&(localStorage[r]="dark"),e===o.J.Auto&&(localStorage[r]="auto"))},[]),b=(0,s.useCallback)(()=>{g(h[(m+1)%h.length])},[h,m,g]);(0,s.useEffect)(()=>{if(void 0===window.matchMedia)return()=>{};let e=e=>{u(d()),i===o.J.Auto&&(e.matches?y(o.Q.Dark):y(o.Q.Light))},t=window.matchMedia("(prefers-color-scheme: dark)");return t.addEventListener("change",e),()=>{t.removeEventListener("change",e)}},[i]),(0,s.useEffect)(()=>(f===o.Q.Light&&document.documentElement.classList.remove("dark"),f===o.Q.Dark&&document.documentElement.classList.add("dark"),()=>document.documentElement.classList.remove("dark")),[f]);let v=(0,s.useMemo)(()=>({preference:i,theme:f,preferenceCycle:h,preferenceIndex:m,cyclePreference:b,setPreference:g}),[i,f,h,m,b,g]);return(0,a.jsx)(c.Provider,{value:v,children:t})}},44437:function(e,t,i){"use strict";var a=i(67647),s=i(62532),r=i(40374),o=i(95234),n=i(17876),d=i(90482),p=i(56811);t.default=function(e){let{className:t=""}=e,{preference:i,theme:c,preferenceCycle:l,preferenceIndex:h,cyclePreference:u}=(0,s.useContext)(d.Z),m=(0,n.Z)();return(0,a.jsxs)("button",{type:"button",onClick:u,disabled:!m,"aria-label":"Cycle dark mode",className:(0,o.Z)(t,"items-center justify-center border-l border-putty pl-2.5 font-mono text-sm uppercase leading-mono text-black dark:border-black dark:text-white"),children:[(0,a.jsxs)("label",{className:(0,o.Z)("relative text-sm",m?"cursor-pointer":"cursor-default"),children:[(0,a.jsx)("span",{className:"pointer-events-none",children:"\xa0"}),Object.keys(p.J).map(e=>(0,a.jsx)("div",{className:(0,o.Z)("absolute right-0.25 top-0 transform-gpu transition duration-even-longer motion-reduce:transition-none",m&&e===i?"opacity-100":"opacity-0",m?e===l[(h+1)%l.length]?"translate-y-full":e===l[(h-1+l.length)%l.length]?"-translate-y-full":"translate-y-0":"translate-y-0"),children:e},e))]}),(0,a.jsxs)("div",{className:"relative",children:[(0,a.jsx)("span",{className:"pointer-events-none",children:"\xa0"}),(0,a.jsx)("span",{className:"absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2",children:(0,a.jsx)(r.T32,{className:(0,o.Z)("transform-gpu transition duration-even-longer motion-reduce:transition-none [&>*]:!stroke-current",m&&c!==p.Q.Light?"translate-y-1":"translate-y-0",m&&c===p.Q.Light?"opacity-100":"opacity-0")})}),(0,a.jsx)("span",{className:"absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2",children:(0,a.jsx)(r.E_K,{className:(0,o.Z)("transform-gpu transition duration-even-longer motion-reduce:transition-none [&>*]:!stroke-current",m&&c!==p.Q.Dark?"translate-y-1":"translate-y-0",m&&c===p.Q.Dark?"opacity-100":"opacity-0")})})]})]})}},41534:function(e,t,i){"use strict";var a=i(67647),s=i(62532),r=i(40374),o=i(95234),n=i(17876),d=i(90482),p=i(56811);t.default=function(e){let{className:t=""}=e,{preference:i,theme:c,setPreference:l}=(0,s.useContext)(d.Z),h=(0,n.Z)(),[u,m]=(0,s.useState)("");return(0,s.useEffect)(()=>{h&&m(i)},[h,i]),(0,a.jsxs)("div",{className:(0,o.Z)(t,"group/button relative flex h-full items-center justify-center"),children:[(0,a.jsxs)("select",{"aria-label":"Set dark mode",className:(0,o.Z)("peer absolute inset-0.125 appearance-none opacity-0",h?"cursor-pointer":"cursor-default"),value:u,disabled:!h,onChange:e=>l(e.target.value),children:[(0,a.jsx)("option",{value:p.J.Light,children:"Light"}),(0,a.jsx)("option",{value:p.J.Dark,children:"Dark"}),(0,a.jsx)("option",{value:p.J.Auto,children:"Auto"})]}),(0,a.jsxs)("span",{"aria-hidden":!0,className:(0,o.Z)("px-1 py-0.5","pointer-events-none relative inline-block overflow-hidden","peer-focus:outline peer-[:focus:not(:focus-visible)]:outline-none peer-[:focus-visible]:outline",!h&&"pointer-events-none text-gray-40"),children:[(0,a.jsx)("span",{className:"pointer-events-none",children:"\xa0"}),(0,a.jsx)("span",{className:"absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2",children:(0,a.jsx)(r.T32,{className:(0,o.Z)("transform-gpu transition duration-even-longer motion-reduce:transition-none [&>*]:!stroke-current",h&&c!==p.Q.Light?"translate-y-1":"translate-y-0",h&&c===p.Q.Light?"opacity-100":"opacity-0")})}),(0,a.jsx)("span",{className:"absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2",children:(0,a.jsx)(r.E_K,{className:(0,o.Z)("transform-gpu transition duration-even-longer motion-reduce:transition-none [&>*]:!stroke-current",h&&c!==p.Q.Dark?"translate-y-1":"translate-y-0",h&&c===p.Q.Dark?"opacity-100":"opacity-0")})})]})]})}},56811:function(e,t,i){"use strict";var a,s,r,o;i.d(t,{J:function(){return a},Q:function(){return s}}),(r=a||(a={})).Light="Light",r.Dark="Dark",r.Auto="Auto",r.Server="Server",(o=s||(s={}))[o.Light=0]="Light",o[o.Dark=1]="Dark"},37276:function(e,t,i){"use strict";let a;i.d(t,{GlobalProvider:function(){return f},o:function(){return y}});var s=i(67647),r=i(62532),o=i(42693);let n={};var d={setItem:(e,t)=>{n[e]=t;try{localStorage.setItem(e,t)}catch(e){console.log("Error setting localstorage",e)}return t},getItem:e=>{let t=n[e];if("undefined"!=typeof localStorage&&!t)try{t=localStorage.getItem(e)}catch(e){console.log("Error getting localstorage",e)}return t}};let p="docs.mux.code-langs.v1",c=(0,r.createContext)(),l={isMobileNavOpen:!1,codeLangs:"",exampleVideoFile:o.a$,exampleWaterMarkFile:o.XX,exampleAssetId:"",examplePlaybackId:"",muxTokenId:"",muxTokenSecret:"",muxSession:null},h=e=>{e({type:"setPostHydrateState",payload:{codeLangs:d.getItem(p)||l.codeLangs}})},u=async(e,t)=>{try{let t=await fetch("https://api.mux.com/ui/v1/identity",{credentials:"include"});if(t.ok&&200===t.status){let{data:i}=await t.json();e({type:"setMuxSession",payload:i})}else if(401!==t.status)throw Error("Failed to get Mux session state. Status: ".concat(t.status))}catch(i){console.error(i),t>0&&(a=setTimeout(()=>u(e,t-1),1e3))}},m=(e,t)=>{switch(t.type){case"openMobileNav":return{...e,isMobileNavOpen:!0};case"closeMobileNav":return{...e,isMobileNavOpen:!1};case"addCodeLang":{let i=t.payload,a=e.codeLangs.split(",").filter(e=>e!==i);a.unshift(i);let s=[...a.slice(0,3)].join(",");return d.setItem(p,s),{...e,codeLangs:s}}case"setExampleVideoFile":return{...e,exampleVideoFile:t.payload};case"setExampleAssetId":return{...e,exampleAssetId:t.payload};case"setExamplePlaybackId":return{...e,examplePlaybackId:t.payload};case"setMuxTokenid":return{...e,muxTokenId:t.payload};case"setMuxTokenSecret":return{...e,muxTokenSecret:t.payload};case"setMuxSession":return document.cookie="_mux_key=srrul1_muxsession_".concat(t.payload.token,"; max-age=session; domain=api.mux.com; path=/; secure; httponly; same-site=none"),{...e,muxSession:t.payload};case"setPostHydrateState":return{...e,...t.payload};default:throw Error("Do not know this action ".concat(t.type))}};function f(e){let{children:t}=e,[i,o]=(0,r.useReducer)(m,l);(0,r.useEffect)(()=>(h(o),u(o,3),()=>clearTimeout(a)),[o]);let n=(0,r.useMemo)(()=>({state:i,dispatch:o}),[i,o]);return(0,s.jsx)(c.Provider,{value:n,children:t})}let y=()=>(0,r.useContext)(c)||{state:{},dispatch:()=>{}}},17876:function(e,t,i){"use strict";var a=i(62532);t.Z=()=>{let[e,t]=(0,a.useState)(!1);return(0,a.useEffect)(()=>{t(!0)},[]),e}},88041:function(e,t,i){"use strict";var a=i(67647);i(62532),i(73823),t.default=()=>(0,a.jsx)(a.Fragment,{})},10175:function(){}},function(e){e.O(0,[1124,4281,1804,3761,3031,8927,4886,8879,7718,1744],function(){return e(e.s=2503)}),_N_E=e.O()}]);